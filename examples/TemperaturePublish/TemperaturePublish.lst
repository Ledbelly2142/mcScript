****** BUILD Of 'TemperaturePublish' (2016-08-31 7:48:51 AM)


****** EVENT HANDLERS
                                                                                              0:    0x0000   Address Priority 0 Event.   No Event defined.
                                                                                              1:    0x0069   Address Priority 1 Event.   Code for 'Publish' starts at 105.
                                                                                              2:    0x0000   Address Priority 2 Event.   No Event defined.
                                                                                              3:    0x0000   Address Priority 3 Event.   No Event defined.
                                                                                              4:    0x0000   Address Priority 4 Event.   No Event defined.
                                                                                              5:    0x0000   Address Priority 5 Event.   No Event defined.
                                                                                              6:    0x0000   Address Priority 6 Event.   No Event defined.
                                                                                              7:    0x0000   Address Priority 7 Event.   No Event defined.
                                                                                              8:    0x0000   Address Priority 8 Event.   No Event defined.
                                                                                              9:    0x0000   Address Priority 9 Event.   No Event defined.
                                                                                              10:   0x0000   Address Priority 10 Event.  No Event defined.
                                                                                              11:   0x0000   Address Priority 11 Event.  No Event defined.
                                                                                              12:   0x0000   Address Priority 12 Event.  No Event defined.
                                                                                              13:   0x0000   Address Priority 13 Event.  No Event defined.
                                                                                              14:   0x0000   Address Priority 14 Event.  No Event defined.
                                                                                              15:   0x0000   Address Priority 15 Event.  No Event defined.
                                                                                              16:   0x0000   Address Priority 16 Event.  No Event defined.
                                                                                              17:   0x0000   Address Priority 17 Event.  No Event defined.
                                                                                              18:   0x0000   Address Priority 18 Event.  No Event defined.
                                                                                              19:   0x0000   Address Priority 19 Event.  No Event defined.
                                                                                              20:   0x0000   Address Priority 20 Event.  No Event defined.
                                                                                              21:   0x0000   Address Priority 21 Event.  No Event defined.
                                                                                              22:   0x0000   Address Priority 22 Event.  No Event defined.
                                                                                              23:   0x0000   Address Priority 23 Event.  No Event defined.
                                                                                              24:   0x0000   Address Priority 24 Event.  No Event defined.
                                                                                              25:   0x0000   Address Priority 25 Event.  No Event defined.
                                                                                              26:   0x0000   Address Priority 26 Event.  No Event defined.
                                                                                              27:   0x0000   Address Priority 27 Event.  No Event defined.
                                                                                              28:   0x0000   Address Priority 28 Event.  No Event defined.
                                                                                              29:   0x0000   Address Priority 29 Event.  No Event defined.
                                                                                              30:   0x0000   Address Priority 30 Event.  No Event defined.
                                                                                              31:   0x0000   Address Priority 31 Event.  No Event defined.

****** RUNTIME INFORMATION
                                                                                              32:   0x01B7   ScriptSizeLS (Size of the code in 2-byte instructions = 439)
                                                                                              33:   0x0000   CodeSizeMS (Size of the code in 2-byte instructions = 439)
                                                                                              34:   0x0007   CodeSizeInBlocks = 7
                                                                                              35:   0x0002   StringSizeInBlocks = 2
                                                                                              36:   0x0000   Reserved
                                                                                              37:   0x0000   Reserved
                                                                                              38:   0x4863   Compile Date and Time 2016-08-31 07:48:51
                                                                                              39:   0x1F59   Compile Date and Time 2016-08-31 07:48:51
                                                                                              40:   0x0000   Reserved
                                                                                              41:   0x0000   Reserved
                                                                                              42:   0x0000   Reserved
                                                                                              43:   0x0000   Reserved
                                                                                              44:   0x0000   Reserved
                                                                                              45:   0x0000   PinMode Pin0=NotUsed  Pin1=NotUsed
                                                                                              46:   0x0000   PinMode Pin2=NotUsed  Pin3=NotUsed
                                                                                              47:   0x0000   PinMode Pin4=NotUsed  Pin5=NotUsed
                                                                                              48:   0x0000   PinMode Pin6=NotUsed  Pin7=NotUsed
                                                                                              49:   0x0000   PinMode Pin8=NotUsed   Pin9=NotUsed
                                                                                              50:   0x0000   PinMode Pin10=NotUsed   Pin11=NotUsed
                                                                                              51:   0x0000   PinMode Pin12=NotUsed   Pin13=NotUsed
                                                                                              52:   0x0000   PinMode Pin14=NotUsed   Pin15=NotUsed
                                                                                              53:   0x0000   PinMode Pin16=NotUsed   Pin17=NotUsed
                                                                                              54:   0x0000   PinMode Pin18=NotUsed   Pin19=NotUsed
                                                                                              55:   0x0000   PinMode Pin20=NotUsed   Pin21=NotUsed
                                                                                              56:   0x0000   PinMode Pin22=NotUsed   Pin23=NotUsed
                                                                                              57:   0x0000   Reserved
                                                                                              58:   0x0000   Reserved
                                                                                              59:   0x0000   Reserved
                                                                                              60:   0x0000   Reserved
                                                                                              61:   0x1800   IdleThread EntryPoint ValTypParams=0, RefTypParams=0
                                                                                              62:   0x0015   SystemIdle
                                                                                              63:   0x5002   BranchBack 62

****** CLASS INFORMATION
                                                                                              64:   0x0049   Class Descriptor for class 'Global'. Next Descriptor at 73.
                                                                                              65:   0x0000   Base Class 'Object' Value represent a pointer if >= 64 (0x40) or ClassType if < 64 (0).
                                                                                              66:   0x0000   Offset of RefObject data.(0).
                                                                                              67:   0x0004   Size of RefObject data.(4).
                                                                                              68:   0x0014   Size of all data.(20).
                                                                                              69:   0x6C47   Part of the class name 'Global'.
                                                                                              70:   0x626F   Part of the class name 'Global'.
                                                                                              71:   0x6C61   Part of the class name 'Global'.
                                                                                              72:   0x0000   Part of the class name 'Global'.
                                                                                              73:   0x0051   Class Descriptor for class 'Main'. Next Descriptor at 81.
                                                                                              74:   0x0000   Base Class 'Object' Value represent a pointer if >= 64 (0x40) or ClassType if < 64 (0).
                                                                                              75:   0x0000   Offset of RefObject data.(0).
                                                                                              76:   0x0000   Size of RefObject data.(0).
                                                                                              77:   0x0000   Size of all data.(0).
                                                                                              78:   0x614D   Part of the class name 'Main'.
                                                                                              79:   0x6E69   Part of the class name 'Main'.
                                                                                              80:   0x0000   Part of the class name 'Main'.
                                                                                              81:   0x005C   Class Descriptor for class 'TempSensor'. Next Descriptor at 92.
                                                                                              82:   0x0000   Base Class 'Object' Value represent a pointer if >= 64 (0x40) or ClassType if < 64 (0).
                                                                                              83:   0x0000   Offset of RefObject data.(0).
                                                                                              84:   0x0000   Size of RefObject data.(0).
                                                                                              85:   0x0000   Size of all data.(0).
                                                                                              86:   0x6554   Part of the class name 'TempSensor'.
                                                                                              87:   0x706D   Part of the class name 'TempSensor'.
                                                                                              88:   0x6553   Part of the class name 'TempSensor'.
                                                                                              89:   0x736E   Part of the class name 'TempSensor'.
                                                                                              90:   0x726F   Part of the class name 'TempSensor'.
                                                                                              91:   0x0000   Part of the class name 'TempSensor'.
                                                                                              92:   0x0064   Class Descriptor for class 'MQTT'. Next Descriptor at 100.
                                                                                              93:   0x0000   Base Class 'Object' Value represent a pointer if >= 64 (0x40) or ClassType if < 64 (0).
                                                                                              94:   0x0000   Offset of RefObject data.(0).
                                                                                              95:   0x0000   Size of RefObject data.(0).
                                                                                              96:   0x0000   Size of all data.(0).
                                                                                              97:   0x514D   Part of the class name 'MQTT'.
                                                                                              98:   0x5454   Part of the class name 'MQTT'.
                                                                                              99:   0x0000   Part of the class name 'MQTT'.
                                                                                              100:  0x0000   End Of Class Data.

****** APPLIACTION STATEMENTS
*************************************************************************************************************

000007  Class Main                                                                            101:  0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000008      
000009      Shared data As dataType
000010      
                                                                                              103:  0x0001                           TimeValue=1
                                                                                              104:  0x0400                           EventCategory=TimeInMinutes
000011      Shared Event Publish() RaiseEvent Every 1 Minutes                                 105:  0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000012          LedGreen = True                                                               106:  0x8001   PushConstU10            1 (0x0001)
                                                                                              107:  0x080A   PopAndSetDigitalPin     Pin10

000013          
000014          Select data                                                                   108:  0x000C   PushGlobal              
                                                                                              109:  0xC010   PushFieldI32            data
                                                                                              110:  0x0122   CaseComputed            
                                                                                              111:  0x0002                           CaseCommonClass=Byte
                                                                                              112:  0x0003                           NumberOfCaseEntries=3
                                                                                              113:  0x003D                           CaseElseBranch=175
                                                                                              114:  0x0002                           CaseValue=2
                                                                                              115:  0x0006                           CaseBranch=120
                                                                                              116:  0x0003                           CaseValue=3
                                                                                              117:  0x0018                           CaseBranch=138
                                                                                              118:  0x0004                           CaseValue=4
                                                                                              119:  0x002A                           CaseBranch=156

000015              Case dataType.UPTIME                                                      120:  0xE020   AllocateStackSpace      ValTypeSize=1, RefTypeSize=0

000016                  Dim Uptime As Integer = Device.Uptime()                               121:  0x00F9   DeviceUptime            
                                                                                              122:  0x9000   PopLocalI32             Uptime

000017                  MQTT.Publish("Uptime", Uptime)                                        123:  0x8409   PushLiteral             9
                                                                                              124:  0x8800   PushLocalI32            Uptime
                                                                                              125:  0x1404   Box                     BoxInteger
                                                                                              126:  0x000E   PushNothing             
                                                                                              127:  0x1CAF   BranchSubr              303

000018                  MQTT.BeaconPublish(dataType.UPTIME, Uptime)                           128:  0x8002   PushConstU10            2 (0x0002)
                                                                                              129:  0x8800   PushLocalI32            Uptime
                                                                                              130:  0x1404   Box                     BoxInteger
                                                                                              131:  0x000E   PushNothing             
                                                                                              132:  0x1CDB   BranchSubr              352

000019                  data = dataType.BATTVOLTAGE                                           133:  0x8003   PushConstU10            3 (0x0003)
                                                                                              134:  0x000C   PushGlobal              
                                                                                              135:  0xD010   PopFieldI32             data

                                                                                              136:  0xE420   FreeStackSpace          ValTypeSize=1, RefTypeSize=0
                                                                                              137:  0x402C   Branch                  182
000020              Case dataType.BATTVOLTAGE                                                 138:  0xE020   AllocateStackSpace      ValTypeSize=1, RefTypeSize=0

000021                  Dim BattVolt As Integer = Device.BatteryVoltage()                     139:  0x00ED   DeviceBatteryVoltage    
                                                                                              140:  0x9000   PopLocalI32             BattVolt

000022                  MQTT.Publish("BatteryVoltage", BattVolt)                              141:  0x840C   PushLiteral             12
                                                                                              142:  0x8800   PushLocalI32            BattVolt
                                                                                              143:  0x1404   Box                     BoxInteger
                                                                                              144:  0x000E   PushNothing             
                                                                                              145:  0x1C9D   BranchSubr              303

000023                  MQTT.BeaconPublish(dataType.BATTVOLTAGE, BattVolt)                    146:  0x8003   PushConstU10            3 (0x0003)
                                                                                              147:  0x8800   PushLocalI32            BattVolt
                                                                                              148:  0x1404   Box                     BoxInteger
                                                                                              149:  0x000E   PushNothing             
                                                                                              150:  0x1CC9   BranchSubr              352

000024                  data = dataType.TEMPERATURE                                           151:  0x8004   PushConstU10            4 (0x0004)
                                                                                              152:  0x000C   PushGlobal              
                                                                                              153:  0xD010   PopFieldI32             data

                                                                                              154:  0xE420   FreeStackSpace          ValTypeSize=1, RefTypeSize=0
                                                                                              155:  0x401A   Branch                  182
000025              Case dataType.TEMPERATURE                                                 156:  0xE020   AllocateStackSpace      ValTypeSize=1, RefTypeSize=0

000026                  Dim TempC As Float = TempSensor.GetTemp                               157:  0x000E   PushNothing             
                                                                                              158:  0x1C1C   BranchSubr              187
                                                                                              159:  0x9000   PopLocalI32             TempC

000027                  MQTT.Publish("Temperature", TempC)                                    160:  0x8411   PushLiteral             17
                                                                                              161:  0x8800   PushLocalI32            TempC
                                                                                              162:  0x1406   Box                     BoxFloat
                                                                                              163:  0x000E   PushNothing             
                                                                                              164:  0x1C8A   BranchSubr              303

000028                  MQTT.BeaconPublish(dataType.TEMPERATURE, TempC)                       165:  0x8004   PushConstU10            4 (0x0004)
                                                                                              166:  0x8800   PushLocalI32            TempC
                                                                                              167:  0x1406   Box                     BoxFloat
                                                                                              168:  0x000E   PushNothing             
                                                                                              169:  0x1CB6   BranchSubr              352

000029                  data = dataType.UPTIME                                                170:  0x8002   PushConstU10            2 (0x0002)
                                                                                              171:  0x000C   PushGlobal              
                                                                                              172:  0xD010   PopFieldI32             data

                                                                                              173:  0xE420   FreeStackSpace          ValTypeSize=1, RefTypeSize=0
                                                                                              174:  0x4007   Branch                  182
000030              Case Else                                                                 

000031                  MQTT.Publish("Status", "OnLine")                                      175:  0x8415   PushLiteral             21
                                                                                              176:  0x8418   PushLiteral             24
                                                                                              177:  0x000E   PushNothing             
                                                                                              178:  0x1C5C   BranchSubr              271

000032                  data = dataType.UPTIME                                                179:  0x8002   PushConstU10            2 (0x0002)
                                                                                              180:  0x000C   PushGlobal              
                                                                                              181:  0xD010   PopFieldI32             data

000033          End Select
000034          LedGreen = False                                                              182:  0x8000   PushConstU10            0 (0x0000)
                                                                                              183:  0x080A   PopAndSetDigitalPin     Pin10

000035      End Event                                                                         184:  0x0091   Return                  

000036  End Class                                                                             102:  0x0097   ReturnMe                


****** BLOCKS and VARIABLES for Main
    Block Class (Line 7:36)
        Main            Me              (ReadOnly, Offset=0)
        Object          MyBase          (ReadOnly, Offset=0)
        dataType        data            (SharedValTypVariableOffset=16)
        Block Event Publish (Line 11:35)
        End Block
        Total Size of Member data including base classes = 0.
    End Block


*************************************************************************************************************

000001  Class TempSensor                                                                      185:  0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000002      // Function returns the temperature in degree celcius or 
000003      // Float.NaN if something is wrong
000004      Shared Function GetTemp() As Float                                                187:  0x1800   EntryPoint              ValTypParams=0, RefTypParams=0
                                                                                              188:  0xE022   AllocateStackSpace      ValTypeSize=1, RefTypeSize=2

000005          // Define the properties of the I2C peripheral and device address
000006          Dim sensor As I2c
000007          sensor = I2c.Create(250000, Pin.SCL, Pin.SDA, 0x48)                           189:  0x0110   PushConstI32            250000 (0x0003D090)
                                                                                              190:  0xD090                           
                                                                                              191:  0x0003                           
                                                                                              192:  0x800D   PushConstU10            13 (0x000D)
                                                                                              193:  0x800E   PushConstU10            14 (0x000E)
                                                                                              194:  0x8048   PushConstU10            72 (0x0048)
                                                                                              195:  0x803B   PushConstU10            59 (0x003B)
                                                                                              196:  0x0010   ClassNew                
                                                                                              197:  0x9400   PopLocalRef             sensor

000008          
000009          // Power up the sensor and give it some time to settle
000010          Device.EnableTempSensor()                                                     198:  0x8001   PushConstU10            1 (0x0001)
                                                                                              199:  0x00F0   DeviceEnableTemp        

000011          Thread.Sleep(40000) // See page 13 of the datasheet                           200:  0x0110   PushConstI32            40000 (0x00009C40)
                                                                                              201:  0x9C40                           
                                                                                              202:  0x0000                           
                                                                                              203:  0x00D5   ThreadSleep             
                                                                                              204:  0xE420   FreeStackSpace          ValTypeSize=1, RefTypeSize=0

000012          
000013          // Read the sensor (only 2 bytes to read
000014          Dim res As ListOfByte = sensor.Read(2)                                        205:  0x8002   PushConstU10            2 (0x0002)
                                                                                              206:  0x8C00   PushLocalRef            sensor
                                                                                              207:  0x8001   PushConstU10            1 (0x0001)
                                                                                              208:  0x00E0   I2cDeviceRead           
                                                                                              209:  0x9401   PopLocalRef             res

000015          
000016          // See Tmp102 documentation how to interpret the data (page 8)
000017          Dim temp As Float = Float.NaN                                                 210:  0x0110   PushConstI32            -4194304 (0xFFC00000)
                                                                                              211:  0x0000                           
                                                                                              212:  0xFFC0                           
                                                                                              213:  0x9000   PopLocalI32             temp

000018          If res <> Nothing Then                                                        214:  0x8C01   PushLocalRef            res
                                                                                              215:  0x000E   PushNothing             
                                                                                              216:  0x000B   RefCmpNE                
                                                                                              217:  0x3C16   BranchFalse             240
                                                                                              218:  0xE020   AllocateStackSpace      ValTypeSize=1, RefTypeSize=0

000019              // Shift the partial part to the right nibble
000020              Dim part As Float = res(1) >> 4                                           219:  0x8001   PushConstU10            1 (0x0001)
                                                                                              220:  0x8C01   PushLocalRef            res
                                                                                              221:  0x00B4   ListItemGet             
                                                                                              222:  0x8004   PushConstU10            4 (0x0004)
                                                                                              223:  0x002F   IntShr                  
                                                                                              224:  0x007E   CvtIntToFlt             
                                                                                              225:  0x9001   PopLocalI32             part

000021              // Temperature partial is 1/16*n where n is between 0 and 15            
000022              part = part / 16                                                          226:  0x8801   PushLocalI32            part
                                                                                              227:  0xEA10   PushConstFlt            16.0
                                                                                              228:  0x003B   FltDiv                  
                                                                                              229:  0x9001   PopLocalI32             part

000023              // Sign extend the byte to an integer
000024              temp = res(0).SignExtend() + part                                         230:  0x8000   PushConstU10            0 (0x0000)
                                                                                              231:  0x8C01   PushLocalRef            res
                                                                                              232:  0x00B4   ListItemGet             
                                                                                              233:  0x8000   PushConstU10            0 (0x0000)
                                                                                              234:  0x0005   SignExtend              
                                                                                              235:  0x8801   PushLocalI32            part
                                                                                              236:  0x0078   CvtIntToFlt1            
                                                                                              237:  0x0039   FltAdd                  
                                                                                              238:  0x9000   PopLocalI32             temp

                                                                                              239:  0xE420   FreeStackSpace          ValTypeSize=1, RefTypeSize=0
000025          End If                                                                        

000026          
000027          // power off
000028          Device.DisableTempSensor()                                                    240:  0x8000   PushConstU10            0 (0x0000)
                                                                                              241:  0x00F0   DeviceEnableTemp        

000029          Return temp                                                                   242:  0x8800   PushLocalI32            temp
                                                                                              243:  0x0092   ReturnValType           

000030      End Function                                                                      244:  0x0093   Return0                 

000031      
000032      Shared Function GetDieTemp() As Float                                             245:  0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000033          // Just get the temperature and return
000034          Return Device.TempDie                                                         246:  0x00F7   DeviceTempDie           
                                                                                              247:  0x0092   ReturnValType           

000035      End Function                                                                      248:  0x0093   Return0                 

000036      
000037      Shared Function ToFarenheit(celcius As Float) As Float                            249:  0x1810   EntryPoint              ValTypParams=1, RefTypParams=0

000038          Return (celcius * 9) / 5 + 32                                                 250:  0x8800   PushLocalI32            celcius
                                                                                              251:  0xEA09   PushConstFlt            9.0
                                                                                              252:  0x003C   FltMul                  
                                                                                              253:  0xEA05   PushConstFlt            5.0
                                                                                              254:  0x003B   FltDiv                  
                                                                                              255:  0xEA20   PushConstFlt            32.0
                                                                                              256:  0x0039   FltAdd                  
                                                                                              257:  0x0092   ReturnValType           

000039      End Function                                                                      258:  0x0093   Return0                 

000040      
000041      Shared Function ToCelcius(farenheit As Float) As Float                            259:  0x1810   EntryPoint              ValTypParams=1, RefTypParams=0

000042          Return (farenheit - 32) * 5 / 9                                               260:  0x8800   PushLocalI32            farenheit
                                                                                              261:  0xEA20   PushConstFlt            32.0
                                                                                              262:  0x003F   FltSub                  
                                                                                              263:  0xEA05   PushConstFlt            5.0
                                                                                              264:  0x003C   FltMul                  
                                                                                              265:  0xEA09   PushConstFlt            9.0
                                                                                              266:  0x003B   FltDiv                  
                                                                                              267:  0x0092   ReturnValType           

000043      End Function                                                                      268:  0x0093   Return0                 

000044      
000045  End Class                                                                             186:  0x0097   ReturnMe                


****** BLOCKS and VARIABLES for TempSensor
    Block Class (Line 1:45)
        TempSensor      Me              (ReadOnly, Offset=0)
        Object          MyBase          (ReadOnly, Offset=0)
        Block Function GetTemp (Line 4:30)
            I2c             sensor          (LocalRefTypVariableOffset=0)
            ListOfByte      res             (LocalRefTypVariableOffset=1)
            Float           temp            (LocalValTypVariableOffset=0)
            Block If Then  (Line 18:25)
                Float           part            (LocalValTypVariableOffset=1)
            End Block
        End Block
        Block Function GetDieTemp (Line 32:35)
        End Block
        Block Function ToFarenheit (Line 37:39)
            Float           celcius         (LocalValTypVariableOffset=0)
        End Block
        Block Function ToCelcius (Line 41:43)
            Float           farenheit       (LocalValTypVariableOffset=0)
        End Block
        Total Size of Member data including base classes = 0.
    End Block


*************************************************************************************************************

000003  Enum dataType As Byte
000004      NONE = 0
000005      VERSION = 1 //default beacon data for MQTT
000006      UPTIME = 2
000007      BATTVOLTAGE = 3
000008      TEMPERATURE = 4
000009      TEMPERATURE2 = 5
000010      HUMIDITY = 6
000011      DEWPOINT = 7
000012      PRESSURE = 8
000013      ALTITUDE = 9
000014      MOTION = 10
000015      DOOR = 11
000016      KNOCK = 12
000017  End Enum

****** BLOCKS and VARIABLES for dataType
    Block Struct (Line 3:17)
        dataType        NONE            (Literal=0)
        dataType        VERSION         (Literal=1)
        dataType        UPTIME          (Literal=2)
        dataType        BATTVOLTAGE     (Literal=3)
        dataType        TEMPERATURE     (Literal=4)
        dataType        TEMPERATURE2    (Literal=5)
        dataType        HUMIDITY        (Literal=6)
        dataType        DEWPOINT        (Literal=7)
        dataType        PRESSURE        (Literal=8)
        dataType        ALTITUDE        (Literal=9)
        dataType        MOTION          (Literal=10)
        dataType        DOOR            (Literal=11)
        dataType        KNOCK           (Literal=12)
        Total Size of Member data including base classes = 0.
    End Block


*************************************************************************************************************

000019  Class MQTT                                                                            269:  0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000020      Shared mcUIDString As String
000021      
000022      Shared Sub Publish(topic As String, value As String)                              271:  0x1802   EntryPoint              ValTypParams=0, RefTypParams=2
                                                                                              272:  0xE001   AllocateStackSpace      ValTypeSize=0, RefTypeSize=1

000023          If mcUIDString = Nothing Then                                                 273:  0x000C   PushGlobal              
                                                                                              274:  0xC400   PushFieldRef            mcUIDString
                                                                                              275:  0x000E   PushNothing             
                                                                                              276:  0x000A   RefCmpEQ                
                                                                                              277:  0x3C06   BranchFalse             284

000024              mcUIDString = Device.mcUID().ToString("X8")                               278:  0x841B   PushLiteral             27
                                                                                              279:  0x00F8   DeviceUID               
                                                                                              280:  0x8004   PushConstU10            4 (0x0004)
                                                                                              281:  0x0069   StrFormat               
                                                                                              282:  0x000C   PushGlobal              
                                                                                              283:  0xD400   PopFieldRef             mcUIDString

000025          End If
000026          Dim text_string As ListOfByte = New ListOfByte()                              284:  0x800C   PushConstU10            12 (0x000C)
                                                                                              285:  0x0010   ClassNew                
                                                                                              286:  0x9402   PopLocalRef             text_string

000027          text_string.Add(value)                                                        287:  0x8C01   PushLocalRef            value
                                                                                              288:  0x8C02   PushLocalRef            text_string
                                                                                              289:  0x00A6   ListAddString           

000028          Lplan.Publish("MCThings/" + mcUIDString + "/" + topic, text_string)           290:  0x841D   PushLiteral             29
                                                                                              291:  0x000C   PushGlobal              
                                                                                              292:  0xC400   PushFieldRef            mcUIDString
                                                                                              293:  0x0056   StrAdd                  
                                                                                              294:  0x8421   PushLiteral             33
                                                                                              295:  0x0056   StrAdd                  
                                                                                              296:  0x8C00   PushLocalRef            topic
                                                                                              297:  0x0056   StrAdd                  
                                                                                              298:  0x8C02   PushLocalRef            text_string
                                                                                              299:  0x8000   PushConstU10            0 (0x0000)
                                                                                              300:  0x8000   PushConstU10            0 (0x0000)
                                                                                              301:  0x0101   LplanPublish            

000029      End Sub                                                                           302:  0x0091   Return                  

000030      
000031      Shared Sub Publish(topic As String, value As Object)                              303:  0x1802   EntryPoint              ValTypParams=0, RefTypParams=2
                                                                                              304:  0xE002   AllocateStackSpace      ValTypeSize=0, RefTypeSize=2

000032          Dim text As String = value.ToString()                                         305:  0x8C01   PushLocalRef            value
                                                                                              306:  0x0081   CvtObjToStr             
                                                                                              307:  0x9402   PopLocalRef             text

000033          If mcUIDString = Nothing Then                                                 308:  0x000C   PushGlobal              
                                                                                              309:  0xC400   PushFieldRef            mcUIDString
                                                                                              310:  0x000E   PushNothing             
                                                                                              311:  0x000A   RefCmpEQ                
                                                                                              312:  0x3C06   BranchFalse             319

000034              mcUIDString = Device.mcUID().ToString("X8")                               313:  0x841B   PushLiteral             27
                                                                                              314:  0x00F8   DeviceUID               
                                                                                              315:  0x8004   PushConstU10            4 (0x0004)
                                                                                              316:  0x0069   StrFormat               
                                                                                              317:  0x000C   PushGlobal              
                                                                                              318:  0xD400   PopFieldRef             mcUIDString

000035          End If
000036          Dim text_string As ListOfByte = New ListOfByte()                              319:  0x800C   PushConstU10            12 (0x000C)
                                                                                              320:  0x0010   ClassNew                
                                                                                              321:  0x9403   PopLocalRef             text_string

000037          text_string.Add(text)                                                         322:  0x8C02   PushLocalRef            text
                                                                                              323:  0x8C03   PushLocalRef            text_string
                                                                                              324:  0x00A6   ListAddString           

000038          Lplan.Publish("MCThings/" + mcUIDString + "/" + topic, text_string)           325:  0x841D   PushLiteral             29
                                                                                              326:  0x000C   PushGlobal              
                                                                                              327:  0xC400   PushFieldRef            mcUIDString
                                                                                              328:  0x0056   StrAdd                  
                                                                                              329:  0x8421   PushLiteral             33
                                                                                              330:  0x0056   StrAdd                  
                                                                                              331:  0x8C00   PushLocalRef            topic
                                                                                              332:  0x0056   StrAdd                  
                                                                                              333:  0x8C03   PushLocalRef            text_string
                                                                                              334:  0x8000   PushConstU10            0 (0x0000)
                                                                                              335:  0x8000   PushConstU10            0 (0x0000)
                                                                                              336:  0x0101   LplanPublish            

000039      End Sub                                                                           337:  0x0091   Return                  

000040      
000041      Shared Sub Publish_exact(topic As String, text As String)                         338:  0x1802   EntryPoint              ValTypParams=0, RefTypParams=2
                                                                                              339:  0xE001   AllocateStackSpace      ValTypeSize=0, RefTypeSize=1

000042          Dim text_String As ListOfByte = New ListOfByte()                              340:  0x800C   PushConstU10            12 (0x000C)
                                                                                              341:  0x0010   ClassNew                
                                                                                              342:  0x9402   PopLocalRef             text_String

000043          text_String.Add(text)                                                         343:  0x8C01   PushLocalRef            text
                                                                                              344:  0x8C02   PushLocalRef            text_String
                                                                                              345:  0x00A6   ListAddString           

000044          Lplan.Publish(topic, text_String)                                             346:  0x8C00   PushLocalRef            topic
                                                                                              347:  0x8C02   PushLocalRef            text_String
                                                                                              348:  0x8000   PushConstU10            0 (0x0000)
                                                                                              349:  0x8000   PushConstU10            0 (0x0000)
                                                                                              350:  0x0101   LplanPublish            

000045      End Sub                                                                           351:  0x0091   Return                  

000046      
000047      //**************************************************************************/
000048      //*!
000049      //    Encodes Float or Integer into 4 bytes of beacon data
000050      //    encoding is - byte 0 is data type (numeric value)
000051      //    Integer as Short (2 bytes) 
000052      //    Fraction as byte (1 byte)
000053      //*/
000054      //**************************************************************************/
000055      Shared Sub BeaconPublish(data_Type As Byte, value As Object)                      352:  0x1811   EntryPoint              ValTypParams=1, RefTypParams=1
                                                                                              353:  0xE041   AllocateStackSpace      ValTypeSize=2, RefTypeSize=1

000056          Dim fraction As Byte = 0
000057          Dim data As Short = 0
000058          If value Is Float Then                                                        354:  0x8C00   PushLocalRef            value
                                                                                              355:  0x8006   PushConstU10            6 (0x0006)
                                                                                              356:  0x0006   ClassIs                 
                                                                                              357:  0x3C12   BranchFalse             376

000059              data = value.Cast(Float).ToShort() //get integer part (16 bit only)       358:  0x8006   PushConstU10            6 (0x0006)
                                                                                              359:  0x8C00   PushLocalRef            value
                                                                                              360:  0x0007   Cast                    
                                                                                              361:  0x007B   CvtFltToInt             
                                                                                              362:  0x007F   CvtIntToSho             
                                                                                              363:  0x9002   PopLocalI32             data

000060              fraction = ((value.Cast(Float) - data) * 100.0).ToByte()                  364:  0x8006   PushConstU10            6 (0x0006)
                                                                                              365:  0x8C00   PushLocalRef            value
                                                                                              366:  0x0007   Cast                    
                                                                                              367:  0x8802   PushLocalI32            data
                                                                                              368:  0x007E   CvtIntToFlt             
                                                                                              369:  0x003F   FltSub                  
                                                                                              370:  0xEA64   PushConstFlt            100.0
                                                                                              371:  0x003C   FltMul                  
                                                                                              372:  0x007B   CvtFltToInt             
                                                                                              373:  0x007D   CvtIntToByt             
                                                                                              374:  0x9001   PopLocalI32             fraction

                                                                                              375:  0x4029   Branch                  417
000061          ElseIf value Is Integer Then                                                  376:  0x8C00   PushLocalRef            value
                                                                                              377:  0x8004   PushConstU10            4 (0x0004)
                                                                                              378:  0x0006   ClassIs                 
                                                                                              379:  0x3C06   BranchFalse             386

000062              data = value.Cast(Integer).ToShort() //get integer part (16 bit only)     380:  0x8004   PushConstU10            4 (0x0004)
                                                                                              381:  0x8C00   PushLocalRef            value
                                                                                              382:  0x0007   Cast                    
                                                                                              383:  0x007F   CvtIntToSho             
                                                                                              384:  0x9002   PopLocalI32             data

                                                                                              385:  0x401F   Branch                  417
000063          ElseIf value Is Short Then                                                    386:  0x8C00   PushLocalRef            value
                                                                                              387:  0x8003   PushConstU10            3 (0x0003)
                                                                                              388:  0x0006   ClassIs                 
                                                                                              389:  0x3C05   BranchFalse             395

000064              data = value.Cast(Short)                                                  390:  0x8003   PushConstU10            3 (0x0003)
                                                                                              391:  0x8C00   PushLocalRef            value
                                                                                              392:  0x0007   Cast                    
                                                                                              393:  0x9002   PopLocalI32             data

                                                                                              394:  0x4016   Branch                  417
000065          ElseIf value Is Byte Then                                                     395:  0x8C00   PushLocalRef            value
                                                                                              396:  0x8002   PushConstU10            2 (0x0002)
                                                                                              397:  0x0006   ClassIs                 
                                                                                              398:  0x3C05   BranchFalse             404

000066              data = value.Cast(Byte).ToShort() //get integer part (16 bit only)        399:  0x8002   PushConstU10            2 (0x0002)
                                                                                              400:  0x8C00   PushLocalRef            value
                                                                                              401:  0x0007   Cast                    
                                                                                              402:  0x9002   PopLocalI32             data

                                                                                              403:  0x400D   Branch                  417
000067          ElseIf value Is Boolean Then                                                  404:  0x8C00   PushLocalRef            value
                                                                                              405:  0x8001   PushConstU10            1 (0x0001)
                                                                                              406:  0x0006   ClassIs                 
                                                                                              407:  0x3C09   BranchFalse             417
                                                                                              408:  0xE020   AllocateStackSpace      ValTypeSize=1, RefTypeSize=0

000068              Dim on As Boolean = value.Cast(Boolean)                                   409:  0x8001   PushConstU10            1 (0x0001)
                                                                                              410:  0x8C00   PushLocalRef            value
                                                                                              411:  0x0007   Cast                    
                                                                                              412:  0x9003   PopLocalI32             on

000069              If on Then                                                                413:  0x8803   PushLocalI32            on
                                                                                              414:  0x3C01   BranchFalse             416

000070                  data = 1                                                              415:  0x6402   Const1toLocalI32        data

000071              End If
                                                                                              416:  0xE420   FreeStackSpace          ValTypeSize=1, RefTypeSize=0
000072          End If                                                                        

000073          Dim beaconData As ListOfByte = New ListOfByte()                               417:  0x800C   PushConstU10            12 (0x000C)
                                                                                              418:  0x0010   ClassNew                
                                                                                              419:  0x9401   PopLocalRef             beaconData

000074          beaconData.Add(data_Type)                                                     420:  0x8800   PushLocalI32            data_Type
                                                                                              421:  0x8C01   PushLocalRef            beaconData
                                                                                              422:  0x00A3   ListAdd                 

000075          beaconData.AddShort(data)                                                     423:  0x8802   PushLocalI32            data
                                                                                              424:  0x8C01   PushLocalRef            beaconData
                                                                                              425:  0x8000   PushConstU10            0 (0x0000)
                                                                                              426:  0x00A7   ListAdd2Byte            

000076          beaconData.Add(fraction)                                                      427:  0x8801   PushLocalI32            fraction
                                                                                              428:  0x8C01   PushLocalRef            beaconData
                                                                                              429:  0x00A3   ListAdd                 

000077          Lplan.SetBeaconData(beaconData)                                               430:  0x8C01   PushLocalRef            beaconData
                                                                                              431:  0x0016   PushConstMinus1         
                                                                                              432:  0x0105   LplanSetBeacon          

000078          Lplan.SendBeacon()                                                            433:  0x0104   LplanSendBeacon         

000079          //Lplan.BeaconNow () //does not seem to work
000080      End Sub                                                                           434:  0x0091   Return                  

000081      
000082      Shared Sub Subscribe(topic As String)                                             435:  0x1801   EntryPoint              ValTypParams=0, RefTypParams=1

000083          Lplan.Subscribe(topic)                                                        436:  0x8C00   PushLocalRef            topic
                                                                                              437:  0x0102   LplanSubscribe          

000084      End Sub                                                                           438:  0x0091   Return                  

000085      
000086  End Class                                                                             270:  0x0097   ReturnMe                


****** BLOCKS and VARIABLES for MQTT
    Block Class (Line 19:86)
        MQTT            Me              (ReadOnly, Offset=0)
        Object          MyBase          (ReadOnly, Offset=0)
        String          mcUIDString     (SharedRefTypVariableOffset=0)
        Block Sub Publish (Line 22:29)
            ListOfByte      text_string     (LocalRefTypVariableOffset=2)
            String          topic           (LocalRefTypVariableOffset=0)
            String          value           (LocalRefTypVariableOffset=1)
            Block If Then  (Line 23:25)
            End Block
        End Block
        Block Sub Publish (Line 31:39)
            String          text            (LocalRefTypVariableOffset=2)
            ListOfByte      text_string     (LocalRefTypVariableOffset=3)
            String          topic           (LocalRefTypVariableOffset=0)
            Object          value           (LocalRefTypVariableOffset=1)
            Block If Then  (Line 33:35)
            End Block
        End Block
        Block Sub Publish_exact (Line 41:45)
            ListOfByte      text_String     (LocalRefTypVariableOffset=2)
            String          topic           (LocalRefTypVariableOffset=0)
            String          text            (LocalRefTypVariableOffset=1)
        End Block
        Block Sub BeaconPublish (Line 55:80)
            Byte            fraction        (LocalValTypVariableOffset=1)
            Short           data            (LocalValTypVariableOffset=2)
            ListOfByte      beaconData      (LocalRefTypVariableOffset=1)
            Byte            data_Type       (LocalValTypVariableOffset=0)
            Object          value           (LocalRefTypVariableOffset=0)
            Block If Then  (Line 58:61)
            End Block
            Block ElseIf (Line 61:63)
            End Block
            Block ElseIf (Line 63:65)
            End Block
            Block ElseIf (Line 65:67)
            End Block
            Block ElseIf (Line 67:72)
                Boolean         on              (LocalValTypVariableOffset=3)
                Block If Then  (Line 69:71)
                End Block
            End Block
        End Block
        Block Sub Subscribe (Line 82:84)
            String          topic           (LocalRefTypVariableOffset=0)
        End Block
        Total Size of Member data including base classes = 0.
    End Block




****** GLOBAL_VARIABLES **********************************************
mcUIDString, Class=String, Offset=0, SourceClass=MQTT
Number, Class=Integer, Offset=4, IsReadoly, SourceClass=Intrinsic
Data, Class=Integer, Offset=8, IsReadoly, SourceClass=Intrinsic
ProgramCounter, Class=Integer, Offset=12, IsReadoly, SourceClass=Intrinsic
data, Class=dataType, Offset=16, SourceClass=Main


****** LITERALS ***********************************************
     1 String "True"
     4 String "False"
     7 String "\r\n"
     9 String "Uptime"
    12 String "BatteryVoltage"
    17 String "Temperature"
    21 String "Status"
    24 String "OnLine"
    27 String "X8"
    29 String "MCThings/"
    33 String "/"
