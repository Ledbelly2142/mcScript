//
// This example publishes the Uptime/Temperature/battery Voltage
// Also Supports BME280 I2C sensor
// Data also is published in the beacon data fields. This can be read via MQTT.
//

Class Main
    
    Shared SeaLevelPressure As Float
    Shared data As dataType
    Shared BME280_1 As BME280_Sensor
    Const SLP_Topic As String = "MCThings/SeaLevelPressure"
    
    Shared Event Boot()
        data = dataType.UPTIME
        SeaLevelPressure = 1013.25 //standard Mean Sea Level Pressure
        BME280_1 = New BME280_Sensor()
        If BME280_1.online Then
            MQTT.Publish("Status", "BME280 Online")
            BME280_1.normal_mode = False //set to read-on-demand mode
        End If
        MQTT.Subscribe(SLP_Topic)
    End Event
    
    Shared Event NewGateway()
        MQTT.Subscribe(SLP_Topic)
    End Event
    
    Shared Event SubscriptionDelivery()
        Dim msg As Message = Lplan.GetDelivery()
        If msg.Topic= SLP_Topic Then 
            'Dim payload As ListOfByte = msg.PayLoad
            Dim tmp As Float = 0 'payload.ExtractFloat(0)
            Dim tmp_str As String = msg.PayLoad.ToString()
            
            If Float.TryConvert(tmp_str, tmp) Then
                SeaLevelPressure = tmp
                MQTT.Publish("SeaLevelPressure", SeaLevelPressure)
            Else
                MQTT.Publish("SeaLevelPressure", tmp_str + " :Float Conversion failed")
            End If   
        End If
    End Event
    
    Shared Event Publish() RaiseEvent Every 10 Seconds   
        LedGreen = True
        Select data
            Case dataType.UPTIME
                Dim Uptime As Integer = Device.Uptime()
                MQTT.Publish("Uptime", Uptime)
                MQTT.BeaconPublish(dataType.UPTIME, Uptime)
                data = dataType.BATTVOLTAGE
            Case dataType.BATTVOLTAGE
                Dim BattVolt As Integer = Device.BatteryVoltage()
                MQTT.Publish("BatteryVoltage", BattVolt)
                MQTT.BeaconPublish(dataType.BATTVOLTAGE, BattVolt)
                data = dataType.TEMPERATURE
            Case dataType.TEMPERATURE
                Dim TempC As Float = TempSensor.GetTemp
                MQTT.Publish("Temperature", TempC)
                MQTT.BeaconPublish(dataType.TEMPERATURE, TempC)
                If BME280_1.online Then
                    data = dataType.TEMPERATURE2
                Else
                    data = dataType.UPTIME
                End If
            Case dataType.TEMPERATURE2
                //external temperature
                Dim TempC As Float = BME280_1.readTemperature
                MQTT.Publish("Temperature2", TempC)
                MQTT.BeaconPublish(dataType.TEMPERATURE2, TempC)
                data = dataType.HUMIDITY
            Case dataType.HUMIDITY
                //external humidity
                Dim Humidity As Float = BME280_1.readHumidity
                MQTT.Publish("Humidity", Humidity)
                MQTT.BeaconPublish(dataType.HUMIDITY, Humidity)
                data = dataType.DEWPOINT
            Case dataType.DEWPOINT
                //external dewpoint
                Dim Dewpoint As Float = BME280_1.readDewPoint
                MQTT.Publish("Dewpoint", Dewpoint)
                MQTT.BeaconPublish(dataType.DEWPOINT, Dewpoint)
                data = dataType.PRESSURE
            Case dataType.PRESSURE
                //external pressure
                Dim Pressure As Float = BME280_1.readPressure
                MQTT.Publish("Pressure", Pressure)
                MQTT.BeaconPublish(dataType.PRESSURE, Pressure)
                If SeaLevelPressure <> 0 Then
                    data = dataType.ALTITUDE
                Else
                    data = dataType.UPTIME
                End If
            Case dataType.ALTITUDE
                //Altitude
                Dim Altitude As Float = BME280_1.readAltitude(SeaLevelPressure)
                MQTT.Publish("Altitude", Altitude)
                '                Dim A_Factor As Float = BME280_1.A_factor
                '                MQTT.Publish("Factor", A_Factor)
                MQTT.BeaconPublish(dataType.ALTITUDE, Altitude)
                //increment data
                data = dataType.UPTIME
            Case dataType.MOTION
                //increment data
                data = dataType.UPTIME 
            Case Else
                data = dataType.UPTIME
        End Select
        LedGreen = False
    End Event  
End Class