****** BUILD Of 'DoorSensor' (2016-09-02 11:14:04 AM)


****** EVENT HANDLERS
                                                                                                                                                                              0:    0x0072   Address Priority 0 Event.   Code for 'Boot' starts at 114.
                                                                                                                                                                              1:    0x009C   Address Priority 1 Event.   Code for 'NewGateway' starts at 156.
                                                                                                                                                                              2:    0x00A3   Address Priority 2 Event.   Code for 'AccelerometerInt1' starts at 163.
                                                                                                                                                                              3:    0x00EC   Address Priority 3 Event.   Code for 'ReedSwitchChanged' starts at 236.
                                                                                                                                                                              4:    0x010B   Address Priority 4 Event.   Code for 'SubscriptionDelivery' starts at 267.
                                                                                                                                                                              5:    0x0135   Address Priority 5 Event.   Code for 'Publish' starts at 309.
                                                                                                                                                                              6:    0x0000   Address Priority 6 Event.   No Event defined.
                                                                                                                                                                              7:    0x0000   Address Priority 7 Event.   No Event defined.
                                                                                                                                                                              8:    0x0000   Address Priority 8 Event.   No Event defined.
                                                                                                                                                                              9:    0x0000   Address Priority 9 Event.   No Event defined.
                                                                                                                                                                              10:   0x0000   Address Priority 10 Event.  No Event defined.
                                                                                                                                                                              11:   0x0000   Address Priority 11 Event.  No Event defined.
                                                                                                                                                                              12:   0x0000   Address Priority 12 Event.  No Event defined.
                                                                                                                                                                              13:   0x0000   Address Priority 13 Event.  No Event defined.
                                                                                                                                                                              14:   0x0000   Address Priority 14 Event.  No Event defined.
                                                                                                                                                                              15:   0x0000   Address Priority 15 Event.  No Event defined.
                                                                                                                                                                              16:   0x0000   Address Priority 16 Event.  No Event defined.
                                                                                                                                                                              17:   0x0000   Address Priority 17 Event.  No Event defined.
                                                                                                                                                                              18:   0x0000   Address Priority 18 Event.  No Event defined.
                                                                                                                                                                              19:   0x0000   Address Priority 19 Event.  No Event defined.
                                                                                                                                                                              20:   0x0000   Address Priority 20 Event.  No Event defined.
                                                                                                                                                                              21:   0x0000   Address Priority 21 Event.  No Event defined.
                                                                                                                                                                              22:   0x0000   Address Priority 22 Event.  No Event defined.
                                                                                                                                                                              23:   0x0000   Address Priority 23 Event.  No Event defined.
                                                                                                                                                                              24:   0x0000   Address Priority 24 Event.  No Event defined.
                                                                                                                                                                              25:   0x0000   Address Priority 25 Event.  No Event defined.
                                                                                                                                                                              26:   0x0000   Address Priority 26 Event.  No Event defined.
                                                                                                                                                                              27:   0x0000   Address Priority 27 Event.  No Event defined.
                                                                                                                                                                              28:   0x0000   Address Priority 28 Event.  No Event defined.
                                                                                                                                                                              29:   0x0000   Address Priority 29 Event.  No Event defined.
                                                                                                                                                                              30:   0x0000   Address Priority 30 Event.  No Event defined.
                                                                                                                                                                              31:   0x0000   Address Priority 31 Event.  No Event defined.

****** RUNTIME INFORMATION
                                                                                                                                                                              32:   0x07B9   ScriptSizeLS (Size of the code in 2-byte instructions = 1977)
                                                                                                                                                                              33:   0x0000   CodeSizeMS (Size of the code in 2-byte instructions = 1977)
                                                                                                                                                                              34:   0x001F   CodeSizeInBlocks = 31
                                                                                                                                                                              35:   0x0003   StringSizeInBlocks = 3
                                                                                                                                                                              36:   0x0000   Reserved
                                                                                                                                                                              37:   0x0000   Reserved
                                                                                                                                                                              38:   0x1B7C   Compile Date and Time 2016-09-02 11:14:04
                                                                                                                                                                              39:   0x1F5C   Compile Date and Time 2016-09-02 11:14:04
                                                                                                                                                                              40:   0x0000   Reserved
                                                                                                                                                                              41:   0x0000   Reserved
                                                                                                                                                                              42:   0x0000   Reserved
                                                                                                                                                                              43:   0x0000   Reserved
                                                                                                                                                                              44:   0x0000   Reserved
                                                                                                                                                                              45:   0x0000   PinMode Pin0=NotUsed  Pin1=NotUsed
                                                                                                                                                                              46:   0x0000   PinMode Pin2=NotUsed  Pin3=NotUsed
                                                                                                                                                                              47:   0x0000   PinMode Pin4=NotUsed  Pin5=NotUsed
                                                                                                                                                                              48:   0x0000   PinMode Pin6=NotUsed  Pin7=NotUsed
                                                                                                                                                                              49:   0x0000   PinMode Pin8=NotUsed   Pin9=NotUsed
                                                                                                                                                                              50:   0x0000   PinMode Pin10=NotUsed   Pin11=NotUsed
                                                                                                                                                                              51:   0x0000   PinMode Pin12=NotUsed   Pin13=NotUsed
                                                                                                                                                                              52:   0x0000   PinMode Pin14=NotUsed   Pin15=NotUsed
                                                                                                                                                                              53:   0x0000   PinMode Pin16=NotUsed   Pin17=NotUsed
                                                                                                                                                                              54:   0x0000   PinMode Pin18=NotUsed   Pin19=NotUsed
                                                                                                                                                                              55:   0x0000   PinMode Pin20=NotUsed   Pin21=NotUsed
                                                                                                                                                                              56:   0x0000   PinMode Pin22=NotUsed   Pin23=NotUsed
                                                                                                                                                                              57:   0x0000   Reserved
                                                                                                                                                                              58:   0x0000   Reserved
                                                                                                                                                                              59:   0x0000   Reserved
                                                                                                                                                                              60:   0x0000   Reserved
                                                                                                                                                                              61:   0x1800   IdleThread EntryPoint ValTypParams=0, RefTypParams=0
                                                                                                                                                                              62:   0x0015   SystemIdle
                                                                                                                                                                              63:   0x5002   BranchBack 62

****** CLASS INFORMATION
                                                                                                                                                                              64:   0x0049   Class Descriptor for class 'Global'. Next Descriptor at 73.
                                                                                                                                                                              65:   0x0000   Base Class 'Object' Value represent a pointer if >= 64 (0x40) or ClassType if < 64 (0).
                                                                                                                                                                              66:   0x0000   Offset of RefObject data.(0).
                                                                                                                                                                              67:   0x0008   Size of RefObject data.(8).
                                                                                                                                                                              68:   0x001C   Size of all data.(28).
                                                                                                                                                                              69:   0x6C47   Part of the class name 'Global'.
                                                                                                                                                                              70:   0x626F   Part of the class name 'Global'.
                                                                                                                                                                              71:   0x6C61   Part of the class name 'Global'.
                                                                                                                                                                              72:   0x0000   Part of the class name 'Global'.
                                                                                                                                                                              73:   0x0051   Class Descriptor for class 'Main'. Next Descriptor at 81.
                                                                                                                                                                              74:   0x0000   Base Class 'Object' Value represent a pointer if >= 64 (0x40) or ClassType if < 64 (0).
                                                                                                                                                                              75:   0x0000   Offset of RefObject data.(0).
                                                                                                                                                                              76:   0x0000   Size of RefObject data.(0).
                                                                                                                                                                              77:   0x0000   Size of all data.(0).
                                                                                                                                                                              78:   0x614D   Part of the class name 'Main'.
                                                                                                                                                                              79:   0x6E69   Part of the class name 'Main'.
                                                                                                                                                                              80:   0x0000   Part of the class name 'Main'.
                                                                                                                                                                              81:   0x005C   Class Descriptor for class 'TempSensor'. Next Descriptor at 92.
                                                                                                                                                                              82:   0x0000   Base Class 'Object' Value represent a pointer if >= 64 (0x40) or ClassType if < 64 (0).
                                                                                                                                                                              83:   0x0000   Offset of RefObject data.(0).
                                                                                                                                                                              84:   0x0000   Size of RefObject data.(0).
                                                                                                                                                                              85:   0x0000   Size of all data.(0).
                                                                                                                                                                              86:   0x6554   Part of the class name 'TempSensor'.
                                                                                                                                                                              87:   0x706D   Part of the class name 'TempSensor'.
                                                                                                                                                                              88:   0x6553   Part of the class name 'TempSensor'.
                                                                                                                                                                              89:   0x736E   Part of the class name 'TempSensor'.
                                                                                                                                                                              90:   0x726F   Part of the class name 'TempSensor'.
                                                                                                                                                                              91:   0x0000   Part of the class name 'TempSensor'.
                                                                                                                                                                              92:   0x0064   Class Descriptor for class 'MQTT'. Next Descriptor at 100.
                                                                                                                                                                              93:   0x0000   Base Class 'Object' Value represent a pointer if >= 64 (0x40) or ClassType if < 64 (0).
                                                                                                                                                                              94:   0x0000   Offset of RefObject data.(0).
                                                                                                                                                                              95:   0x0000   Size of RefObject data.(0).
                                                                                                                                                                              96:   0x0000   Size of all data.(0).
                                                                                                                                                                              97:   0x514D   Part of the class name 'MQTT'.
                                                                                                                                                                              98:   0x5454   Part of the class name 'MQTT'.
                                                                                                                                                                              99:   0x0000   Part of the class name 'MQTT'.
                                                                                                                                                                              100:  0x006D   Class Descriptor for class 'MMA8652'. Next Descriptor at 109.
                                                                                                                                                                              101:  0x0000   Base Class 'Object' Value represent a pointer if >= 64 (0x40) or ClassType if < 64 (0).
                                                                                                                                                                              102:  0x0000   Offset of RefObject data.(0).
                                                                                                                                                                              103:  0x0004   Size of RefObject data.(4).
                                                                                                                                                                              104:  0x0008   Size of all data.(8).
                                                                                                                                                                              105:  0x4D4D   Part of the class name 'MMA8652'.
                                                                                                                                                                              106:  0x3841   Part of the class name 'MMA8652'.
                                                                                                                                                                              107:  0x3536   Part of the class name 'MMA8652'.
                                                                                                                                                                              108:  0x0032   Part of the class name 'MMA8652'.
                                                                                                                                                                              109:  0x0000   End Of Class Data.

****** APPLIACTION STATEMENTS
*************************************************************************************************************

000003  Class Main                                                                                                                                                            110:  0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000004      
000005      Shared data As dataType
000006      Const Sub_Topic As String = "MCThings/Publish"
000007      Shared Publish_data As Boolean
000008      Shared accel As MMA8652
000009      
                                                                                                                                                                              112:  0x0001                           EventType=Boot
                                                                                                                                                                              113:  0x0700                           EventCategory=Interrupt
000010      Shared Event Boot()                                                                                                                                               114:  0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000011          Publish_data = True                                                                                                                                           115:  0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              116:  0x000C   PushGlobal              
                                                                                                                                                                              117:  0xC814   PopFieldU8              Publish_data

000012          MQTT.Subscribe(Sub_Topic)                                                                                                                                     118:  0x8409   PushLiteral             9
                                                                                                                                                                              119:  0x000E   PushNothing             
                                                                                                                                                                              120:  0x1E2B   BranchSubr              676

000013          //MQTT.Publish("Door", False)
000014          MQTT.Publish("Status", "Booted")                                                                                                                              121:  0x840F   PushLiteral             15
                                                                                                                                                                              122:  0x8412   PushLiteral             18
                                                                                                                                                                              123:  0x000E   PushNothing             
                                                                                                                                                                              124:  0x1D83   BranchSubr              512

000015          accel = New MMA8652                                                                                                                                           125:  0x8064   PushConstU10            100 (0x0064)
                                                                                                                                                                              126:  0x0010   ClassNew                
                                                                                                                                                                              127:  0x1E28   BranchSubr              680
                                                                                                                                                                              128:  0x1E29   BranchSubr              682
                                                                                                                                                                              129:  0x000C   PushGlobal              
                                                                                                                                                                              130:  0xD400   PopFieldRef             accel

000016          If accel.online Then                                                                                                                                          131:  0x000C   PushGlobal              
                                                                                                                                                                              132:  0xC400   PushFieldRef            accel
                                                                                                                                                                              133:  0xB804   PushFieldU8             online
                                                                                                                                                                              134:  0x3C0E   BranchFalse             149

000017              MQTT.Publish("Status", "Accel Sensor Online")                                                                                                             135:  0x840F   PushLiteral             15
                                                                                                                                                                              136:  0x8415   PushLiteral             21
                                                                                                                                                                              137:  0x000E   PushNothing             
                                                                                                                                                                              138:  0x1D75   BranchSubr              512

000018              accel.ConfigureShockInterrupt(0.8, 20) //default 0.8, 0                                                                                                   139:  0x0110   PushConstI32            1061997773 (0x3F4CCCCD)
                                                                                                                                                                              140:  0xCCCD                           
                                                                                                                                                                              141:  0x3F4C                           
                                                                                                                                                                              142:  0xEA14   PushConstFlt            20.0
                                                                                                                                                                              143:  0x000C   PushGlobal              
                                                                                                                                                                              144:  0xC400   PushFieldRef            accel
                                                                                                                                                                              145:  0x5800   JumpSubr                1849
                                                                                                                                                                              146:  0x0739                           
                                                                                                                                                                              147:  0xE420   FreeStackSpace          ValTypeSize=1, RefTypeSize=0

000019              'accel.ConfigureOrientationInterrupt(2.4, 500)
                                                                                                                                                                              148:  0x4004   Branch                  153
000020          Else                                                                                                                                                          

000021              MQTT.Publish("Status", "Accel Sensor  Offline")                                                                                                           149:  0x840F   PushLiteral             15
                                                                                                                                                                              150:  0x841B   PushLiteral             27
                                                                                                                                                                              151:  0x000E   PushNothing             
                                                                                                                                                                              152:  0x1D67   BranchSubr              512

000022          End If
000023      End Event                                                                                                                                                         153:  0x0091   Return                  

000024      
                                                                                                                                                                              154:  0x0005                           EventType=NewGateway
                                                                                                                                                                              155:  0x0700                           EventCategory=Interrupt
000025      Shared Event NewGateway()                                                                                                                                         156:  0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000026          MQTT.Subscribe(Sub_Topic)                                                                                                                                     157:  0x8409   PushLiteral             9
                                                                                                                                                                              158:  0x000E   PushNothing             
                                                                                                                                                                              159:  0x1E04   BranchSubr              676

000027      End Event                                                                                                                                                         160:  0x0091   Return                  

000028      
                                                                                                                                                                              161:  0x0212                           EventType=AccelerometerInt1
                                                                                                                                                                              162:  0x0700                           EventCategory=Interrupt
000029      Shared Event AccelerometerInt1()                                                                                                                                  163:  0x1800   EntryPoint              ValTypParams=0, RefTypParams=0
                                                                                                                                                                              164:  0xE020   AllocateStackSpace      ValTypeSize=1, RefTypeSize=0

000030          Dim int_source As Byte = accel.readIntSource()                                                                                                                165:  0x000C   PushGlobal              
                                                                                                                                                                              166:  0xC400   PushFieldRef            accel
                                                                                                                                                                              167:  0x1FC2   BranchSubr              1130
                                                                                                                                                                              168:  0x9000   PopLocalI32             int_source

000031          If (int_source & MMA8652.SRC_LNDPRT) = MMA8652.SRC_LNDPRT Then                                                                                                169:  0x8800   PushLocalI32            int_source
                                                                                                                                                                              170:  0x8010   PushConstU10            16 (0x0010)
                                                                                                                                                                              171:  0x001F   IntAnd                  
                                                                                                                                                                              172:  0x8010   PushConstU10            16 (0x0010)
                                                                                                                                                                              173:  0x2414   BranchNE                194

000032              'PL interrupt occured
000033              //LedRed = True
000034              If (accel.readPLStatus() & MMA8652.BAFRO) = MMA8652.BAFRO Then                                                                                            174:  0x000C   PushGlobal              
                                                                                                                                                                              175:  0xC400   PushFieldRef            accel
                                                                                                                                                                              176:  0x1FBF   BranchSubr              1136
                                                                                                                                                                              177:  0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              178:  0x001F   IntAnd                  
                                                                                                                                                                              179:  0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              180:  0x2407   BranchNE                188

000035                  'front facing
000036                  LedRed = True                                                                                                                                         181:  0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              182:  0x0809   PopAndSetDigitalPin     Pin9

000037                  MQTT.Publish("Orientation", "Front Facing")                                                                                                           183:  0x8422   PushLiteral             34
                                                                                                                                                                              184:  0x8426   PushLiteral             38
                                                                                                                                                                              185:  0x000E   PushNothing             
                                                                                                                                                                              186:  0x1D45   BranchSubr              512

                                                                                                                                                                              187:  0x4006   Branch                  194
000038              Else                                                                                                                                                      

000039                  'back facing
000040                  LedRed = False                                                                                                                                        188:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              189:  0x0809   PopAndSetDigitalPin     Pin9

000041                  MQTT.Publish("Orientation", "Back Facing")                                                                                                            190:  0x8422   PushLiteral             34
                                                                                                                                                                              191:  0x842B   PushLiteral             43
                                                                                                                                                                              192:  0x000E   PushNothing             
                                                                                                                                                                              193:  0x1D3E   BranchSubr              512

000042              End If
000043              //LedRed = False
000044          End If
000045          If (int_source & MMA8652.SRC_TRANS) = MMA8652.SRC_TRANS Then                                                                                                  194:  0x8800   PushLocalI32            int_source
                                                                                                                                                                              195:  0x8020   PushConstU10            32 (0x0020)
                                                                                                                                                                              196:  0x001F   IntAnd                  
                                                                                                                                                                              197:  0x8020   PushConstU10            32 (0x0020)
                                                                                                                                                                              198:  0x2422   BranchNE                233

000046              'Transient interrupt occured
000047              If (accel.readTransientSource() & MMA8652.TEA) = MMA8652.TEA Then                                                                                         199:  0x000C   PushGlobal              
                                                                                                                                                                              200:  0xC400   PushFieldRef            accel
                                                                                                                                                                              201:  0x1FB2   BranchSubr              1148
                                                                                                                                                                              202:  0x8040   PushConstU10            64 (0x0040)
                                                                                                                                                                              203:  0x001F   IntAnd                  
                                                                                                                                                                              204:  0x8040   PushConstU10            64 (0x0040)
                                                                                                                                                                              205:  0x241B   BranchNE                233
                                                                                                                                                                              206:  0xE020   AllocateStackSpace      ValTypeSize=1, RefTypeSize=0

000048                  'Any Transient Occured
000049                  LedGreen = True                                                                                                                                       207:  0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              208:  0x080A   PopAndSetDigitalPin     Pin10

000050                  //MQTT.Publish("Transient", True)
000051                  Dim timeSinceLastTransient As Integer = Device.GetTimeSpan()                                                                                          209:  0x00FB   DeviceGetTimeSpan       
                                                                                                                                                                              210:  0x9001   PopLocalI32             timeSinceLastTransient

000052                  'If at least two transients withing 0.5 seconds, and door is closed
000053                  If timeSinceLastTransient < 500000 And timeSinceLastTransient > 0 And ReedSwitch = False Then //if less than 0.5 seconds since last transient         211:  0x8801   PushLocalI32            timeSinceLastTransient
                                                                                                                                                                              212:  0x0110   PushConstI32            500000 (0x0007A120)
                                                                                                                                                                              213:  0xA120                           
                                                                                                                                                                              214:  0x0007                           
                                                                                                                                                                              215:  0x0024   IntCmpLT                
                                                                                                                                                                              216:  0x8801   PushLocalI32            timeSinceLastTransient
                                                                                                                                                                              217:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              218:  0x0022   IntCmpGT                
                                                                                                                                                                              219:  0x001F   IntAnd                  
                                                                                                                                                                              220:  0x0C0C   GetAndPushDigitalPin    Pin12
                                                                                                                                                                              221:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              222:  0x0020   IntCmpEQ                
                                                                                                                                                                              223:  0x001F   IntAnd                  
                                                                                                                                                                              224:  0x3C05   BranchFalse             230

000054                      MQTT.Publish("Doorknock", True)                                                                                                                   225:  0x842F   PushLiteral             47
                                                                                                                                                                              226:  0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              227:  0x1401   Box                     BoxBoolean
                                                                                                                                                                              228:  0x000E   PushNothing             
                                                                                                                                                                              229:  0x1D3A   BranchSubr              544

000055                  End If
000056                  LedGreen = False                                                                                                                                      230:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              231:  0x080A   PopAndSetDigitalPin     Pin10

                                                                                                                                                                              232:  0xE420   FreeStackSpace          ValTypeSize=1, RefTypeSize=0
000057              End If                                                                                                                                                    

000058          End If
000059      End Event                                                                                                                                                         233:  0x0091   Return                  

000060      
                                                                                                                                                                              234:  0x030C                           EventType=ReedSwitchChanged
                                                                                                                                                                              235:  0x0700                           EventCategory=Interrupt
000061      Shared Event ReedSwitchChanged()                                                                                                                                  236:  0x1800   EntryPoint              ValTypParams=0, RefTypParams=0
                                                                                                                                                                              237:  0xE020   AllocateStackSpace      ValTypeSize=1, RefTypeSize=0

000062          Thread.Sleep(500000)                                                                                                                                          238:  0x0110   PushConstI32            500000 (0x0007A120)
                                                                                                                                                                              239:  0xA120                           
                                                                                                                                                                              240:  0x0007                           
                                                                                                                                                                              241:  0x00D5   ThreadSleep             
                                                                                                                                                                              242:  0xE420   FreeStackSpace          ValTypeSize=1, RefTypeSize=0

000063          Thread.ClearHardwareEvent()                                                                                                                                   243:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              244:  0x00FA   SetCleartHardwareEvent  

000064          LedGreen = True                                                                                                                                               245:  0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              246:  0x080A   PopAndSetDigitalPin     Pin10

000065          Dim Door_Status As Boolean = ReedSwitch                                                                                                                       247:  0x0C0C   GetAndPushDigitalPin    Pin12
                                                                                                                                                                              248:  0x9000   PopLocalI32             Door_Status

000066          If Publish_data Then                                                                                                                                          249:  0x000C   PushGlobal              
                                                                                                                                                                              250:  0xB814   PushFieldU8             Publish_data
                                                                                                                                                                              251:  0x3C05   BranchFalse             257

000067              MQTT.Publish("Door", Door_Status)                                                                                                                         252:  0x8433   PushLiteral             51
                                                                                                                                                                              253:  0x8800   PushLocalI32            Door_Status
                                                                                                                                                                              254:  0x1401   Box                     BoxBoolean
                                                                                                                                                                              255:  0x000E   PushNothing             
                                                                                                                                                                              256:  0x1D1F   BranchSubr              544

000068          End If
000069          MQTT.BeaconPublish(dataType.DOOR, Door_Status)                                                                                                                257:  0x800B   PushConstU10            11 (0x000B)
                                                                                                                                                                              258:  0x8800   PushLocalI32            Door_Status
                                                                                                                                                                              259:  0x1401   Box                     BoxBoolean
                                                                                                                                                                              260:  0x000E   PushNothing             
                                                                                                                                                                              261:  0x1D4B   BranchSubr              593

000070          LedGreen = False                                                                                                                                              262:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              263:  0x080A   PopAndSetDigitalPin     Pin10

000071      End Event                                                                                                                                                         264:  0x0091   Return                  

000072      
                                                                                                                                                                              265:  0x0003                           EventType=SubscriptionDelivery
                                                                                                                                                                              266:  0x0700                           EventCategory=Interrupt
000073      Shared Event SubscriptionDelivery()                                                                                                                               267:  0x1800   EntryPoint              ValTypParams=0, RefTypParams=0
                                                                                                                                                                              268:  0xE001   AllocateStackSpace      ValTypeSize=0, RefTypeSize=1

000074          Dim msg As Message = Lplan.GetDelivery()                                                                                                                      269:  0x00FE   LplanGetDelivery        
                                                                                                                                                                              270:  0x9400   PopLocalRef             msg

000075          If msg.Topic= Sub_Topic Then                                                                                                                                  271:  0x8C00   PushLocalRef            msg
                                                                                                                                                                              272:  0xC400   PushFieldRef            Offset=0
                                                                                                                                                                              273:  0x8409   PushLiteral             9
                                                                                                                                                                              274:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              275:  0x0058   StrCmpEQ                
                                                                                                                                                                              276:  0x3C1D   BranchFalse             306
                                                                                                                                                                              277:  0xE021   AllocateStackSpace      ValTypeSize=1, RefTypeSize=1

000076              'Dim payload As ListOfByte = msg.PayLoad
000077              Dim tmp As Boolean = True 'payload.ExtractFloat(0)                                                                                                        278:  0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              279:  0x9000   PopLocalI32             tmp

000078              Dim tmp_str As String = msg.PayLoad.ToString()                                                                                                            280:  0x8C00   PushLocalRef            msg
                                                                                                                                                                              281:  0xC404   PushFieldRef            Offset=4
                                                                                                                                                                              282:  0x006B   StrFromListOfByte       
                                                                                                                                                                              283:  0x9401   PopLocalRef             tmp_str

000079              
000080              If Boolean.TryConvert(tmp_str, tmp) Then                                                                                                                  284:  0x8C01   PushLocalRef            tmp_str
                                                                                                                                                                              285:  0x8800   PushLocalI32            tmp
                                                                                                                                                                              286:  0x008A   TryCvtStrToBoo          
                                                                                                                                                                              287:  0x9000   PopLocalI32             tmp
                                                                                                                                                                              288:  0x3C0A   BranchFalse             299

000081                  Publish_data = tmp                                                                                                                                    289:  0x8800   PushLocalI32            tmp
                                                                                                                                                                              290:  0x000C   PushGlobal              
                                                                                                                                                                              291:  0xC814   PopFieldU8              Publish_data

000082                  MQTT.Publish("Publish", Publish_data)                                                                                                                 292:  0x8436   PushLiteral             54
                                                                                                                                                                              293:  0x000C   PushGlobal              
                                                                                                                                                                              294:  0xB814   PushFieldU8             Publish_data
                                                                                                                                                                              295:  0x1401   Box                     BoxBoolean
                                                                                                                                                                              296:  0x000E   PushNothing             
                                                                                                                                                                              297:  0x1CF6   BranchSubr              544

                                                                                                                                                                              298:  0x4006   Branch                  305
000083              Else                                                                                                                                                      

000084                  MQTT.Publish("Publish", tmp_str + " :Boolean Conversion failed")                                                                                      299:  0x8436   PushLiteral             54
                                                                                                                                                                              300:  0x8C01   PushLocalRef            tmp_str
                                                                                                                                                                              301:  0x8439   PushLiteral             57
                                                                                                                                                                              302:  0x0056   StrAdd                  
                                                                                                                                                                              303:  0x000E   PushNothing             
                                                                                                                                                                              304:  0x1CCF   BranchSubr              512

000085              End If   
                                                                                                                                                                              305:  0xE421   FreeStackSpace          ValTypeSize=1, RefTypeSize=1
000086          End If                                                                                                                                                        

000087      End Event                                                                                                                                                         306:  0x0091   Return                  

000088      
                                                                                                                                                                              307:  0x000A                           TimeValue=10
                                                                                                                                                                              308:  0x0300                           EventCategory=TimeInSeconds
000089      Shared Event Publish() RaiseEvent Every 10 Seconds //1 Minutes                                                                                                    309:  0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000090          LedGreen = True                                                                                                                                               310:  0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              311:  0x080A   PopAndSetDigitalPin     Pin10

000091          //Dim Test As Byte = accel.whoAmI()
000092          //MQTT.Publish("Test", Test)
000093          Select data                                                                                                                                                   312:  0x000C   PushGlobal              
                                                                                                                                                                              313:  0xC018   PushFieldI32            data
                                                                                                                                                                              314:  0x0122   CaseComputed            
                                                                                                                                                                              315:  0x0002                           CaseCommonClass=Byte
                                                                                                                                                                              316:  0x0004                           NumberOfCaseEntries=4
                                                                                                                                                                              317:  0x0062                           CaseElseBranch=416
                                                                                                                                                                              318:  0x0002                           CaseValue=2
                                                                                                                                                                              319:  0x0008                           CaseBranch=326
                                                                                                                                                                              320:  0x0003                           CaseValue=3
                                                                                                                                                                              321:  0x0022                           CaseBranch=352
                                                                                                                                                                              322:  0x0004                           CaseValue=4
                                                                                                                                                                              323:  0x0037                           CaseBranch=373
                                                                                                                                                                              324:  0x000B                           CaseValue=11
                                                                                                                                                                              325:  0x004D                           CaseBranch=395

000094              Case dataType.UPTIME                                                                                                                                      326:  0xE020   AllocateStackSpace      ValTypeSize=1, RefTypeSize=0

000095                  Dim Uptime As Integer = Device.Uptime()                                                                                                               327:  0x00F9   DeviceUptime            
                                                                                                                                                                              328:  0x9000   PopLocalI32             Uptime

000096                  If Publish_data Then                                                                                                                                  329:  0x000C   PushGlobal              
                                                                                                                                                                              330:  0xB814   PushFieldU8             Publish_data
                                                                                                                                                                              331:  0x3C05   BranchFalse             337

000097                      MQTT.Publish("Uptime", Uptime)                                                                                                                    332:  0x8441   PushLiteral             65
                                                                                                                                                                              333:  0x8800   PushLocalI32            Uptime
                                                                                                                                                                              334:  0x1404   Box                     BoxInteger
                                                                                                                                                                              335:  0x000E   PushNothing             
                                                                                                                                                                              336:  0x1CCF   BranchSubr              544

000098                  End If
000099                  If Uptime < Short.MaxValue Then                                                                                                                       337:  0x8800   PushLocalI32            Uptime
                                                                                                                                                                              338:  0x0110   PushConstI32            32767 (0x00007FFF)
                                                                                                                                                                              339:  0x7FFF                           
                                                                                                                                                                              340:  0x0000                           
                                                                                                                                                                              341:  0x3405   BranchGE                347

000100                      MQTT.BeaconPublish(dataType.UPTIME, Uptime)                                                                                                       342:  0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              343:  0x8800   PushLocalI32            Uptime
                                                                                                                                                                              344:  0x1404   Box                     BoxInteger
                                                                                                                                                                              345:  0x000E   PushNothing             
                                                                                                                                                                              346:  0x1CF6   BranchSubr              593

000101                  End If
000102                  data = dataType.BATTVOLTAGE                                                                                                                           347:  0x8003   PushConstU10            3 (0x0003)
                                                                                                                                                                              348:  0x000C   PushGlobal              
                                                                                                                                                                              349:  0xD018   PopFieldI32             data

                                                                                                                                                                              350:  0xE420   FreeStackSpace          ValTypeSize=1, RefTypeSize=0
                                                                                                                                                                              351:  0x4047   Branch                  423
000103              Case dataType.BATTVOLTAGE                                                                                                                                 352:  0xE020   AllocateStackSpace      ValTypeSize=1, RefTypeSize=0

000104                  Dim BattVolt As Integer = Device.BatteryVoltage()                                                                                                     353:  0x00ED   DeviceBatteryVoltage    
                                                                                                                                                                              354:  0x9000   PopLocalI32             BattVolt

000105                  If Publish_data Then                                                                                                                                  355:  0x000C   PushGlobal              
                                                                                                                                                                              356:  0xB814   PushFieldU8             Publish_data
                                                                                                                                                                              357:  0x3C05   BranchFalse             363

000106                      MQTT.Publish("BatteryVoltage", BattVolt)                                                                                                          358:  0x8444   PushLiteral             68
                                                                                                                                                                              359:  0x8800   PushLocalI32            BattVolt
                                                                                                                                                                              360:  0x1404   Box                     BoxInteger
                                                                                                                                                                              361:  0x000E   PushNothing             
                                                                                                                                                                              362:  0x1CB5   BranchSubr              544

000107                  End If
000108                  MQTT.BeaconPublish(dataType.BATTVOLTAGE, BattVolt)                                                                                                    363:  0x8003   PushConstU10            3 (0x0003)
                                                                                                                                                                              364:  0x8800   PushLocalI32            BattVolt
                                                                                                                                                                              365:  0x1404   Box                     BoxInteger
                                                                                                                                                                              366:  0x000E   PushNothing             
                                                                                                                                                                              367:  0x1CE1   BranchSubr              593

000109                  data = dataType.TEMPERATURE                                                                                                                           368:  0x8004   PushConstU10            4 (0x0004)
                                                                                                                                                                              369:  0x000C   PushGlobal              
                                                                                                                                                                              370:  0xD018   PopFieldI32             data

                                                                                                                                                                              371:  0xE420   FreeStackSpace          ValTypeSize=1, RefTypeSize=0
                                                                                                                                                                              372:  0x4032   Branch                  423
000110              Case dataType.TEMPERATURE                                                                                                                                 373:  0xE020   AllocateStackSpace      ValTypeSize=1, RefTypeSize=0

000111                  Dim TempC As Float = TempSensor.GetTemp                                                                                                               374:  0x000E   PushNothing             
                                                                                                                                                                              375:  0x1C34   BranchSubr              428
                                                                                                                                                                              376:  0x9000   PopLocalI32             TempC

000112                  If Publish_data Then                                                                                                                                  377:  0x000C   PushGlobal              
                                                                                                                                                                              378:  0xB814   PushFieldU8             Publish_data
                                                                                                                                                                              379:  0x3C05   BranchFalse             385

000113                      MQTT.Publish("Temperature", TempC)                                                                                                                380:  0x8449   PushLiteral             73
                                                                                                                                                                              381:  0x8800   PushLocalI32            TempC
                                                                                                                                                                              382:  0x1406   Box                     BoxFloat
                                                                                                                                                                              383:  0x000E   PushNothing             
                                                                                                                                                                              384:  0x1C9F   BranchSubr              544

000114                  End If
000115                  MQTT.BeaconPublish(dataType.TEMPERATURE, TempC)                                                                                                       385:  0x8004   PushConstU10            4 (0x0004)
                                                                                                                                                                              386:  0x8800   PushLocalI32            TempC
                                                                                                                                                                              387:  0x1406   Box                     BoxFloat
                                                                                                                                                                              388:  0x000E   PushNothing             
                                                                                                                                                                              389:  0x1CCB   BranchSubr              593

000116                  data = dataType.DOOR                                                                                                                                  390:  0x800B   PushConstU10            11 (0x000B)
                                                                                                                                                                              391:  0x000C   PushGlobal              
                                                                                                                                                                              392:  0xD018   PopFieldI32             data

                                                                                                                                                                              393:  0xE420   FreeStackSpace          ValTypeSize=1, RefTypeSize=0
                                                                                                                                                                              394:  0x401C   Branch                  423
000117              Case dataType.DOOR                                                                                                                                        395:  0xE020   AllocateStackSpace      ValTypeSize=1, RefTypeSize=0

000118                  Dim Door_Status As Boolean = ReedSwitch                                                                                                               396:  0x0C0C   GetAndPushDigitalPin    Pin12
                                                                                                                                                                              397:  0x9000   PopLocalI32             Door_Status

000119                  If Publish_data Then                                                                                                                                  398:  0x000C   PushGlobal              
                                                                                                                                                                              399:  0xB814   PushFieldU8             Publish_data
                                                                                                                                                                              400:  0x3C05   BranchFalse             406

000120                      MQTT.Publish("Door", Door_Status) //True = OPEN False = CLOSED                                                                                    401:  0x8433   PushLiteral             51
                                                                                                                                                                              402:  0x8800   PushLocalI32            Door_Status
                                                                                                                                                                              403:  0x1401   Box                     BoxBoolean
                                                                                                                                                                              404:  0x000E   PushNothing             
                                                                                                                                                                              405:  0x1C8A   BranchSubr              544

000121                  End If
000122                  MQTT.BeaconPublish(dataType.DOOR, Door_Status)                                                                                                        406:  0x800B   PushConstU10            11 (0x000B)
                                                                                                                                                                              407:  0x8800   PushLocalI32            Door_Status
                                                                                                                                                                              408:  0x1401   Box                     BoxBoolean
                                                                                                                                                                              409:  0x000E   PushNothing             
                                                                                                                                                                              410:  0x1CB6   BranchSubr              593

000123                  data = dataType.UPTIME                                                                                                                                411:  0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              412:  0x000C   PushGlobal              
                                                                                                                                                                              413:  0xD018   PopFieldI32             data

                                                                                                                                                                              414:  0xE420   FreeStackSpace          ValTypeSize=1, RefTypeSize=0
                                                                                                                                                                              415:  0x4007   Branch                  423
000124              Case Else                                                                                                                                                 

000125                  MQTT.Publish("Status", "OnLine")                                                                                                                      416:  0x840F   PushLiteral             15
                                                                                                                                                                              417:  0x844D   PushLiteral             77
                                                                                                                                                                              418:  0x000E   PushNothing             
                                                                                                                                                                              419:  0x1C5C   BranchSubr              512

000126                  data = dataType.UPTIME                                                                                                                                420:  0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              421:  0x000C   PushGlobal              
                                                                                                                                                                              422:  0xD018   PopFieldI32             data

000127          End Select
000128          LedGreen = False                                                                                                                                              423:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              424:  0x080A   PopAndSetDigitalPin     Pin10

000129      End Event                                                                                                                                                         425:  0x0091   Return                  

000130  End Class                                                                                                                                                             111:  0x0097   ReturnMe                


****** BLOCKS and VARIABLES for Main
    Block Class (Line 3:130)
        Main            Me              (ReadOnly, Offset=0)
        Object          MyBase          (ReadOnly, Offset=0)
        dataType        data            (SharedValTypVariableOffset=24)
        String          Sub_Topic       (Literal="MCThings/Publish")
        Boolean         Publish_data    (SharedValTypVariableOffset=20)
        MMA8652         accel           (SharedRefTypVariableOffset=0)
        Block Event Boot (Line 10:23)
            Block If Then  (Line 16:20)
            End Block
            Block Else (Line 20:22)
            End Block
        End Block
        Block Event NewGateway (Line 25:27)
        End Block
        Block Event AccelerometerInt1 (Line 29:59)
            Byte            int_source      (LocalValTypVariableOffset=0)
            Block If Then  (Line 31:44)
                Block If Then  (Line 34:38)
                End Block
                Block Else (Line 38:42)
                End Block
            End Block
            Block If Then  (Line 45:58)
                Block If Then  (Line 47:57)
                    Integer         timeSinceLastTra(LocalValTypVariableOffset=1)
                    Block If Then  (Line 53:55)
                    End Block
                End Block
            End Block
        End Block
        Block Event ReedSwitchChanged (Line 61:71)
            Boolean         Door_Status     (LocalValTypVariableOffset=0)
            Block If Then  (Line 66:68)
            End Block
        End Block
        Block Event SubscriptionDelivery (Line 73:87)
            Message         msg             (LocalRefTypVariableOffset=0)
            Block If Then  (Line 75:86)
                Boolean         tmp             (LocalValTypVariableOffset=0)
                String          tmp_str         (LocalRefTypVariableOffset=1)
                Block If Then  (Line 80:83)
                End Block
                Block Else (Line 83:85)
                End Block
            End Block
        End Block
        Block Event Publish (Line 89:129)
        End Block
        Total Size of Member data including base classes = 0.
    End Block


*************************************************************************************************************

000001  Class TempSensor                                                                                                                                                      426:  0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000002      // Function returns the temperature in degree celcius or 
000003      // Float.NaN if something is wrong
000004      Shared Function GetTemp() As Float                                                                                                                                428:  0x1800   EntryPoint              ValTypParams=0, RefTypParams=0
                                                                                                                                                                              429:  0xE022   AllocateStackSpace      ValTypeSize=1, RefTypeSize=2

000005          // Define the properties of the I2C peripheral and device address
000006          Dim sensor As I2c
000007          sensor = I2c.Create(250000, Pin.SCL, Pin.SDA, 0x48)                                                                                                           430:  0x0110   PushConstI32            250000 (0x0003D090)
                                                                                                                                                                              431:  0xD090                           
                                                                                                                                                                              432:  0x0003                           
                                                                                                                                                                              433:  0x800D   PushConstU10            13 (0x000D)
                                                                                                                                                                              434:  0x800E   PushConstU10            14 (0x000E)
                                                                                                                                                                              435:  0x8048   PushConstU10            72 (0x0048)
                                                                                                                                                                              436:  0x803B   PushConstU10            59 (0x003B)
                                                                                                                                                                              437:  0x0010   ClassNew                
                                                                                                                                                                              438:  0x9400   PopLocalRef             sensor

000008          
000009          // Power up the sensor and give it some time to settle
000010          Device.EnableTempSensor()                                                                                                                                     439:  0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              440:  0x00F0   DeviceEnableTemp        

000011          Thread.Sleep(40000) // See page 13 of the datasheet                                                                                                           441:  0x0110   PushConstI32            40000 (0x00009C40)
                                                                                                                                                                              442:  0x9C40                           
                                                                                                                                                                              443:  0x0000                           
                                                                                                                                                                              444:  0x00D5   ThreadSleep             
                                                                                                                                                                              445:  0xE420   FreeStackSpace          ValTypeSize=1, RefTypeSize=0

000012          
000013          // Read the sensor (only 2 bytes to read
000014          Dim res As ListOfByte = sensor.Read(2)                                                                                                                        446:  0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              447:  0x8C00   PushLocalRef            sensor
                                                                                                                                                                              448:  0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              449:  0x00E0   I2cDeviceRead           
                                                                                                                                                                              450:  0x9401   PopLocalRef             res

000015          
000016          // See Tmp102 documentation how to interpret the data (page 8)
000017          Dim temp As Float = Float.NaN                                                                                                                                 451:  0x0110   PushConstI32            -4194304 (0xFFC00000)
                                                                                                                                                                              452:  0x0000                           
                                                                                                                                                                              453:  0xFFC0                           
                                                                                                                                                                              454:  0x9000   PopLocalI32             temp

000018          If res <> Nothing Then                                                                                                                                        455:  0x8C01   PushLocalRef            res
                                                                                                                                                                              456:  0x000E   PushNothing             
                                                                                                                                                                              457:  0x000B   RefCmpNE                
                                                                                                                                                                              458:  0x3C16   BranchFalse             481
                                                                                                                                                                              459:  0xE020   AllocateStackSpace      ValTypeSize=1, RefTypeSize=0

000019              // Shift the partial part to the right nibble
000020              Dim part As Float = res(1) >> 4                                                                                                                           460:  0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              461:  0x8C01   PushLocalRef            res
                                                                                                                                                                              462:  0x00B4   ListItemGet             
                                                                                                                                                                              463:  0x8004   PushConstU10            4 (0x0004)
                                                                                                                                                                              464:  0x002F   IntShr                  
                                                                                                                                                                              465:  0x007E   CvtIntToFlt             
                                                                                                                                                                              466:  0x9001   PopLocalI32             part

000021              // Temperature partial is 1/16*n where n is between 0 and 15            
000022              part = part / 16                                                                                                                                          467:  0x8801   PushLocalI32            part
                                                                                                                                                                              468:  0xEA10   PushConstFlt            16.0
                                                                                                                                                                              469:  0x003B   FltDiv                  
                                                                                                                                                                              470:  0x9001   PopLocalI32             part

000023              // Sign extend the byte to an integer
000024              temp = res(0).SignExtend() + part                                                                                                                         471:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              472:  0x8C01   PushLocalRef            res
                                                                                                                                                                              473:  0x00B4   ListItemGet             
                                                                                                                                                                              474:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              475:  0x0005   SignExtend              
                                                                                                                                                                              476:  0x8801   PushLocalI32            part
                                                                                                                                                                              477:  0x0078   CvtIntToFlt1            
                                                                                                                                                                              478:  0x0039   FltAdd                  
                                                                                                                                                                              479:  0x9000   PopLocalI32             temp

                                                                                                                                                                              480:  0xE420   FreeStackSpace          ValTypeSize=1, RefTypeSize=0
000025          End If                                                                                                                                                        

000026          
000027          // power off
000028          Device.DisableTempSensor()                                                                                                                                    481:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              482:  0x00F0   DeviceEnableTemp        

000029          Return temp                                                                                                                                                   483:  0x8800   PushLocalI32            temp
                                                                                                                                                                              484:  0x0092   ReturnValType           

000030      End Function                                                                                                                                                      485:  0x0093   Return0                 

000031      
000032      Shared Function GetDieTemp() As Float                                                                                                                             486:  0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000033          // Just get the temperature and return
000034          Return Device.TempDie                                                                                                                                         487:  0x00F7   DeviceTempDie           
                                                                                                                                                                              488:  0x0092   ReturnValType           

000035      End Function                                                                                                                                                      489:  0x0093   Return0                 

000036      
000037      Shared Function ToFarenheit(celcius As Float) As Float                                                                                                            490:  0x1810   EntryPoint              ValTypParams=1, RefTypParams=0

000038          Return (celcius * 9) / 5 + 32                                                                                                                                 491:  0x8800   PushLocalI32            celcius
                                                                                                                                                                              492:  0xEA09   PushConstFlt            9.0
                                                                                                                                                                              493:  0x003C   FltMul                  
                                                                                                                                                                              494:  0xEA05   PushConstFlt            5.0
                                                                                                                                                                              495:  0x003B   FltDiv                  
                                                                                                                                                                              496:  0xEA20   PushConstFlt            32.0
                                                                                                                                                                              497:  0x0039   FltAdd                  
                                                                                                                                                                              498:  0x0092   ReturnValType           

000039      End Function                                                                                                                                                      499:  0x0093   Return0                 

000040      
000041      Shared Function ToCelcius(farenheit As Float) As Float                                                                                                            500:  0x1810   EntryPoint              ValTypParams=1, RefTypParams=0

000042          Return (farenheit - 32) * 5 / 9                                                                                                                               501:  0x8800   PushLocalI32            farenheit
                                                                                                                                                                              502:  0xEA20   PushConstFlt            32.0
                                                                                                                                                                              503:  0x003F   FltSub                  
                                                                                                                                                                              504:  0xEA05   PushConstFlt            5.0
                                                                                                                                                                              505:  0x003C   FltMul                  
                                                                                                                                                                              506:  0xEA09   PushConstFlt            9.0
                                                                                                                                                                              507:  0x003B   FltDiv                  
                                                                                                                                                                              508:  0x0092   ReturnValType           

000043      End Function                                                                                                                                                      509:  0x0093   Return0                 

000044      
000045  End Class                                                                                                                                                             427:  0x0097   ReturnMe                


****** BLOCKS and VARIABLES for TempSensor
    Block Class (Line 1:45)
        TempSensor      Me              (ReadOnly, Offset=0)
        Object          MyBase          (ReadOnly, Offset=0)
        Block Function GetTemp (Line 4:30)
            I2c             sensor          (LocalRefTypVariableOffset=0)
            ListOfByte      res             (LocalRefTypVariableOffset=1)
            Float           temp            (LocalValTypVariableOffset=0)
            Block If Then  (Line 18:25)
                Float           part            (LocalValTypVariableOffset=1)
            End Block
        End Block
        Block Function GetDieTemp (Line 32:35)
        End Block
        Block Function ToFarenheit (Line 37:39)
            Float           celcius         (LocalValTypVariableOffset=0)
        End Block
        Block Function ToCelcius (Line 41:43)
            Float           farenheit       (LocalValTypVariableOffset=0)
        End Block
        Total Size of Member data including base classes = 0.
    End Block


*************************************************************************************************************

000003  Enum dataType As Byte
000004      NONE = 0
000005      VERSION = 1 //default beacon data for MQTT
000006      UPTIME = 2
000007      BATTVOLTAGE = 3
000008      TEMPERATURE = 4
000009      TEMPERATURE2 = 5
000010      HUMIDITY = 6
000011      DEWPOINT = 7
000012      PRESSURE = 8
000013      ALTITUDE = 9
000014      MOTION = 10
000015      DOOR = 11
000016      KNOCK = 12
000017  End Enum

****** BLOCKS and VARIABLES for dataType
    Block Struct (Line 3:17)
        dataType        NONE            (Literal=0)
        dataType        VERSION         (Literal=1)
        dataType        UPTIME          (Literal=2)
        dataType        BATTVOLTAGE     (Literal=3)
        dataType        TEMPERATURE     (Literal=4)
        dataType        TEMPERATURE2    (Literal=5)
        dataType        HUMIDITY        (Literal=6)
        dataType        DEWPOINT        (Literal=7)
        dataType        PRESSURE        (Literal=8)
        dataType        ALTITUDE        (Literal=9)
        dataType        MOTION          (Literal=10)
        dataType        DOOR            (Literal=11)
        dataType        KNOCK           (Literal=12)
        Total Size of Member data including base classes = 0.
    End Block


*************************************************************************************************************

000019  Class MQTT                                                                                                                                                            510:  0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000020      Shared mcUIDString As String
000021      
000022      Shared Sub Publish(topic As String, value As String)                                                                                                              512:  0x1802   EntryPoint              ValTypParams=0, RefTypParams=2
                                                                                                                                                                              513:  0xE001   AllocateStackSpace      ValTypeSize=0, RefTypeSize=1

000023          If mcUIDString = Nothing Then                                                                                                                                 514:  0x000C   PushGlobal              
                                                                                                                                                                              515:  0xC404   PushFieldRef            mcUIDString
                                                                                                                                                                              516:  0x000E   PushNothing             
                                                                                                                                                                              517:  0x000A   RefCmpEQ                
                                                                                                                                                                              518:  0x3C06   BranchFalse             525

000024              mcUIDString = Device.mcUID().ToString("X8")                                                                                                               519:  0x8450   PushLiteral             80
                                                                                                                                                                              520:  0x00F8   DeviceUID               
                                                                                                                                                                              521:  0x8004   PushConstU10            4 (0x0004)
                                                                                                                                                                              522:  0x0069   StrFormat               
                                                                                                                                                                              523:  0x000C   PushGlobal              
                                                                                                                                                                              524:  0xD404   PopFieldRef             mcUIDString

000025          End If
000026          Dim text_string As ListOfByte = New ListOfByte()                                                                                                              525:  0x800C   PushConstU10            12 (0x000C)
                                                                                                                                                                              526:  0x0010   ClassNew                
                                                                                                                                                                              527:  0x9402   PopLocalRef             text_string

000027          text_string.Add(value)                                                                                                                                        528:  0x8C01   PushLocalRef            value
                                                                                                                                                                              529:  0x8C02   PushLocalRef            text_string
                                                                                                                                                                              530:  0x00A6   ListAddString           

000028          Lplan.Publish("MCThings/" + mcUIDString + "/" + topic, text_string)                                                                                           531:  0x8452   PushLiteral             82
                                                                                                                                                                              532:  0x000C   PushGlobal              
                                                                                                                                                                              533:  0xC404   PushFieldRef            mcUIDString
                                                                                                                                                                              534:  0x0056   StrAdd                  
                                                                                                                                                                              535:  0x8456   PushLiteral             86
                                                                                                                                                                              536:  0x0056   StrAdd                  
                                                                                                                                                                              537:  0x8C00   PushLocalRef            topic
                                                                                                                                                                              538:  0x0056   StrAdd                  
                                                                                                                                                                              539:  0x8C02   PushLocalRef            text_string
                                                                                                                                                                              540:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              541:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              542:  0x0101   LplanPublish            

000029      End Sub                                                                                                                                                           543:  0x0091   Return                  

000030      
000031      Shared Sub Publish(topic As String, value As Object)                                                                                                              544:  0x1802   EntryPoint              ValTypParams=0, RefTypParams=2
                                                                                                                                                                              545:  0xE002   AllocateStackSpace      ValTypeSize=0, RefTypeSize=2

000032          Dim text As String = value.ToString()                                                                                                                         546:  0x8C01   PushLocalRef            value
                                                                                                                                                                              547:  0x0081   CvtObjToStr             
                                                                                                                                                                              548:  0x9402   PopLocalRef             text

000033          If mcUIDString = Nothing Then                                                                                                                                 549:  0x000C   PushGlobal              
                                                                                                                                                                              550:  0xC404   PushFieldRef            mcUIDString
                                                                                                                                                                              551:  0x000E   PushNothing             
                                                                                                                                                                              552:  0x000A   RefCmpEQ                
                                                                                                                                                                              553:  0x3C06   BranchFalse             560

000034              mcUIDString = Device.mcUID().ToString("X8")                                                                                                               554:  0x8450   PushLiteral             80
                                                                                                                                                                              555:  0x00F8   DeviceUID               
                                                                                                                                                                              556:  0x8004   PushConstU10            4 (0x0004)
                                                                                                                                                                              557:  0x0069   StrFormat               
                                                                                                                                                                              558:  0x000C   PushGlobal              
                                                                                                                                                                              559:  0xD404   PopFieldRef             mcUIDString

000035          End If
000036          Dim text_string As ListOfByte = New ListOfByte()                                                                                                              560:  0x800C   PushConstU10            12 (0x000C)
                                                                                                                                                                              561:  0x0010   ClassNew                
                                                                                                                                                                              562:  0x9403   PopLocalRef             text_string

000037          text_string.Add(text)                                                                                                                                         563:  0x8C02   PushLocalRef            text
                                                                                                                                                                              564:  0x8C03   PushLocalRef            text_string
                                                                                                                                                                              565:  0x00A6   ListAddString           

000038          Lplan.Publish("MCThings/" + mcUIDString + "/" + topic, text_string)                                                                                           566:  0x8452   PushLiteral             82
                                                                                                                                                                              567:  0x000C   PushGlobal              
                                                                                                                                                                              568:  0xC404   PushFieldRef            mcUIDString
                                                                                                                                                                              569:  0x0056   StrAdd                  
                                                                                                                                                                              570:  0x8456   PushLiteral             86
                                                                                                                                                                              571:  0x0056   StrAdd                  
                                                                                                                                                                              572:  0x8C00   PushLocalRef            topic
                                                                                                                                                                              573:  0x0056   StrAdd                  
                                                                                                                                                                              574:  0x8C03   PushLocalRef            text_string
                                                                                                                                                                              575:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              576:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              577:  0x0101   LplanPublish            

000039      End Sub                                                                                                                                                           578:  0x0091   Return                  

000040      
000041      Shared Sub Publish_exact(topic As String, text As String)                                                                                                         579:  0x1802   EntryPoint              ValTypParams=0, RefTypParams=2
                                                                                                                                                                              580:  0xE001   AllocateStackSpace      ValTypeSize=0, RefTypeSize=1

000042          Dim text_String As ListOfByte = New ListOfByte()                                                                                                              581:  0x800C   PushConstU10            12 (0x000C)
                                                                                                                                                                              582:  0x0010   ClassNew                
                                                                                                                                                                              583:  0x9402   PopLocalRef             text_String

000043          text_String.Add(text)                                                                                                                                         584:  0x8C01   PushLocalRef            text
                                                                                                                                                                              585:  0x8C02   PushLocalRef            text_String
                                                                                                                                                                              586:  0x00A6   ListAddString           

000044          Lplan.Publish(topic, text_String)                                                                                                                             587:  0x8C00   PushLocalRef            topic
                                                                                                                                                                              588:  0x8C02   PushLocalRef            text_String
                                                                                                                                                                              589:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              590:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              591:  0x0101   LplanPublish            

000045      End Sub                                                                                                                                                           592:  0x0091   Return                  

000046      
000047      //**************************************************************************/
000048      //*!
000049      //    Encodes Float or Integer into 4 bytes of beacon data
000050      //    encoding is - byte 0 is data type (numeric value)
000051      //    Integer as Short (2 bytes) 
000052      //    Fraction as byte (1 byte)
000053      //*/
000054      //**************************************************************************/
000055      Shared Sub BeaconPublish(data_Type As Byte, value As Object)                                                                                                      593:  0x1811   EntryPoint              ValTypParams=1, RefTypParams=1
                                                                                                                                                                              594:  0xE041   AllocateStackSpace      ValTypeSize=2, RefTypeSize=1

000056          Dim fraction As Byte = 0
000057          Dim data As Short = 0
000058          If value Is Float Then                                                                                                                                        595:  0x8C00   PushLocalRef            value
                                                                                                                                                                              596:  0x8006   PushConstU10            6 (0x0006)
                                                                                                                                                                              597:  0x0006   ClassIs                 
                                                                                                                                                                              598:  0x3C12   BranchFalse             617

000059              data = value.Cast(Float).ToShort() //get integer part (16 bit only)                                                                                       599:  0x8006   PushConstU10            6 (0x0006)
                                                                                                                                                                              600:  0x8C00   PushLocalRef            value
                                                                                                                                                                              601:  0x0007   Cast                    
                                                                                                                                                                              602:  0x007B   CvtFltToInt             
                                                                                                                                                                              603:  0x007F   CvtIntToSho             
                                                                                                                                                                              604:  0x9002   PopLocalI32             data

000060              fraction = ((value.Cast(Float) - data) * 100.0).ToByte()                                                                                                  605:  0x8006   PushConstU10            6 (0x0006)
                                                                                                                                                                              606:  0x8C00   PushLocalRef            value
                                                                                                                                                                              607:  0x0007   Cast                    
                                                                                                                                                                              608:  0x8802   PushLocalI32            data
                                                                                                                                                                              609:  0x007E   CvtIntToFlt             
                                                                                                                                                                              610:  0x003F   FltSub                  
                                                                                                                                                                              611:  0xEA64   PushConstFlt            100.0
                                                                                                                                                                              612:  0x003C   FltMul                  
                                                                                                                                                                              613:  0x007B   CvtFltToInt             
                                                                                                                                                                              614:  0x007D   CvtIntToByt             
                                                                                                                                                                              615:  0x9001   PopLocalI32             fraction

                                                                                                                                                                              616:  0x4029   Branch                  658
000061          ElseIf value Is Integer Then                                                                                                                                  617:  0x8C00   PushLocalRef            value
                                                                                                                                                                              618:  0x8004   PushConstU10            4 (0x0004)
                                                                                                                                                                              619:  0x0006   ClassIs                 
                                                                                                                                                                              620:  0x3C06   BranchFalse             627

000062              data = value.Cast(Integer).ToShort() //get integer part (16 bit only)                                                                                     621:  0x8004   PushConstU10            4 (0x0004)
                                                                                                                                                                              622:  0x8C00   PushLocalRef            value
                                                                                                                                                                              623:  0x0007   Cast                    
                                                                                                                                                                              624:  0x007F   CvtIntToSho             
                                                                                                                                                                              625:  0x9002   PopLocalI32             data

                                                                                                                                                                              626:  0x401F   Branch                  658
000063          ElseIf value Is Short Then                                                                                                                                    627:  0x8C00   PushLocalRef            value
                                                                                                                                                                              628:  0x8003   PushConstU10            3 (0x0003)
                                                                                                                                                                              629:  0x0006   ClassIs                 
                                                                                                                                                                              630:  0x3C05   BranchFalse             636

000064              data = value.Cast(Short)                                                                                                                                  631:  0x8003   PushConstU10            3 (0x0003)
                                                                                                                                                                              632:  0x8C00   PushLocalRef            value
                                                                                                                                                                              633:  0x0007   Cast                    
                                                                                                                                                                              634:  0x9002   PopLocalI32             data

                                                                                                                                                                              635:  0x4016   Branch                  658
000065          ElseIf value Is Byte Then                                                                                                                                     636:  0x8C00   PushLocalRef            value
                                                                                                                                                                              637:  0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              638:  0x0006   ClassIs                 
                                                                                                                                                                              639:  0x3C05   BranchFalse             645

000066              data = value.Cast(Byte).ToShort() //get integer part (16 bit only)                                                                                        640:  0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              641:  0x8C00   PushLocalRef            value
                                                                                                                                                                              642:  0x0007   Cast                    
                                                                                                                                                                              643:  0x9002   PopLocalI32             data

                                                                                                                                                                              644:  0x400D   Branch                  658
000067          ElseIf value Is Boolean Then                                                                                                                                  645:  0x8C00   PushLocalRef            value
                                                                                                                                                                              646:  0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              647:  0x0006   ClassIs                 
                                                                                                                                                                              648:  0x3C09   BranchFalse             658
                                                                                                                                                                              649:  0xE020   AllocateStackSpace      ValTypeSize=1, RefTypeSize=0

000068              Dim on As Boolean = value.Cast(Boolean)                                                                                                                   650:  0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              651:  0x8C00   PushLocalRef            value
                                                                                                                                                                              652:  0x0007   Cast                    
                                                                                                                                                                              653:  0x9003   PopLocalI32             on

000069              If on Then                                                                                                                                                654:  0x8803   PushLocalI32            on
                                                                                                                                                                              655:  0x3C01   BranchFalse             657

000070                  data = 1                                                                                                                                              656:  0x6402   Const1toLocalI32        data

000071              End If
                                                                                                                                                                              657:  0xE420   FreeStackSpace          ValTypeSize=1, RefTypeSize=0
000072          End If                                                                                                                                                        

000073          Dim beaconData As ListOfByte = New ListOfByte()                                                                                                               658:  0x800C   PushConstU10            12 (0x000C)
                                                                                                                                                                              659:  0x0010   ClassNew                
                                                                                                                                                                              660:  0x9401   PopLocalRef             beaconData

000074          beaconData.Add(data_Type)                                                                                                                                     661:  0x8800   PushLocalI32            data_Type
                                                                                                                                                                              662:  0x8C01   PushLocalRef            beaconData
                                                                                                                                                                              663:  0x00A3   ListAdd                 

000075          beaconData.AddShort(data)                                                                                                                                     664:  0x8802   PushLocalI32            data
                                                                                                                                                                              665:  0x8C01   PushLocalRef            beaconData
                                                                                                                                                                              666:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              667:  0x00A7   ListAdd2Byte            

000076          beaconData.Add(fraction)                                                                                                                                      668:  0x8801   PushLocalI32            fraction
                                                                                                                                                                              669:  0x8C01   PushLocalRef            beaconData
                                                                                                                                                                              670:  0x00A3   ListAdd                 

000077          Lplan.SetBeaconData(beaconData)                                                                                                                               671:  0x8C01   PushLocalRef            beaconData
                                                                                                                                                                              672:  0x0016   PushConstMinus1         
                                                                                                                                                                              673:  0x0105   LplanSetBeacon          

000078          Lplan.SendBeacon()                                                                                                                                            674:  0x0104   LplanSendBeacon         

000079          //Lplan.BeaconNow () //does not seem to work
000080      End Sub                                                                                                                                                           675:  0x0091   Return                  

000081      
000082      Shared Sub Subscribe(topic As String)                                                                                                                             676:  0x1801   EntryPoint              ValTypParams=0, RefTypParams=1

000083          Lplan.Subscribe(topic)                                                                                                                                        677:  0x8C00   PushLocalRef            topic
                                                                                                                                                                              678:  0x0102   LplanSubscribe          

000084      End Sub                                                                                                                                                           679:  0x0091   Return                  

000085      
000086  End Class                                                                                                                                                             511:  0x0097   ReturnMe                


****** BLOCKS and VARIABLES for MQTT
    Block Class (Line 19:86)
        MQTT            Me              (ReadOnly, Offset=0)
        Object          MyBase          (ReadOnly, Offset=0)
        String          mcUIDString     (SharedRefTypVariableOffset=4)
        Block Sub Publish (Line 22:29)
            ListOfByte      text_string     (LocalRefTypVariableOffset=2)
            String          topic           (LocalRefTypVariableOffset=0)
            String          value           (LocalRefTypVariableOffset=1)
            Block If Then  (Line 23:25)
            End Block
        End Block
        Block Sub Publish (Line 31:39)
            String          text            (LocalRefTypVariableOffset=2)
            ListOfByte      text_string     (LocalRefTypVariableOffset=3)
            String          topic           (LocalRefTypVariableOffset=0)
            Object          value           (LocalRefTypVariableOffset=1)
            Block If Then  (Line 33:35)
            End Block
        End Block
        Block Sub Publish_exact (Line 41:45)
            ListOfByte      text_String     (LocalRefTypVariableOffset=2)
            String          topic           (LocalRefTypVariableOffset=0)
            String          text            (LocalRefTypVariableOffset=1)
        End Block
        Block Sub BeaconPublish (Line 55:80)
            Byte            fraction        (LocalValTypVariableOffset=1)
            Short           data            (LocalValTypVariableOffset=2)
            ListOfByte      beaconData      (LocalRefTypVariableOffset=1)
            Byte            data_Type       (LocalValTypVariableOffset=0)
            Object          value           (LocalRefTypVariableOffset=0)
            Block If Then  (Line 58:61)
            End Block
            Block ElseIf (Line 61:63)
            End Block
            Block ElseIf (Line 63:65)
            End Block
            Block ElseIf (Line 65:67)
            End Block
            Block ElseIf (Line 67:72)
                Boolean         on              (LocalValTypVariableOffset=3)
                Block If Then  (Line 69:71)
                End Block
            End Block
        End Block
        Block Sub Subscribe (Line 82:84)
            String          topic           (LocalRefTypVariableOffset=0)
        End Block
        Total Size of Member data including base classes = 0.
    End Block


*************************************************************************************************************

000003  Class MMA8652                                                                                                                                                         680:  0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000004      'Constants
000005      Const I2C_ADDR As Byte = 0x1d
000006      Const I2C_SPEED As Integer = 400000 //250000    
000007      Const CTRL_ID_DEFAULT As Byte = 0x1d //!<This is the factory pre-configured I2C address for an MMA8652
000008      
000009      'Registers From Library but without _REG
000010      Const STATUS As Byte = 0x00
000011      Const F_STATUS As Byte = 0x00
000012      Const OUT_X_MSB As Byte = 0x01
000013      Const OUT_X_LSB As Byte = 0x02
000014      Const OUT_Y_MSB As Byte = 0x03
000015      Const OUT_Y_LSB As Byte = 0x04
000016      Const OUT_Z_MSB As Byte = 0x05
000017      Const OUT_Z_LSB As Byte = 0x06
000018      Const F_SETUP As Byte = 0x09
000019      Const TRIG_CFG As Byte = 0x0a
000020      Const SYSMOD As Byte = 0x0b
000021      Const INT_SOURCE As Byte = 0x0c
000022      Const WHO_AM_I As Byte = 0x0d
000023      Const XYZ_DATA_CFG As Byte = 0x0e
000024      Const HP_FILTER_CUTOFF As Byte = 0x0f
000025      Const PL_STATUS As Byte = 0x10
000026      Const PL_CFG As Byte = 0x11
000027      Const PL_COUNT As Byte = 0x12
000028      Const PL_BF_ZCOMP As Byte = 0x13
000029      Const PL_THS As Byte = 0x14
000030      Const FF_MT_CFG As Byte = 0x15
000031      Const FF_MT_SRC As Byte = 0x16
000032      Const FF_MT_THS As Byte = 0x17
000033      Const FF_MT_COUNT As Byte = 0x18    
000034      Const TRANSIENT_CFG As Byte = 0x1d
000035      Const TRANSIENT_SRC As Byte = 0x1e
000036      Const TRANSIENT_THS As Byte = 0x1f
000037      Const TRANSIENT_COUNT As Byte = 0x20    
000038      Const PULSE_CFG As Byte = 0x21
000039      Const PULSE_SRC As Byte = 0x22
000040      Const PULSE_THSX As Byte = 0x23
000041      Const PULSE_THSY As Byte = 0x24
000042      Const PULSE_THSZ As Byte = 0x25
000043      Const PULSE_TMLT As Byte = 0x26
000044      Const PULSE_LTCY As Byte = 0x27
000045      Const PULSE_WIND As Byte = 0x28
000046      Const ASLP_COUNT As Byte = 0x29    
000047      Const CTRL_REG1 As Byte = 0x2a
000048      Const CTRL_REG2 As Byte = 0x2b
000049      Const CTRL_REG3 As Byte = 0x2c
000050      Const CTRL_REG4 As Byte = 0x2d
000051      Const CTRL_REG5 As Byte = 0x2e    
000052      Const OFF_X As Byte = 0x2f
000053      Const OFF_Y As Byte = 0x30
000054      Const OFF_Z As Byte = 0x31
000055      
000056      Const POSITION_DEFAULT As Byte = 2
000057      Const DELAY_DEFAULT As Byte = 200
000058      
000059      Const STATUS_ZYXDR As Byte = 0x08
000060      Const BUF_SIZE As Byte = 6
000061      
000062      'Masks
000063      Const SRC_ASLP_MASK As Byte = 0x80
000064      Const SRC_FIFO_MASK As Byte = 0x40 // MMA8652 only
000065      Const SRC_TRANS_MASK As Byte = 0x20
000066      Const SRC_LNDPRT_MASK As Byte = 0x10
000067      Const SRC_PULSE_MASK As Byte = 0x08
000068      Const SRC_FF_MT_MASK As Byte = 0x04
000069      Const SRC_DRDY_MASK As Byte = 0x01
000070      
000071      Const ST_MASK As Byte = 0x80
000072      Const RST_MASK As Byte = 0x40
000073      Const SMODS1_MASK As Byte = 0x10
000074      Const SMODS0_MASK As Byte = 0x08
000075      Const SLPE_MASK As Byte = 0x04
000076      Const MODS1_MASK As Byte = 0x02
000077      Const MODS0_MASK As Byte = 0x01
000078      Const SMODS_MASK As Byte = 0x18
000079      Const MODS_MASK As Byte = 0x03
000080      
000081      Const DBCNTM_MASK As Byte = 0x80
000082      Const PL_EN_MASK As Byte = 0x40
000083      
000084      Const FS1_MASK As Byte = 0x02
000085      Const FS0_MASK As Byte = 0x01
000086      Const FS_MASK As Byte = 0x03
000087      
000088      Const ASLP_RATE1_MASK As Byte = 0x80
000089      Const ASLP_RATE0_MASK As Byte = 0x40
000090      Const DR2_MASK As Byte = 0x20
000091      Const DR1_MASK As Byte = 0x10
000092      Const DR0_MASK As Byte = 0x08
000093      Const LNOISE_MASK As Byte = 0x04
000094      Const FREAD_MASK As Byte = 0x02
000095      Const ACTIVE_MASK As Byte = 0x01
000096      Const ASLP_RATE_MASK As Byte = 0xc0
000097      Const DR_MASK As Byte = 0x38
000098      
000099      Const FGERR_MASK As Byte = 0x80 
000100      Const FGT_4_MASK As Byte = 0x40 
000101      Const FGT_3_MASK As Byte = 0x20 
000102      Const FGT_2_MASK As Byte = 0x10 
000103      Const FGT_1_MASK As Byte = 0x08 
000104      Const FGT_0_MASK As Byte = 0x04 
000105      Const FGT_MASK As Byte = 0x7c 
000106      Const SYSMOD1_MASK As Byte = 0x02
000107      Const SYSMOD0_MASK As Byte = 0x01
000108      Const SYSMOD_MASK As Byte = 0x03
000109      
000110      // PL_BF_ZCOMP Back/Front and Z Compensation Register
000111      Const BKFR1 As Byte = 0x80
000112      Const BKFR0 As Byte = 0x40
000113      Const ZLOCK2 As Byte = 0x04
000114      Const ZLOCK1 As Byte = 0x02
000115      Const ZLOCK0 As Byte = 0x01
000116      
000117      Const BKFR1_MASK As Byte = 0x80
000118      Const BKFR0_MASK As Byte = 0x40
000119      Const ZLOCK2_MASK As Byte = 0x04
000120      Const ZLOCK1_MASK As Byte = 0x02
000121      Const ZLOCK0_MASK As Byte = 0x01
000122      Const BKFR_MASK As Byte = 0xc0
000123      Const ZLOCK_MASK As Byte = 0x07
000124      
000125      // PL_P_L_THS Portrait to Landscape Threshold Register
000126      Const P_L_THS4 As Byte = 0x80
000127      Const P_L_THS3 As Byte = 0x40
000128      Const P_L_THS2 As Byte = 0x20
000129      Const P_L_THS1 As Byte = 0x10
000130      Const P_L_THS0 As Byte = 0x08
000131      Const HYS2 As Byte = 0x04
000132      Const HYS1 As Byte = 0x02
000133      Const HYS0 As Byte = 0x01
000134      
000135      Const P_L_THS4_MASK As Byte = 0x80
000136      Const P_L_THS3_MASK As Byte = 0x40
000137      Const P_L_THS2_MASK As Byte = 0x20
000138      Const P_L_THS1_MASK As Byte = 0x10
000139      Const P_L_THS0_MASK As Byte = 0x08
000140      Const HYS2_MASK As Byte = 0x04
000141      Const HYS1_MASK As Byte = 0x02
000142      Const HYS0_MASK As Byte = 0x01
000143      Const P_L_THS_MASK As Byte = 0xf8
000144      Const HYS_MASK As Byte = 0x07
000145      
000146      // CTRL_REG3 Interrupt Control Register
000147      Const FIFO_GATE_MASK As Byte = 0x80 // MMA8652 only
000148      Const WAKE_TRANS_MASK As Byte = 0x40 // MMA8652 only
000149      Const WAKE_LNDPRT_MASK As Byte = 0x20
000150      Const WAKE_PULSE_MASK As Byte = 0x10 // MMA8652 only
000151      Const WAKE_FF_MT_MASK As Byte = 0x08
000152      Const IPOL_MASK As Byte = 0x02
000153      Const PP_OD_MASK As Byte = 0x01
000154      Const WAKE_CLEAR_MASK As Byte = 0x3c
000155      
000156      // CTRL_REG4 Interrupt Enable Register
000157      Const INT_EN_ASLP_MASK As Byte = 0x80
000158      Const INT_EN_FIFO_MASK As Byte = 0x40 // MMA8652 only
000159      Const INT_EN_TRANS_MASK As Byte = 0x20 // MMA8652 only
000160      Const INT_EN_LNDPRT_MASK As Byte = 0x10
000161      Const INT_EN_PULSE_MASK As Byte = 0x08 // MMA8652 only
000162      Const INT_EN_FF_MT_MASK As Byte = 0x04
000163      Const INT_EN_DRDY_MASK As Byte = 0x01
000164      Const INT_CLEAR_MASK As Byte = 0xfd
000165      
000166      // CTRL_REG5 Interrupt Configuration Register
000167      Const INT_CFG_ASLP_MASK As Byte = 0x80
000168      Const INT_CFG_FIFO_MASK As Byte = 0x40 // MMA8652 only
000169      Const INT_CFG_TRANS_MASK As Byte = 0x20 // MMA8652 only
000170      Const INT_CFG_LNDPRT_MASK As Byte = 0x10
000171      Const INT_CFG_PULSE_MASK As Byte = 0x08 // MMA8652 only
000172      Const INT_CFG_FF_MT_MASK As Byte = 0x04
000173      Const INT_CFG_DRDY_MASK As Byte = 0x01
000174      Const INT_CFG_CLEAR_MASK As Byte = 0xfd
000175      
000176      // TRANSIENT_SRC Transient Source Register
000177      Const TEA_MASK As Byte = 0x40
000178      Const ZTRANSE_MASK As Byte = 0x20
000179      Const Z_TRANS_POL_MASK As Byte = 0x10
000180      Const YTRANSE_MASK As Byte = 0x08
000181      Const Y_TRANS_POL_MASK As Byte = 0x04
000182      Const XTRANSE_MASK As Byte = 0x02
000183      Const X_TRANS_POL_MASK As Byte = 0x01
000184      
000185      // TRANSIENT_CFG Transient Configuration Register
000186      Const TELE_MASK As Byte = 0x10
000187      Const ZTEFE_MASK As Byte = 0x08
000188      Const YTEFE_MASK As Byte = 0x04
000189      Const XTEFE_MASK As Byte = 0x02
000190      Const HPF_BYP_MASK As Byte = 0x01
000191      
000192      'Values
000193      Const FULL_SCALE_2G As Byte = 0x00
000194      Const FULL_SCALE_4G As Byte = 0x01
000195      Const FULL_SCALE_8G As Byte = 0x02
000196      
000197      Const AODR_800HZ As Byte = 0x00, // 200 Hz
000198      Const AODR_400HZ As Byte = 0x08
000199      Const AODR_200HZ As Byte = 0x10
000200      Const AODR_100HZ As Byte = 0x18
000201      Const AODR_50HZ As Byte = 0x20
000202      Const AODR_12_5HZ As Byte = 0x28 // 12.5 Hz, etc.
000203      Const AODR_6_25HZ As Byte = 0x30
000204      Const AODR_1_56HZ As Byte = 0x38
000205      
000206      //Sleep modes
000207      Const SMOD_NORMAL As Byte = 0x00
000208      Const SMOD_LOW_NOISE As Byte = 0x08 //(SMODS0_MASK)
000209      Const SMOD_HIGH_RES As Byte = 0x10 //(SMODS1_MASK)
000210      Const SMOD_LOW_POWER As Byte = 0x18 //(SMODS1_MASK+SMODS0_MASK)
000211      
000212      //Wake modes
000213      Const MOD_NORMAL As Byte = 0x00
000214      Const MOD_LOW_NOISE As Byte = 0x01 //(MODS0_MASK)
000215      Const MOD_HIGH_RES As Byte = 0x02 //(MODS1_MASK)
000216      Const MOD_LOW_POWER As Byte = 0x03 //(MODS1_MASK+MODS0_MASK)
000217      
000218      Const SYSMOD_STANDBY As Byte = 0x00
000219      Const SYSMOD_WAKE As Byte = 0x02
000220      Const SYSMOD_SLEEP As Byte = 0x01
000221      
000222      Const FIFO_GATE As Byte = 0x80 // MMA8652 only
000223      Const WAKE_TRANS As Byte = 0x40 // MMA8652 only
000224      Const WAKE_LNDPRT As Byte = 0x20
000225      Const WAKE_PULSE As Byte = 0x10 // MMA8652 only
000226      Const WAKE_FF_MT As Byte = 0x08
000227      Const IPOL As Byte = 0x02
000228      Const PP_OD As Byte = 0x01
000229      
000230      Const INT_EN_ASLP As Byte = 0x80
000231      Const INT_EN_FIFO As Byte = 0x40 // MMA8652 only
000232      Const INT_EN_TRANS As Byte = 0x20 // MMA8652 only
000233      Const INT_EN_LNDPRT As Byte = 0x10
000234      Const INT_EN_PULSE As Byte = 0x08 // MMA8652 only
000235      Const INT_EN_FF_MT As Byte = 0x04
000236      Const INT_EN_DRDY As Byte = 0x01
000237      
000238      Const NEWLP As Byte = 0x80
000239      Const LO As Byte = 0x40
000240      Const LAPO1 As Byte = 0x04
000241      Const LAPO0 As Byte = 0x02
000242      Const BAFRO As Byte = 0x01
000243      
000244      Const TEA As Byte = 0x40
000245      Const ZTRANSE As Byte = 0x20
000246      Const Z_TRANS_POL As Byte = 0x10
000247      Const YTRANSE As Byte = 0x08
000248      Const Y_TRANS_POL As Byte = 0x04
000249      Const XTRANSE As Byte = 0x02
000250      Const X_TRANS_POL As Byte = 0x01
000251      
000252      Const INT_CFG_ASLP As Byte = 0x80
000253      Const INT_CFG_FIFO As Byte = 0x40 // MMA8652 only
000254      Const INT_CFG_TRANS As Byte = 0x20 // MMA8652 only
000255      Const INT_CFG_LNDPRT As Byte = 0x10
000256      Const INT_CFG_PULSE As Byte = 0x08 // MMA8652 only
000257      Const INT_CFG_FF_MT As Byte = 0x04
000258      Const INT_CFG_DRDY As Byte = 0x01
000259      
000260      Const TELE As Byte = 0x10
000261      Const ZTEFE As Byte = 0x08
000262      Const YTEFE As Byte = 0x04
000263      Const XTEFE As Byte = 0x02
000264      Const HPF_BYP As Byte = 0x01
000265      
000266      Const SRC_ASLP As Byte = 0x80
000267      Const SRC_FIFO As Byte = 0x40 // MMA8652 only
000268      Const SRC_TRANS As Byte = 0x20
000269      Const SRC_LNDPRT As Byte = 0x10
000270      Const SRC_PULSE As Byte = 0x08
000271      Const SRC_FF_MT As Byte = 0x04
000272      Const SRC_DRDY As Byte = 0x01
000273      
000274      Const LOW_TRIGGER_THRESHOLD As Float = 0.0
000275      Const HIGH_TRIGGER_THRESHOLD As Float = 8.0
000276      Const TRANSIENT_THRESHOLD_RESOLUTION As Float = 0.063
000277      
000278      Const LOW_DURATION_MS As Float = 0.0
000279      Const HIGH_DURATION_MS As Float = 5100.0
000280      Const DURATION_RESOLUTION As Float = 20.0
000281      
000282      Public gAccelerometer As I2c
000283      Public online As Boolean = False
000284      
000285      Public Sub New()                                                                                                                                                  682:  0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000286          gAccelerometer = I2c.Create(I2C_SPEED, Pin.SCL, Pin.SDA, I2C_ADDR)                                                                                            683:  0x0110   PushConstI32            400000 (0x00061A80)
                                                                                                                                                                              684:  0x1A80                           
                                                                                                                                                                              685:  0x0006                           
                                                                                                                                                                              686:  0x800D   PushConstU10            13 (0x000D)
                                                                                                                                                                              687:  0x800E   PushConstU10            14 (0x000E)
                                                                                                                                                                              688:  0x801D   PushConstU10            29 (0x001D)
                                                                                                                                                                              689:  0x803B   PushConstU10            59 (0x003B)
                                                                                                                                                                              690:  0x0010   ClassNew                
                                                                                                                                                                              691:  0xB400   PopMemberRef            gAccelerometer

000287          If whoAmI() = 0x4a Then                                                                                                                                       692:  0x000D   PushMe                  
                                                                                                                                                                              693:  0x1DD2   BranchSubr              1160
                                                                                                                                                                              694:  0x804A   PushConstU10            74 (0x004A)
                                                                                                                                                                              695:  0x2414   BranchNE                716

000288              online = True                                                                                                                                             696:  0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              697:  0xA804   PopMemberU8             online

000289              reset()                                                                                                                                                   698:  0x000D   PushMe                  
                                                                                                                                                                              699:  0x1E27   BranchSubr              1251

000290              // Set interrupt active low
000291              write(CTRL_REG3, read(CTRL_REG3) & ~IPOL_MASK) // clear bit 1 (active low)                                                                                700:  0x802C   PushConstU10            44 (0x002C)
                                                                                                                                                                              701:  0x802C   PushConstU10            44 (0x002C)
                                                                                                                                                                              702:  0x000D   PushMe                  
                                                                                                                                                                              703:  0x1DF0   BranchSubr              1200
                                                                                                                                                                              704:  0x80FD   PushConstU10            253 (0x00FD)
                                                                                                                                                                              705:  0x001F   IntAnd                  
                                                                                                                                                                              706:  0x000D   PushMe                  
                                                                                                                                                                              707:  0x1E0E   BranchSubr              1234

000292              // Set interrupt push/pull
000293              write(CTRL_REG3, read(CTRL_REG3) & ~PP_OD_MASK) // clear bit 0 (push-pull)                                                                                708:  0x802C   PushConstU10            44 (0x002C)
                                                                                                                                                                              709:  0x802C   PushConstU10            44 (0x002C)
                                                                                                                                                                              710:  0x000D   PushMe                  
                                                                                                                                                                              711:  0x1DE8   BranchSubr              1200
                                                                                                                                                                              712:  0x80FE   PushConstU10            254 (0x00FE)
                                                                                                                                                                              713:  0x001F   IntAnd                  
                                                                                                                                                                              714:  0x000D   PushMe                  
                                                                                                                                                                              715:  0x1E06   BranchSubr              1234

000294          End If
000295      End Sub                                                                                                                                                           716:  0x0097   ReturnMe                

000296      
000297      Public Function map_range(var As Float, old_min As Float, old_max As Float, new_min As Byte, new_max As Byte) As Byte                                             717:  0x1850   EntryPoint              ValTypParams=5, RefTypParams=0
                                                                                                                                                                              718:  0xE040   AllocateStackSpace      ValTypeSize=2, RefTypeSize=0

000298          'Convert floats to byte range
000299          Dim old_range As Float = old_max - old_min                                                                                                                    719:  0x8802   PushLocalI32            old_max
                                                                                                                                                                              720:  0x8801   PushLocalI32            old_min
                                                                                                                                                                              721:  0x003F   FltSub                  
                                                                                                                                                                              722:  0x9005   PopLocalI32             old_range

000300          Dim new_range As Float = new_max - new_min                                                                                                                    723:  0x8804   PushLocalI32            new_max
                                                                                                                                                                              724:  0x8803   PushLocalI32            new_min
                                                                                                                                                                              725:  0x0031   IntSub                  
                                                                                                                                                                              726:  0x007E   CvtIntToFlt             
                                                                                                                                                                              727:  0x9006   PopLocalI32             new_range

000301          Return ((((var - old_min) * new_range) / old_range) + new_min).ToByte                                                                                         728:  0x8800   PushLocalI32            var
                                                                                                                                                                              729:  0x8801   PushLocalI32            old_min
                                                                                                                                                                              730:  0x003F   FltSub                  
                                                                                                                                                                              731:  0x8806   PushLocalI32            new_range
                                                                                                                                                                              732:  0x003C   FltMul                  
                                                                                                                                                                              733:  0x8805   PushLocalI32            old_range
                                                                                                                                                                              734:  0x003B   FltDiv                  
                                                                                                                                                                              735:  0x8803   PushLocalI32            new_min
                                                                                                                                                                              736:  0x007E   CvtIntToFlt             
                                                                                                                                                                              737:  0x0039   FltAdd                  
                                                                                                                                                                              738:  0x007B   CvtFltToInt             
                                                                                                                                                                              739:  0x007D   CvtIntToByt             
                                                                                                                                                                              740:  0x0092   ReturnValType           

000302      End Function                                                                                                                                                      741:  0x0093   Return0                 

000303      
000304      Public Function map_range(var As Float, old_min As Byte, old_max As Byte, new_min As Float, new_max As Float) As Float                                            742:  0x1850   EntryPoint              ValTypParams=5, RefTypParams=0
                                                                                                                                                                              743:  0xE040   AllocateStackSpace      ValTypeSize=2, RefTypeSize=0

000305          'convert bytes to floats range
000306          Dim old_range As Float = old_max - old_min                                                                                                                    744:  0x8802   PushLocalI32            old_max
                                                                                                                                                                              745:  0x8801   PushLocalI32            old_min
                                                                                                                                                                              746:  0x0031   IntSub                  
                                                                                                                                                                              747:  0x007E   CvtIntToFlt             
                                                                                                                                                                              748:  0x9005   PopLocalI32             old_range

000307          Dim new_range As Float = new_max - new_min                                                                                                                    749:  0x8804   PushLocalI32            new_max
                                                                                                                                                                              750:  0x8803   PushLocalI32            new_min
                                                                                                                                                                              751:  0x003F   FltSub                  
                                                                                                                                                                              752:  0x9006   PopLocalI32             new_range

000308          Return ((((var - old_min) * new_range) / old_range) + new_min).ToFloat                                                                                        753:  0x8800   PushLocalI32            var
                                                                                                                                                                              754:  0x8801   PushLocalI32            old_min
                                                                                                                                                                              755:  0x007E   CvtIntToFlt             
                                                                                                                                                                              756:  0x003F   FltSub                  
                                                                                                                                                                              757:  0x8806   PushLocalI32            new_range
                                                                                                                                                                              758:  0x003C   FltMul                  
                                                                                                                                                                              759:  0x8805   PushLocalI32            old_range
                                                                                                                                                                              760:  0x003B   FltDiv                  
                                                                                                                                                                              761:  0x8803   PushLocalI32            new_min
                                                                                                                                                                              762:  0x0039   FltAdd                  
                                                                                                                                                                              763:  0x0092   ReturnValType           

000309      End Function                                                                                                                                                      764:  0x0093   Return0                 

000310      
000311      Public Function GetmsPerCount() As Float                                                                                                                          765:  0x1800   EntryPoint              ValTypParams=0, RefTypParams=0
                                                                                                                                                                              766:  0xE060   AllocateStackSpace      ValTypeSize=3, RefTypeSize=0

000312          //read frequency and mode to determine milliseconds per count for debounce (see table 40 p34 in DS)
000313          Dim frequency As Byte = GetWakeModeFrequency()                                                                                                                767:  0x000D   PushMe                  
                                                                                                                                                                              768:  0x1E13   BranchSubr              1300
                                                                                                                                                                              769:  0x9000   PopLocalI32             frequency

000314          Dim mode As Byte = GetWakeModeResolution()                                                                                                                    770:  0x000D   PushMe                  
                                                                                                                                                                              771:  0x1E24   BranchSubr              1320
                                                                                                                                                                              772:  0x9001   PopLocalI32             mode

000315          Dim ms As Float = 1.25                                                                                                                                        773:  0x0110   PushConstI32            1067450368 (0x3FA00000)
                                                                                                                                                                              774:  0x0000                           
                                                                                                                                                                              775:  0x3FA0                           
                                                                                                                                                                              776:  0x9002   PopLocalI32             ms

000316          
000317          Select mode                                                                                                                                                   777:  0x8801   PushLocalI32            mode
                                                                                                                                                                              778:  0x0122   CaseComputed            
                                                                                                                                                                              779:  0x0002                           CaseCommonClass=Byte
                                                                                                                                                                              780:  0x0004                           NumberOfCaseEntries=4
                                                                                                                                                                              781:  0x0092                           CaseElseBranch=928
                                                                                                                                                                              782:  0x0000                           CaseValue=0
                                                                                                                                                                              783:  0x0008                           CaseBranch=790
                                                                                                                                                                              784:  0x0001                           CaseValue=1
                                                                                                                                                                              785:  0x0028                           CaseBranch=822
                                                                                                                                                                              786:  0x0002                           CaseValue=2
                                                                                                                                                                              787:  0x004D                           CaseBranch=859
                                                                                                                                                                              788:  0x0003                           CaseValue=3
                                                                                                                                                                              789:  0x005E                           CaseBranch=876

000318              Case MOD_NORMAL
000319                  Select frequency                                                                                                                                      790:  0x8800   PushLocalI32            frequency
                                                                                                                                                                              791:  0x0122   CaseComputed            
                                                                                                                                                                              792:  0x0002                           CaseCommonClass=Byte
                                                                                                                                                                              793:  0x0004                           NumberOfCaseEntries=4
                                                                                                                                                                              794:  0x0018                           CaseElseBranch=819
                                                                                                                                                                              795:  0x0000                           CaseValue=0
                                                                                                                                                                              796:  0x0008                           CaseBranch=803
                                                                                                                                                                              797:  0x0008                           CaseValue=8
                                                                                                                                                                              798:  0x000D                           CaseBranch=808
                                                                                                                                                                              799:  0x0010                           CaseValue=16
                                                                                                                                                                              800:  0x0012                           CaseBranch=813
                                                                                                                                                                              801:  0x0018                           CaseValue=24
                                                                                                                                                                              802:  0x0015                           CaseBranch=816

000320                      Case AODR_800HZ
000321                          ms = 1.25                                                                                                                                     803:  0x0110   PushConstI32            1067450368 (0x3FA00000)
                                                                                                                                                                              804:  0x0000                           
                                                                                                                                                                              805:  0x3FA0                           
                                                                                                                                                                              806:  0x9002   PopLocalI32             ms

                                                                                                                                                                              807:  0x400D   Branch                  821
000322                      Case AODR_400HZ                                                                                                                                   

000323                          ms = 2.5                                                                                                                                      808:  0x0110   PushConstI32            1075838976 (0x40200000)
                                                                                                                                                                              809:  0x0000                           
                                                                                                                                                                              810:  0x4020                           
                                                                                                                                                                              811:  0x9002   PopLocalI32             ms

                                                                                                                                                                              812:  0x4008   Branch                  821
000324                      Case AODR_200HZ                                                                                                                                   

000325                          ms = 5.0                                                                                                                                      813:  0xEA05   PushConstFlt            5.0
                                                                                                                                                                              814:  0x9002   PopLocalI32             ms

                                                                                                                                                                              815:  0x4005   Branch                  821
000326                      Case AODR_100HZ                                                                                                                                   

000327                          ms = 10.0                                                                                                                                     816:  0xEA0A   PushConstFlt            10.0
                                                                                                                                                                              817:  0x9002   PopLocalI32             ms

                                                                                                                                                                              818:  0x4002   Branch                  821
000328                      Case Else                                                                                                                                         

000329                          ms = 20.0                                                                                                                                     819:  0xEA14   PushConstFlt            20.0
                                                                                                                                                                              820:  0x9002   PopLocalI32             ms

000330                  End Select
                                                                                                                                                                              821:  0x406A   Branch                  928
000331              Case MOD_LOW_NOISE                                                                                                                                        

000332                  Select frequency                                                                                                                                      822:  0x8800   PushLocalI32            frequency
                                                                                                                                                                              823:  0x0122   CaseComputed            
                                                                                                                                                                              824:  0x0002                           CaseCommonClass=Byte
                                                                                                                                                                              825:  0x0005                           NumberOfCaseEntries=5
                                                                                                                                                                              826:  0x001D                           CaseElseBranch=856
                                                                                                                                                                              827:  0x0000                           CaseValue=0
                                                                                                                                                                              828:  0x000A                           CaseBranch=837
                                                                                                                                                                              829:  0x0008                           CaseValue=8
                                                                                                                                                                              830:  0x000F                           CaseBranch=842
                                                                                                                                                                              831:  0x0010                           CaseValue=16
                                                                                                                                                                              832:  0x0014                           CaseBranch=847
                                                                                                                                                                              833:  0x0018                           CaseValue=24
                                                                                                                                                                              834:  0x0017                           CaseBranch=850
                                                                                                                                                                              835:  0x0020                           CaseValue=32
                                                                                                                                                                              836:  0x001A                           CaseBranch=853

000333                      Case AODR_800HZ
000334                          ms = 1.25                                                                                                                                     837:  0x0110   PushConstI32            1067450368 (0x3FA00000)
                                                                                                                                                                              838:  0x0000                           
                                                                                                                                                                              839:  0x3FA0                           
                                                                                                                                                                              840:  0x9002   PopLocalI32             ms

                                                                                                                                                                              841:  0x4010   Branch                  858
000335                      Case AODR_400HZ                                                                                                                                   

000336                          ms = 2.5                                                                                                                                      842:  0x0110   PushConstI32            1075838976 (0x40200000)
                                                                                                                                                                              843:  0x0000                           
                                                                                                                                                                              844:  0x4020                           
                                                                                                                                                                              845:  0x9002   PopLocalI32             ms

                                                                                                                                                                              846:  0x400B   Branch                  858
000337                      Case AODR_200HZ                                                                                                                                   

000338                          ms = 5.0                                                                                                                                      847:  0xEA05   PushConstFlt            5.0
                                                                                                                                                                              848:  0x9002   PopLocalI32             ms

                                                                                                                                                                              849:  0x4008   Branch                  858
000339                      Case AODR_100HZ                                                                                                                                   

000340                          ms = 10.0                                                                                                                                     850:  0xEA0A   PushConstFlt            10.0
                                                                                                                                                                              851:  0x9002   PopLocalI32             ms

                                                                                                                                                                              852:  0x4005   Branch                  858
000341                      Case AODR_50HZ                                                                                                                                    

000342                          ms = 20.0                                                                                                                                     853:  0xEA14   PushConstFlt            20.0
                                                                                                                                                                              854:  0x9002   PopLocalI32             ms

                                                                                                                                                                              855:  0x4002   Branch                  858
000343                      Case Else                                                                                                                                         

000344                          ms = 80.0                                                                                                                                     856:  0xEA50   PushConstFlt            80.0
                                                                                                                                                                              857:  0x9002   PopLocalI32             ms

000345                  End Select
                                                                                                                                                                              858:  0x4045   Branch                  928
000346              Case MOD_HIGH_RES                                                                                                                                         

000347                  Select frequency                                                                                                                                      859:  0x8800   PushLocalI32            frequency
                                                                                                                                                                              860:  0x0122   CaseComputed            
                                                                                                                                                                              861:  0x0002                           CaseCommonClass=Byte
                                                                                                                                                                              862:  0x0001                           NumberOfCaseEntries=1
                                                                                                                                                                              863:  0x0007                           CaseElseBranch=871
                                                                                                                                                                              864:  0x0000                           CaseValue=0
                                                                                                                                                                              865:  0x0002                           CaseBranch=866

000348                      Case AODR_800HZ
000349                          ms = 1.25                                                                                                                                     866:  0x0110   PushConstI32            1067450368 (0x3FA00000)
                                                                                                                                                                              867:  0x0000                           
                                                                                                                                                                              868:  0x3FA0                           
                                                                                                                                                                              869:  0x9002   PopLocalI32             ms

                                                                                                                                                                              870:  0x4004   Branch                  875
000350                      Case Else                                                                                                                                         

000351                          ms = 2.5                                                                                                                                      871:  0x0110   PushConstI32            1075838976 (0x40200000)
                                                                                                                                                                              872:  0x0000                           
                                                                                                                                                                              873:  0x4020                           
                                                                                                                                                                              874:  0x9002   PopLocalI32             ms

000352                  End Select
                                                                                                                                                                              875:  0x4034   Branch                  928
000353              Case MOD_LOW_POWER                                                                                                                                        

000354                  Select frequency                                                                                                                                      876:  0x8800   PushLocalI32            frequency
                                                                                                                                                                              877:  0x0122   CaseComputed            
                                                                                                                                                                              878:  0x0002                           CaseCommonClass=Byte
                                                                                                                                                                              879:  0x0008                           NumberOfCaseEntries=8
                                                                                                                                                                              880:  0x002F                           CaseElseBranch=928
                                                                                                                                                                              881:  0x0000                           CaseValue=0
                                                                                                                                                                              882:  0x0010                           CaseBranch=897
                                                                                                                                                                              883:  0x0008                           CaseValue=8
                                                                                                                                                                              884:  0x0015                           CaseBranch=902
                                                                                                                                                                              885:  0x0010                           CaseValue=16
                                                                                                                                                                              886:  0x001A                           CaseBranch=907
                                                                                                                                                                              887:  0x0018                           CaseValue=24
                                                                                                                                                                              888:  0x001D                           CaseBranch=910
                                                                                                                                                                              889:  0x0020                           CaseValue=32
                                                                                                                                                                              890:  0x0020                           CaseBranch=913
                                                                                                                                                                              891:  0x0028                           CaseValue=40
                                                                                                                                                                              892:  0x0023                           CaseBranch=916
                                                                                                                                                                              893:  0x0030                           CaseValue=48
                                                                                                                                                                              894:  0x0026                           CaseBranch=919
                                                                                                                                                                              895:  0x0038                           CaseValue=56
                                                                                                                                                                              896:  0x002B                           CaseBranch=924

000355                      Case AODR_800HZ
000356                          ms = 1.25                                                                                                                                     897:  0x0110   PushConstI32            1067450368 (0x3FA00000)
                                                                                                                                                                              898:  0x0000                           
                                                                                                                                                                              899:  0x3FA0                           
                                                                                                                                                                              900:  0x9002   PopLocalI32             ms

                                                                                                                                                                              901:  0x401A   Branch                  928
000357                      Case AODR_400HZ                                                                                                                                   

000358                          ms = 2.5                                                                                                                                      902:  0x0110   PushConstI32            1075838976 (0x40200000)
                                                                                                                                                                              903:  0x0000                           
                                                                                                                                                                              904:  0x4020                           
                                                                                                                                                                              905:  0x9002   PopLocalI32             ms

                                                                                                                                                                              906:  0x4015   Branch                  928
000359                      Case AODR_200HZ                                                                                                                                   

000360                          ms = 5.0                                                                                                                                      907:  0xEA05   PushConstFlt            5.0
                                                                                                                                                                              908:  0x9002   PopLocalI32             ms

                                                                                                                                                                              909:  0x4012   Branch                  928
000361                      Case AODR_100HZ                                                                                                                                   

000362                          ms = 10.0                                                                                                                                     910:  0xEA0A   PushConstFlt            10.0
                                                                                                                                                                              911:  0x9002   PopLocalI32             ms

                                                                                                                                                                              912:  0x400F   Branch                  928
000363                      Case AODR_50HZ                                                                                                                                    

000364                          ms = 20.0                                                                                                                                     913:  0xEA14   PushConstFlt            20.0
                                                                                                                                                                              914:  0x9002   PopLocalI32             ms

                                                                                                                                                                              915:  0x400C   Branch                  928
000365                      Case AODR_12_5HZ                                                                                                                                  

000366                          ms = 80.0                                                                                                                                     916:  0xEA50   PushConstFlt            80.0
                                                                                                                                                                              917:  0x9002   PopLocalI32             ms

                                                                                                                                                                              918:  0x4009   Branch                  928
000367                      Case AODR_6_25HZ                                                                                                                                  

000368                          ms = 160.0                                                                                                                                    919:  0x0110   PushConstI32            1126170624 (0x43200000)
                                                                                                                                                                              920:  0x0000                           
                                                                                                                                                                              921:  0x4320                           
                                                                                                                                                                              922:  0x9002   PopLocalI32             ms

                                                                                                                                                                              923:  0x4004   Branch                  928
000369                      Case AODR_1_56HZ                                                                                                                                  

000370                          ms = 160.0                                                                                                                                    924:  0x0110   PushConstI32            1126170624 (0x43200000)
                                                                                                                                                                              925:  0x0000                           
                                                                                                                                                                              926:  0x4320                           
                                                                                                                                                                              927:  0x9002   PopLocalI32             ms

000371                  End Select
000372          End Select
000373          Return ms                                                                                                                                                     928:  0x8802   PushLocalI32            ms
                                                                                                                                                                              929:  0x0092   ReturnValType           

000374      End Function                                                                                                                                                      930:  0x0093   Return0                 

000375      
000376      Public Function GetmsFromFrequency() As Float                                                                                                                     931:  0x1800   EntryPoint              ValTypParams=0, RefTypParams=0
                                                                                                                                                                              932:  0xE040   AllocateStackSpace      ValTypeSize=2, RefTypeSize=0

000377          //read frequency to determine Wake mode milliseconds per cycle
000378          Dim frequency As Byte = GetWakeModeFrequency()                                                                                                                933:  0x000D   PushMe                  
                                                                                                                                                                              934:  0x1D6D   BranchSubr              1300
                                                                                                                                                                              935:  0x9000   PopLocalI32             frequency

000379          Dim ms As Float = 0
000380          Select frequency                                                                                                                                              936:  0x8800   PushLocalI32            frequency
                                                                                                                                                                              937:  0x0122   CaseComputed            
                                                                                                                                                                              938:  0x0002                           CaseCommonClass=Byte
                                                                                                                                                                              939:  0x0008                           NumberOfCaseEntries=8
                                                                                                                                                                              940:  0x0030                           CaseElseBranch=989
                                                                                                                                                                              941:  0x0000                           CaseValue=0
                                                                                                                                                                              942:  0x0010                           CaseBranch=957
                                                                                                                                                                              943:  0x0008                           CaseValue=8
                                                                                                                                                                              944:  0x0015                           CaseBranch=962
                                                                                                                                                                              945:  0x0010                           CaseValue=16
                                                                                                                                                                              946:  0x001A                           CaseBranch=967
                                                                                                                                                                              947:  0x0018                           CaseValue=24
                                                                                                                                                                              948:  0x001D                           CaseBranch=970
                                                                                                                                                                              949:  0x0020                           CaseValue=32
                                                                                                                                                                              950:  0x0020                           CaseBranch=973
                                                                                                                                                                              951:  0x0028                           CaseValue=40
                                                                                                                                                                              952:  0x0023                           CaseBranch=976
                                                                                                                                                                              953:  0x0030                           CaseValue=48
                                                                                                                                                                              954:  0x0026                           CaseBranch=979
                                                                                                                                                                              955:  0x0038                           CaseValue=56
                                                                                                                                                                              956:  0x002B                           CaseBranch=984

000381              Case AODR_800HZ
000382                  ms = 1.25                                                                                                                                             957:  0x0110   PushConstI32            1067450368 (0x3FA00000)
                                                                                                                                                                              958:  0x0000                           
                                                                                                                                                                              959:  0x3FA0                           
                                                                                                                                                                              960:  0x9001   PopLocalI32             ms

                                                                                                                                                                              961:  0x401F   Branch                  993
000383              Case AODR_400HZ                                                                                                                                           

000384                  ms = 2.5                                                                                                                                              962:  0x0110   PushConstI32            1075838976 (0x40200000)
                                                                                                                                                                              963:  0x0000                           
                                                                                                                                                                              964:  0x4020                           
                                                                                                                                                                              965:  0x9001   PopLocalI32             ms

                                                                                                                                                                              966:  0x401A   Branch                  993
000385              Case AODR_200HZ                                                                                                                                           

000386                  ms = 5.0                                                                                                                                              967:  0xEA05   PushConstFlt            5.0
                                                                                                                                                                              968:  0x9001   PopLocalI32             ms

                                                                                                                                                                              969:  0x4017   Branch                  993
000387              Case AODR_100HZ                                                                                                                                           

000388                  ms = 10.0                                                                                                                                             970:  0xEA0A   PushConstFlt            10.0
                                                                                                                                                                              971:  0x9001   PopLocalI32             ms

                                                                                                                                                                              972:  0x4014   Branch                  993
000389              Case AODR_50HZ                                                                                                                                            

000390                  ms = 20.0                                                                                                                                             973:  0xEA14   PushConstFlt            20.0
                                                                                                                                                                              974:  0x9001   PopLocalI32             ms

                                                                                                                                                                              975:  0x4011   Branch                  993
000391              Case AODR_12_5HZ                                                                                                                                          

000392                  ms = 80.0                                                                                                                                             976:  0xEA50   PushConstFlt            80.0
                                                                                                                                                                              977:  0x9001   PopLocalI32             ms

                                                                                                                                                                              978:  0x400E   Branch                  993
000393              Case AODR_6_25HZ                                                                                                                                          

000394                  ms = 160.0                                                                                                                                            979:  0x0110   PushConstI32            1126170624 (0x43200000)
                                                                                                                                                                              980:  0x0000                           
                                                                                                                                                                              981:  0x4320                           
                                                                                                                                                                              982:  0x9001   PopLocalI32             ms

                                                                                                                                                                              983:  0x4009   Branch                  993
000395              Case AODR_1_56HZ                                                                                                                                          

000396                  ms = 640.0                                                                                                                                            984:  0x0110   PushConstI32            1142947840 (0x44200000)
                                                                                                                                                                              985:  0x0000                           
                                                                                                                                                                              986:  0x4420                           
                                                                                                                                                                              987:  0x9001   PopLocalI32             ms

                                                                                                                                                                              988:  0x4004   Branch                  993
000397              Case Else                                                                                                                                                 

000398                  ms = 1.25 //default                                                                                                                                   989:  0x0110   PushConstI32            1067450368 (0x3FA00000)
                                                                                                                                                                              990:  0x0000                           
                                                                                                                                                                              991:  0x3FA0                           
                                                                                                                                                                              992:  0x9001   PopLocalI32             ms

000399          End Select
000400          Return ms                                                                                                                                                     993:  0x8801   PushLocalI32            ms
                                                                                                                                                                              994:  0x0092   ReturnValType           

000401      End Function                                                                                                                                                      995:  0x0093   Return0                 

000402      
000403      Public Function readAccelData() As ListOfShort                                                                                                                    996:  0x1800   EntryPoint              ValTypParams=0, RefTypParams=0
                                                                                                                                                                              997:  0xE002   AllocateStackSpace      ValTypeSize=0, RefTypeSize=2

000404          Dim rawData As ListOfByte = New ListOfByte // x/y/z accel register data stored here                                                                           998:  0x800C   PushConstU10            12 (0x000C)
                                                                                                                                                                              999:  0x0010   ClassNew                
                                                                                                                                                                              1000: 0x9400   PopLocalRef             rawData

000405          Dim destination As ListOfShort = New ListOfShort                                                                                                              1001: 0x800D   PushConstU10            13 (0x000D)
                                                                                                                                                                              1002: 0x0010   ClassNew                
                                                                                                                                                                              1003: 0x9401   PopLocalRef             destination

000406          rawData = read(OUT_X_MSB, 6) // Read the six raw data registers into data array                                                                               1004: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1005: 0x8006   PushConstU10            6 (0x0006)
                                                                                                                                                                              1006: 0x000D   PushMe                  
                                                                                                                                                                              1007: 0x1CD5   BranchSubr              1221
                                                                                                                                                                              1008: 0x9400   PopLocalRef             rawData

000407          If rawData <> Nothing Then                                                                                                                                    1009: 0x8C00   PushLocalRef            rawData
                                                                                                                                                                              1010: 0x000E   PushNothing             
                                                                                                                                                                              1011: 0x000B   RefCmpNE                
                                                                                                                                                                              1012: 0x3C27   BranchFalse             1052

000408              destination.Add((rawData(0) << 8 | rawData(1)) >> 4)                                                                                                      1013: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1014: 0x8C00   PushLocalRef            rawData
                                                                                                                                                                              1015: 0x00B4   ListItemGet             
                                                                                                                                                                              1016: 0x8008   PushConstU10            8 (0x0008)
                                                                                                                                                                              1017: 0x002E   IntShl                  
                                                                                                                                                                              1018: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1019: 0x8C00   PushLocalRef            rawData
                                                                                                                                                                              1020: 0x00B4   ListItemGet             
                                                                                                                                                                              1021: 0x002D   IntOr                   
                                                                                                                                                                              1022: 0x8004   PushConstU10            4 (0x0004)
                                                                                                                                                                              1023: 0x002F   IntShr                  
                                                                                                                                                                              1024: 0x8C01   PushLocalRef            destination
                                                                                                                                                                              1025: 0x00A3   ListAdd                 

000409              destination.Add((rawData(2) << 8 | rawData(3)) >> 4)                                                                                                      1026: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              1027: 0x8C00   PushLocalRef            rawData
                                                                                                                                                                              1028: 0x00B4   ListItemGet             
                                                                                                                                                                              1029: 0x8008   PushConstU10            8 (0x0008)
                                                                                                                                                                              1030: 0x002E   IntShl                  
                                                                                                                                                                              1031: 0x8003   PushConstU10            3 (0x0003)
                                                                                                                                                                              1032: 0x8C00   PushLocalRef            rawData
                                                                                                                                                                              1033: 0x00B4   ListItemGet             
                                                                                                                                                                              1034: 0x002D   IntOr                   
                                                                                                                                                                              1035: 0x8004   PushConstU10            4 (0x0004)
                                                                                                                                                                              1036: 0x002F   IntShr                  
                                                                                                                                                                              1037: 0x8C01   PushLocalRef            destination
                                                                                                                                                                              1038: 0x00A3   ListAdd                 

000410              destination.Add((rawData(4) << 8 | rawData(5)) >> 4)                                                                                                      1039: 0x8004   PushConstU10            4 (0x0004)
                                                                                                                                                                              1040: 0x8C00   PushLocalRef            rawData
                                                                                                                                                                              1041: 0x00B4   ListItemGet             
                                                                                                                                                                              1042: 0x8008   PushConstU10            8 (0x0008)
                                                                                                                                                                              1043: 0x002E   IntShl                  
                                                                                                                                                                              1044: 0x8005   PushConstU10            5 (0x0005)
                                                                                                                                                                              1045: 0x8C00   PushLocalRef            rawData
                                                                                                                                                                              1046: 0x00B4   ListItemGet             
                                                                                                                                                                              1047: 0x002D   IntOr                   
                                                                                                                                                                              1048: 0x8004   PushConstU10            4 (0x0004)
                                                                                                                                                                              1049: 0x002F   IntShr                  
                                                                                                                                                                              1050: 0x8C01   PushLocalRef            destination
                                                                                                                                                                              1051: 0x00A3   ListAdd                 

000411          End If
000412          Return destination                                                                                                                                            1052: 0x8C01   PushLocalRef            destination
                                                                                                                                                                              1053: 0x0095   ReturnRefType           

000413      End Function                                                                                                                                                      1054: 0x0096   ReturnNothing           

000414      
000415      Public Function readAccelData2sCompliment() As ListOfShort                                                                                                        1055: 0x1800   EntryPoint              ValTypParams=0, RefTypParams=0
                                                                                                                                                                              1056: 0xE001   AllocateStackSpace      ValTypeSize=0, RefTypeSize=1

000416          Dim destination As ListOfShort = New ListOfShort // x/y/z accel register data stored here                                                                     1057: 0x800D   PushConstU10            13 (0x000D)
                                                                                                                                                                              1058: 0x0010   ClassNew                
                                                                                                                                                                              1059: 0x9400   PopLocalRef             destination

000417          destination = readAccelData() // Read the data as shorts                                                                                                      1060: 0x000D   PushMe                  
                                                                                                                                                                              1061: 0x5442   BranchSubrBack          996
                                                                                                                                                                              1062: 0x9400   PopLocalRef             destination

000418          If destination <> Nothing Then                                                                                                                                1063: 0x8C00   PushLocalRef            destination
                                                                                                                                                                              1064: 0x000E   PushNothing             
                                                                                                                                                                              1065: 0x000B   RefCmpNE                
                                                                                                                                                                              1066: 0x3C3C   BranchFalse             1127

000419              //convert values to 2's compliment
000420              If (((destination(0) >> 8) & 0xff) > 0x7f) Then                                                                                                           1067: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1068: 0x8C00   PushLocalRef            destination
                                                                                                                                                                              1069: 0x00B4   ListItemGet             
                                                                                                                                                                              1070: 0x8008   PushConstU10            8 (0x0008)
                                                                                                                                                                              1071: 0x002F   IntShr                  
                                                                                                                                                                              1072: 0x80FF   PushConstU10            255 (0x00FF)
                                                                                                                                                                              1073: 0x001F   IntAnd                  
                                                                                                                                                                              1074: 0x807F   PushConstU10            127 (0x007F)
                                                                                                                                                                              1075: 0x2C0B   BranchLE                1087

000421                  destination(0) = (~destination(0) + 1) * (-1)                                                                                                         1076: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1077: 0x8C00   PushLocalRef            destination
                                                                                                                                                                              1078: 0x00B4   ListItemGet             
                                                                                                                                                                              1079: 0x002C   IntNot                  
                                                                                                                                                                              1080: 0x007F   CvtIntToSho             
                                                                                                                                                                              1081: 0x0028   IntInc                  
                                                                                                                                                                              1082: 0x0016   PushConstMinus1         
                                                                                                                                                                              1083: 0x002A   IntMul                  
                                                                                                                                                                              1084: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1085: 0x8C00   PushLocalRef            destination
                                                                                                                                                                              1086: 0x00B5   ListItemPut             

000422              End If
000423              If (((destination(1) >> 8) & 0xff) > 0x7f) Then                                                                                                           1087: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1088: 0x8C00   PushLocalRef            destination
                                                                                                                                                                              1089: 0x00B4   ListItemGet             
                                                                                                                                                                              1090: 0x8008   PushConstU10            8 (0x0008)
                                                                                                                                                                              1091: 0x002F   IntShr                  
                                                                                                                                                                              1092: 0x80FF   PushConstU10            255 (0x00FF)
                                                                                                                                                                              1093: 0x001F   IntAnd                  
                                                                                                                                                                              1094: 0x807F   PushConstU10            127 (0x007F)
                                                                                                                                                                              1095: 0x2C0B   BranchLE                1107

000424                  destination(1) = (~destination(1) + 1) * (-1)                                                                                                         1096: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1097: 0x8C00   PushLocalRef            destination
                                                                                                                                                                              1098: 0x00B4   ListItemGet             
                                                                                                                                                                              1099: 0x002C   IntNot                  
                                                                                                                                                                              1100: 0x007F   CvtIntToSho             
                                                                                                                                                                              1101: 0x0028   IntInc                  
                                                                                                                                                                              1102: 0x0016   PushConstMinus1         
                                                                                                                                                                              1103: 0x002A   IntMul                  
                                                                                                                                                                              1104: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1105: 0x8C00   PushLocalRef            destination
                                                                                                                                                                              1106: 0x00B5   ListItemPut             

000425              End If
000426              If (((destination(2) >> 8) & 0xff) > 0x7f) Then                                                                                                           1107: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              1108: 0x8C00   PushLocalRef            destination
                                                                                                                                                                              1109: 0x00B4   ListItemGet             
                                                                                                                                                                              1110: 0x8008   PushConstU10            8 (0x0008)
                                                                                                                                                                              1111: 0x002F   IntShr                  
                                                                                                                                                                              1112: 0x80FF   PushConstU10            255 (0x00FF)
                                                                                                                                                                              1113: 0x001F   IntAnd                  
                                                                                                                                                                              1114: 0x807F   PushConstU10            127 (0x007F)
                                                                                                                                                                              1115: 0x2C0B   BranchLE                1127

000427                  destination(2) = (~destination(2) + 1) * (-1)                                                                                                         1116: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              1117: 0x8C00   PushLocalRef            destination
                                                                                                                                                                              1118: 0x00B4   ListItemGet             
                                                                                                                                                                              1119: 0x002C   IntNot                  
                                                                                                                                                                              1120: 0x007F   CvtIntToSho             
                                                                                                                                                                              1121: 0x0028   IntInc                  
                                                                                                                                                                              1122: 0x0016   PushConstMinus1         
                                                                                                                                                                              1123: 0x002A   IntMul                  
                                                                                                                                                                              1124: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              1125: 0x8C00   PushLocalRef            destination
                                                                                                                                                                              1126: 0x00B5   ListItemPut             

000428              End If
000429          End If
000430          Return destination                                                                                                                                            1127: 0x8C00   PushLocalRef            destination
                                                                                                                                                                              1128: 0x0095   ReturnRefType           

000431      End Function                                                                                                                                                      1129: 0x0096   ReturnNothing           

000432      
000433      // Read interrupt source register (see MMA8652FC datasheet, p. 28)
000434      Public Function readIntSource() As Byte                                                                                                                           1130: 0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000435          Return read(INT_SOURCE)                                                                                                                                       1131: 0x800C   PushConstU10            12 (0x000C)
                                                                                                                                                                              1132: 0x000D   PushMe                  
                                                                                                                                                                              1133: 0x1C42   BranchSubr              1200
                                                                                                                                                                              1134: 0x0092   ReturnValType           

000436      End Function                                                                                                                                                      1135: 0x0093   Return0                 

000437      
000438      // Read portrait/landscape status register (see MMA8652FC datasheet, p. 32)
000439      Public Function readPLStatus() As Byte                                                                                                                            1136: 0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000440          Return read(PL_STATUS)                                                                                                                                        1137: 0x8010   PushConstU10            16 (0x0010)
                                                                                                                                                                              1138: 0x000D   PushMe                  
                                                                                                                                                                              1139: 0x1C3C   BranchSubr              1200
                                                                                                                                                                              1140: 0x0092   ReturnValType           

000441      End Function                                                                                                                                                      1141: 0x0093   Return0                 

000442      
000443      // Read pulse source register (see MMA8652FC datasheet, p. 45)
000444      Public Function readPulseSource() As Byte                                                                                                                         1142: 0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000445          Return read(PULSE_SRC)                                                                                                                                        1143: 0x8022   PushConstU10            34 (0x0022)
                                                                                                                                                                              1144: 0x000D   PushMe                  
                                                                                                                                                                              1145: 0x1C36   BranchSubr              1200
                                                                                                                                                                              1146: 0x0092   ReturnValType           

000446      End Function                                                                                                                                                      1147: 0x0093   Return0                 

000447      
000448      // Read Transient source register (see MMA8652FC datasheet, p. 43)
000449      Public Function readTransientSource() As Byte                                                                                                                     1148: 0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000450          Return read(TRANSIENT_SRC)                                                                                                                                    1149: 0x801E   PushConstU10            30 (0x001E)
                                                                                                                                                                              1150: 0x000D   PushMe                  
                                                                                                                                                                              1151: 0x1C30   BranchSubr              1200
                                                                                                                                                                              1152: 0x0092   ReturnValType           

000451      End Function                                                                                                                                                      1153: 0x0093   Return0                 

000452      
000453      // Read free-fall source register (see MMA8652FC datasheet, p. 36)
000454      Public Function readFreeFallSource() As Byte                                                                                                                      1154: 0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000455          Return read(FF_MT_SRC)                                                                                                                                        1155: 0x8016   PushConstU10            22 (0x0016)
                                                                                                                                                                              1156: 0x000D   PushMe                  
                                                                                                                                                                              1157: 0x1C2A   BranchSubr              1200
                                                                                                                                                                              1158: 0x0092   ReturnValType           

000456      End Function                                                                                                                                                      1159: 0x0093   Return0                 

000457      
000458      // Read "who am I" register. It should return 0x4A
000459      Public Function whoAmI() As Byte                                                                                                                                  1160: 0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000460          Return read(WHO_AM_I)                                                                                                                                         1161: 0x800D   PushConstU10            13 (0x000D)
                                                                                                                                                                              1162: 0x000D   PushMe                  
                                                                                                                                                                              1163: 0x1C24   BranchSubr              1200
                                                                                                                                                                              1164: 0x0092   ReturnValType           

000461      End Function                                                                                                                                                      1165: 0x0093   Return0                 

000462      
000463      Public Sub Standby()                                                                                                                                              1166: 0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000464          'set active bit to 0 put accel in standby mode
000465          write(CTRL_REG1, read(CTRL_REG1) & ~ACTIVE_MASK)                                                                                                              1167: 0x802A   PushConstU10            42 (0x002A)
                                                                                                                                                                              1168: 0x802A   PushConstU10            42 (0x002A)
                                                                                                                                                                              1169: 0x000D   PushMe                  
                                                                                                                                                                              1170: 0x1C1D   BranchSubr              1200
                                                                                                                                                                              1171: 0x80FE   PushConstU10            254 (0x00FE)
                                                                                                                                                                              1172: 0x001F   IntAnd                  
                                                                                                                                                                              1173: 0x000D   PushMe                  
                                                                                                                                                                              1174: 0x1C3B   BranchSubr              1234

000466      End Sub                                                                                                                                                           1175: 0x0091   Return                  

000467      
000468      Public Sub Active()                                                                                                                                               1176: 0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000469          'set active bit to put accel in active mode
000470          write(CTRL_REG1, read(CTRL_REG1) | ACTIVE_MASK)                                                                                                               1177: 0x802A   PushConstU10            42 (0x002A)
                                                                                                                                                                              1178: 0x802A   PushConstU10            42 (0x002A)
                                                                                                                                                                              1179: 0x000D   PushMe                  
                                                                                                                                                                              1180: 0x1C13   BranchSubr              1200
                                                                                                                                                                              1181: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1182: 0x002D   IntOr                   
                                                                                                                                                                              1183: 0x000D   PushMe                  
                                                                                                                                                                              1184: 0x1C31   BranchSubr              1234

000471      End Sub                                                                                                                                                           1185: 0x0091   Return                  

000472      
000473      Public Sub SetRegister(reg As Byte)                                                                                                                               1186: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0
                                                                                                                                                                              1187: 0xE001   AllocateStackSpace      ValTypeSize=0, RefTypeSize=1

000474          Dim data As ListOfByte = New ListOfByte                                                                                                                       1188: 0x800C   PushConstU10            12 (0x000C)
                                                                                                                                                                              1189: 0x0010   ClassNew                
                                                                                                                                                                              1190: 0x9400   PopLocalRef             data

000475          data.Add(reg)                                                                                                                                                 1191: 0x8800   PushLocalI32            reg
                                                                                                                                                                              1192: 0x8C00   PushLocalRef            data
                                                                                                                                                                              1193: 0x00A3   ListAdd                 

000476          gAccelerometer.Write(data, False)                                                                                                                             1194: 0x8C00   PushLocalRef            data
                                                                                                                                                                              1195: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1196: 0xA400   PushMemberRef           gAccelerometer
                                                                                                                                                                              1197: 0x00E1   I2cDeviceWrite          
                                                                                                                                                                              1198: 0xE420   FreeStackSpace          ValTypeSize=1, RefTypeSize=0

000477      End Sub                                                                                                                                                           1199: 0x0091   Return                  

000478      
000479      Public Function read(address As Byte) As Byte                                                                                                                     1200: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0
                                                                                                                                                                              1201: 0xE021   AllocateStackSpace      ValTypeSize=1, RefTypeSize=1

000480          // read single byte
000481          SetRegister(address)                                                                                                                                          1202: 0x8800   PushLocalI32            address
                                                                                                                                                                              1203: 0x000D   PushMe                  
                                                                                                                                                                              1204: 0x5413   BranchSubrBack          1186

000482          Dim result As Byte = 0
000483          Dim value As ListOfByte = gAccelerometer.Read(1, True)                                                                                                        1205: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1206: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1207: 0xA400   PushMemberRef           gAccelerometer
                                                                                                                                                                              1208: 0x00E0   I2cDeviceRead           
                                                                                                                                                                              1209: 0x9400   PopLocalRef             value

000484          If value <> Nothing Then                                                                                                                                      1210: 0x8C00   PushLocalRef            value
                                                                                                                                                                              1211: 0x000E   PushNothing             
                                                                                                                                                                              1212: 0x000B   RefCmpNE                
                                                                                                                                                                              1213: 0x3C04   BranchFalse             1218

000485              result = value(0)                                                                                                                                         1214: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1215: 0x8C00   PushLocalRef            value
                                                                                                                                                                              1216: 0x00B4   ListItemGet             
                                                                                                                                                                              1217: 0x9001   PopLocalI32             result

000486          End If
000487          Return result                                                                                                                                                 1218: 0x8801   PushLocalI32            result
                                                                                                                                                                              1219: 0x0092   ReturnValType           

000488      End Function                                                                                                                                                      1220: 0x0093   Return0                 

000489      
000490      Public Function read(address As Byte, length As Byte) As ListOfByte                                                                                               1221: 0x1820   EntryPoint              ValTypParams=2, RefTypParams=0
                                                                                                                                                                              1222: 0xE001   AllocateStackSpace      ValTypeSize=0, RefTypeSize=1

000491          //read multiple bytes
000492          SetRegister(address)                                                                                                                                          1223: 0x8800   PushLocalI32            address
                                                                                                                                                                              1224: 0x000D   PushMe                  
                                                                                                                                                                              1225: 0x5428   BranchSubrBack          1186

000493          Dim value As ListOfByte = gAccelerometer.Read(length, True)                                                                                                   1226: 0x8801   PushLocalI32            length
                                                                                                                                                                              1227: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1228: 0xA400   PushMemberRef           gAccelerometer
                                                                                                                                                                              1229: 0x00E0   I2cDeviceRead           
                                                                                                                                                                              1230: 0x9400   PopLocalRef             value

000494          Return value                                                                                                                                                  1231: 0x8C00   PushLocalRef            value
                                                                                                                                                                              1232: 0x0095   ReturnRefType           

000495      End Function                                                                                                                                                      1233: 0x0096   ReturnNothing           

000496      
000497      Public Sub write(address As Byte, value As Byte)                                                                                                                  1234: 0x1820   EntryPoint              ValTypParams=2, RefTypParams=0
                                                                                                                                                                              1235: 0xE001   AllocateStackSpace      ValTypeSize=0, RefTypeSize=1

000498          //write single byte
000499          Dim data As ListOfByte = New ListOfByte                                                                                                                       1236: 0x800C   PushConstU10            12 (0x000C)
                                                                                                                                                                              1237: 0x0010   ClassNew                
                                                                                                                                                                              1238: 0x9400   PopLocalRef             data

000500          data.Add(address)                                                                                                                                             1239: 0x8800   PushLocalI32            address
                                                                                                                                                                              1240: 0x8C00   PushLocalRef            data
                                                                                                                                                                              1241: 0x00A3   ListAdd                 

000501          data.Add(value)                                                                                                                                               1242: 0x8801   PushLocalI32            value
                                                                                                                                                                              1243: 0x8C00   PushLocalRef            data
                                                                                                                                                                              1244: 0x00A3   ListAdd                 

000502          gAccelerometer.Write(data, True)                                                                                                                              1245: 0x8C00   PushLocalRef            data
                                                                                                                                                                              1246: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1247: 0xA400   PushMemberRef           gAccelerometer
                                                                                                                                                                              1248: 0x00E1   I2cDeviceWrite          
                                                                                                                                                                              1249: 0xE420   FreeStackSpace          ValTypeSize=1, RefTypeSize=0

000503      End Sub                                                                                                                                                           1250: 0x0091   Return                  

000504      
000505      Public Sub reset()                                                                                                                                                1251: 0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000506          write(CTRL_REG2, RST_MASK)                                                                                                                                    1252: 0x802B   PushConstU10            43 (0x002B)
                                                                                                                                                                              1253: 0x8040   PushConstU10            64 (0x0040)
                                                                                                                                                                              1254: 0x000D   PushMe                  
                                                                                                                                                                              1255: 0x5416   BranchSubrBack          1234

000507          While (read(CTRL_REG2) & RST_MASK) = RST_MASK                                                                                                                 1256: 0x802B   PushConstU10            43 (0x002B)
                                                                                                                                                                              1257: 0x000D   PushMe                  
                                                                                                                                                                              1258: 0x543B   BranchSubrBack          1200
                                                                                                                                                                              1259: 0x8040   PushConstU10            64 (0x0040)
                                                                                                                                                                              1260: 0x001F   IntAnd                  
                                                                                                                                                                              1261: 0x8040   PushConstU10            64 (0x0040)
                                                                                                                                                                              1262: 0x2404   BranchNE                1267

000508              Thread.Sleep(1000) //wait for reset to end                                                                                                                1263: 0x83E8   PushConstU10            1000 (0x03E8)
                                                                                                                                                                              1264: 0x00D5   ThreadSleep             
                                                                                                                                                                              1265: 0xE420   FreeStackSpace          ValTypeSize=1, RefTypeSize=0

000509          End While                                                                                                                                                     1266: 0x500B   BranchBack              1256

000510      End Sub                                                                                                                                                           1267: 0x0091   Return                  

000511      
000512      Public Sub SetRange(range As Byte)                                                                                                                                1268: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0

000513          write(XYZ_DATA_CFG, (read(XYZ_DATA_CFG) & ~FS_MASK) | range)                                                                                                  1269: 0x800E   PushConstU10            14 (0x000E)
                                                                                                                                                                              1270: 0x800E   PushConstU10            14 (0x000E)
                                                                                                                                                                              1271: 0x000D   PushMe                  
                                                                                                                                                                              1272: 0x5449   BranchSubrBack          1200
                                                                                                                                                                              1273: 0x80FC   PushConstU10            252 (0x00FC)
                                                                                                                                                                              1274: 0x001F   IntAnd                  
                                                                                                                                                                              1275: 0x8800   PushLocalI32            range
                                                                                                                                                                              1276: 0x002D   IntOr                   
                                                                                                                                                                              1277: 0x000D   PushMe                  
                                                                                                                                                                              1278: 0x542D   BranchSubrBack          1234

000514      End Sub                                                                                                                                                           1279: 0x0091   Return                  

000515      
000516      Public Function GetRange() As Byte                                                                                                                                1280: 0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000517          Return read(XYZ_DATA_CFG) & FS_MASK                                                                                                                           1281: 0x800E   PushConstU10            14 (0x000E)
                                                                                                                                                                              1282: 0x000D   PushMe                  
                                                                                                                                                                              1283: 0x5454   BranchSubrBack          1200
                                                                                                                                                                              1284: 0x8003   PushConstU10            3 (0x0003)
                                                                                                                                                                              1285: 0x001F   IntAnd                  
                                                                                                                                                                              1286: 0x0092   ReturnValType           

000518      End Function                                                                                                                                                      1287: 0x0093   Return0                 

000519      
000520      Public Sub SetWakeModeFrequency(frequency As Byte)                                                                                                                1288: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0

000521          write(CTRL_REG1, (read(CTRL_REG1) & ~DR_MASK) | frequency)                                                                                                    1289: 0x802A   PushConstU10            42 (0x002A)
                                                                                                                                                                              1290: 0x802A   PushConstU10            42 (0x002A)
                                                                                                                                                                              1291: 0x000D   PushMe                  
                                                                                                                                                                              1292: 0x545D   BranchSubrBack          1200
                                                                                                                                                                              1293: 0x80C7   PushConstU10            199 (0x00C7)
                                                                                                                                                                              1294: 0x001F   IntAnd                  
                                                                                                                                                                              1295: 0x8800   PushLocalI32            frequency
                                                                                                                                                                              1296: 0x002D   IntOr                   
                                                                                                                                                                              1297: 0x000D   PushMe                  
                                                                                                                                                                              1298: 0x5441   BranchSubrBack          1234

000522      End Sub                                                                                                                                                           1299: 0x0091   Return                  

000523      
000524      Public Function GetWakeModeFrequency() As Byte                                                                                                                    1300: 0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000525          Return read(CTRL_REG1) & DR_MASK                                                                                                                              1301: 0x802A   PushConstU10            42 (0x002A)
                                                                                                                                                                              1302: 0x000D   PushMe                  
                                                                                                                                                                              1303: 0x5468   BranchSubrBack          1200
                                                                                                                                                                              1304: 0x8038   PushConstU10            56 (0x0038)
                                                                                                                                                                              1305: 0x001F   IntAnd                  
                                                                                                                                                                              1306: 0x0092   ReturnValType           

000526      End Function                                                                                                                                                      1307: 0x0093   Return0                 

000527      
000528      Public Sub SetWakeModeResolution(resolution As Byte)                                                                                                              1308: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0

000529          write(CTRL_REG2, (read(CTRL_REG2) & ~MODS_MASK) | resolution) // clear bits 0 and 1, sent wake mode resolution                                                1309: 0x802B   PushConstU10            43 (0x002B)
                                                                                                                                                                              1310: 0x802B   PushConstU10            43 (0x002B)
                                                                                                                                                                              1311: 0x000D   PushMe                  
                                                                                                                                                                              1312: 0x5471   BranchSubrBack          1200
                                                                                                                                                                              1313: 0x80FC   PushConstU10            252 (0x00FC)
                                                                                                                                                                              1314: 0x001F   IntAnd                  
                                                                                                                                                                              1315: 0x8800   PushLocalI32            resolution
                                                                                                                                                                              1316: 0x002D   IntOr                   
                                                                                                                                                                              1317: 0x000D   PushMe                  
                                                                                                                                                                              1318: 0x5455   BranchSubrBack          1234

000530      End Sub                                                                                                                                                           1319: 0x0091   Return                  

000531      
000532      Public Function GetWakeModeResolution() As Byte                                                                                                                   1320: 0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000533          Return read(CTRL_REG2) & MODS_MASK // read bits 0 and 1                                                                                                       1321: 0x802B   PushConstU10            43 (0x002B)
                                                                                                                                                                              1322: 0x000D   PushMe                  
                                                                                                                                                                              1323: 0x547C   BranchSubrBack          1200
                                                                                                                                                                              1324: 0x8003   PushConstU10            3 (0x0003)
                                                                                                                                                                              1325: 0x001F   IntAnd                  
                                                                                                                                                                              1326: 0x0092   ReturnValType           

000534      End Function                                                                                                                                                      1327: 0x0093   Return0                 

000535      
000536      Public Sub SetSleepMode(mode As Byte)                                                                                                                             1328: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0

000537          write(CTRL_REG2, (read(CTRL_REG2) & ~SLPE_MASK) | mode) // clear bit 3, set sleep mode                                                                        1329: 0x802B   PushConstU10            43 (0x002B)
                                                                                                                                                                              1330: 0x802B   PushConstU10            43 (0x002B)
                                                                                                                                                                              1331: 0x000D   PushMe                  
                                                                                                                                                                              1332: 0x5485   BranchSubrBack          1200
                                                                                                                                                                              1333: 0x80FB   PushConstU10            251 (0x00FB)
                                                                                                                                                                              1334: 0x001F   IntAnd                  
                                                                                                                                                                              1335: 0x8800   PushLocalI32            mode
                                                                                                                                                                              1336: 0x002D   IntOr                   
                                                                                                                                                                              1337: 0x000D   PushMe                  
                                                                                                                                                                              1338: 0x5469   BranchSubrBack          1234

000538      End Sub                                                                                                                                                           1339: 0x0091   Return                  

000539      
000540      Public Function GetSleepMode() As Byte                                                                                                                            1340: 0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000541          Return read(CTRL_REG2) & SLPE_MASK // read bit 3                                                                                                              1341: 0x802B   PushConstU10            43 (0x002B)
                                                                                                                                                                              1342: 0x000D   PushMe                  
                                                                                                                                                                              1343: 0x5490   BranchSubrBack          1200
                                                                                                                                                                              1344: 0x8004   PushConstU10            4 (0x0004)
                                                                                                                                                                              1345: 0x001F   IntAnd                  
                                                                                                                                                                              1346: 0x0092   ReturnValType           

000542      End Function                                                                                                                                                      1347: 0x0093   Return0                 

000543      
000544      Public Sub SetSleepModeResolution(resolution As Byte)                                                                                                             1348: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0

000545          write(CTRL_REG2, (read(CTRL_REG2) & ~SMODS_MASK) | resolution) // clear bits 4 and 5, set sleep mode resolution                                               1349: 0x802B   PushConstU10            43 (0x002B)
                                                                                                                                                                              1350: 0x802B   PushConstU10            43 (0x002B)
                                                                                                                                                                              1351: 0x000D   PushMe                  
                                                                                                                                                                              1352: 0x5499   BranchSubrBack          1200
                                                                                                                                                                              1353: 0x80E7   PushConstU10            231 (0x00E7)
                                                                                                                                                                              1354: 0x001F   IntAnd                  
                                                                                                                                                                              1355: 0x8800   PushLocalI32            resolution
                                                                                                                                                                              1356: 0x002D   IntOr                   
                                                                                                                                                                              1357: 0x000D   PushMe                  
                                                                                                                                                                              1358: 0x547D   BranchSubrBack          1234

000546      End Sub                                                                                                                                                           1359: 0x0091   Return                  

000547      
000548      Public Function GetSleepModeResolution() As Byte                                                                                                                  1360: 0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000549          Return read(CTRL_REG2) & SMODS_MASK // read bits 4 and 5                                                                                                      1361: 0x802B   PushConstU10            43 (0x002B)
                                                                                                                                                                              1362: 0x000D   PushMe                  
                                                                                                                                                                              1363: 0x54A4   BranchSubrBack          1200
                                                                                                                                                                              1364: 0x8018   PushConstU10            24 (0x0018)
                                                                                                                                                                              1365: 0x001F   IntAnd                  
                                                                                                                                                                              1366: 0x0092   ReturnValType           

000550      End Function                                                                                                                                                      1367: 0x0093   Return0                 

000551      
000552      Public Sub SetSleepModeInterrupts(interrupts As Byte)                                                                                                             1368: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0

000553          write(CTRL_REG3, (read(CTRL_REG3) & ~interrupts) | interrupts) // clear interrupts, set Wake on interrupts                                                    1369: 0x802C   PushConstU10            44 (0x002C)
                                                                                                                                                                              1370: 0x802C   PushConstU10            44 (0x002C)
                                                                                                                                                                              1371: 0x000D   PushMe                  
                                                                                                                                                                              1372: 0x54AD   BranchSubrBack          1200
                                                                                                                                                                              1373: 0x8800   PushLocalI32            interrupts
                                                                                                                                                                              1374: 0x002C   IntNot                  
                                                                                                                                                                              1375: 0x007D   CvtIntToByt             
                                                                                                                                                                              1376: 0x001F   IntAnd                  
                                                                                                                                                                              1377: 0x8800   PushLocalI32            interrupts
                                                                                                                                                                              1378: 0x002D   IntOr                   
                                                                                                                                                                              1379: 0x000D   PushMe                  
                                                                                                                                                                              1380: 0x5493   BranchSubrBack          1234

000554      End Sub                                                                                                                                                           1381: 0x0091   Return                  

000555      
000556      Public Sub SetEnableInterrupts(interrupts As Byte)                                                                                                                1382: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0

000557          write(CTRL_REG4, (read(CTRL_REG4) & ~interrupts) | interrupts) // clear interrupts,  enable/disable interrupts                                                1383: 0x802D   PushConstU10            45 (0x002D)
                                                                                                                                                                              1384: 0x802D   PushConstU10            45 (0x002D)
                                                                                                                                                                              1385: 0x000D   PushMe                  
                                                                                                                                                                              1386: 0x54BB   BranchSubrBack          1200
                                                                                                                                                                              1387: 0x8800   PushLocalI32            interrupts
                                                                                                                                                                              1388: 0x002C   IntNot                  
                                                                                                                                                                              1389: 0x007D   CvtIntToByt             
                                                                                                                                                                              1390: 0x001F   IntAnd                  
                                                                                                                                                                              1391: 0x8800   PushLocalI32            interrupts
                                                                                                                                                                              1392: 0x002D   IntOr                   
                                                                                                                                                                              1393: 0x000D   PushMe                  
                                                                                                                                                                              1394: 0x54A1   BranchSubrBack          1234

000558      End Sub                                                                                                                                                           1395: 0x0091   Return                  

000559      
000560      Public Sub SetInterruptsINT(interrupts As Byte)                                                                                                                   1396: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0

000561          'route interrupt to INT1 pin (ff sets all interrupts to INT1 , 00 to INT2)
000562          write(CTRL_REG5, (read(CTRL_REG5) & ~interrupts) | interrupts) // clear interrupts, set interrupts to INT1 (rest to INT2)                                     1397: 0x802E   PushConstU10            46 (0x002E)
                                                                                                                                                                              1398: 0x802E   PushConstU10            46 (0x002E)
                                                                                                                                                                              1399: 0x000D   PushMe                  
                                                                                                                                                                              1400: 0x54C9   BranchSubrBack          1200
                                                                                                                                                                              1401: 0x8800   PushLocalI32            interrupts
                                                                                                                                                                              1402: 0x002C   IntNot                  
                                                                                                                                                                              1403: 0x007D   CvtIntToByt             
                                                                                                                                                                              1404: 0x001F   IntAnd                  
                                                                                                                                                                              1405: 0x8800   PushLocalI32            interrupts
                                                                                                                                                                              1406: 0x002D   IntOr                   
                                                                                                                                                                              1407: 0x000D   PushMe                  
                                                                                                                                                                              1408: 0x54AF   BranchSubrBack          1234

000563      End Sub                                                                                                                                                           1409: 0x0091   Return                  

000564      
000565      Public Sub SetTransientCFG(transient As Byte)                                                                                                                     1410: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0

000566          'options are TELE | ZTEFE | YTEFE | XTEFE | HPF_BYP (latch enable, Z,Y,X enable, Filter disable)
000567          write(TRANSIENT_CFG, transient) // set transients config, High Pass Filter (bit 0) enabled by default                                                         1411: 0x801D   PushConstU10            29 (0x001D)
                                                                                                                                                                              1412: 0x8800   PushLocalI32            transient
                                                                                                                                                                              1413: 0x000D   PushMe                  
                                                                                                                                                                              1414: 0x54B5   BranchSubrBack          1234

000568      End Sub                                                                                                                                                           1415: 0x0091   Return                  

000569      
000570      Public Sub SetTransientThreshold(threshold As Float)                                                                                                              1416: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0
                                                                                                                                                                              1417: 0xE020   AllocateStackSpace      ValTypeSize=1, RefTypeSize=0

000571          'A 7-bit unsigned number, with 0.063 g/LSB. The maximum threshold is ±8g (irrispective of Range setting)
000572          Dim thresholdByte As Byte = map_range(threshold, 0, 8.0, 0, 0x7f)                                                                                             1418: 0x8800   PushLocalI32            threshold
                                                                                                                                                                              1419: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1420: 0xEA08   PushConstFlt            8.0
                                                                                                                                                                              1421: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1422: 0x807F   PushConstU10            127 (0x007F)
                                                                                                                                                                              1423: 0x000D   PushMe                  
                                                                                                                                                                              1424: 0x56C4   BranchSubrBack          717
                                                                                                                                                                              1425: 0x9001   PopLocalI32             thresholdByte

000573          If thresholdByte <= 0x7f Then                                                                                                                                 1426: 0x8801   PushLocalI32            thresholdByte
                                                                                                                                                                              1427: 0x807F   PushConstU10            127 (0x007F)
                                                                                                                                                                              1428: 0x3004   BranchGT                1433

000574              write(TRANSIENT_THS, thresholdByte)                                                                                                                       1429: 0x801F   PushConstU10            31 (0x001F)
                                                                                                                                                                              1430: 0x8801   PushLocalI32            thresholdByte
                                                                                                                                                                              1431: 0x000D   PushMe                  
                                                                                                                                                                              1432: 0x54C7   BranchSubrBack          1234

000575          End If
000576      End Sub                                                                                                                                                           1433: 0x0091   Return                  

000577      
000578      Public Sub SetTransientCount(count As Byte)                                                                                                                       1434: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0

000579          'Set Duration in counts (if set to 0, causes interrupt immediately, once threshold exceeded)
000580          'The TRANSIENT_COUNT sets the minimum number of debounce counts continuously matching the condition where the
000581          'unsigned value of high - pass filtered data Is greater than the user - specified value of TRANSIENT_THS.
000582          write(TRANSIENT_COUNT, count)                                                                                                                                 1435: 0x8020   PushConstU10            32 (0x0020)
                                                                                                                                                                              1436: 0x8800   PushLocalI32            count
                                                                                                                                                                              1437: 0x000D   PushMe                  
                                                                                                                                                                              1438: 0x54CD   BranchSubrBack          1234

000583      End Sub                                                                                                                                                           1439: 0x0091   Return                  

000584      
000585      Public Sub SetTransientDuration(duration As Float)                                                                                                                1440: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0
                                                                                                                                                                              1441: 0xE040   AllocateStackSpace      ValTypeSize=2, RefTypeSize=0

000586          'Set Duration in ms (if set to 0, causes interrupt immediately, once threshold exceeded)
000587          'The TRANSIENT_COUNT sets the minimum number of debounce counts continuously matching the condition where the
000588          'unsigned value of high - pass filtered data Is greater than the user - specified value of TRANSIENT_THS.
000589          'The duration in ms depends on the frequency, ie 50 Hz = 20ms per count, so 100ms = 5 counts
000590          'But is effected by mode also.... see table 66 p44 of DS
000591          Dim msPerCount As Float = GetmsPerCount()                                                                                                                     1442: 0x000D   PushMe                  
                                                                                                                                                                              1443: 0x56A7   BranchSubrBack          765
                                                                                                                                                                              1444: 0x9001   PopLocalI32             msPerCount

000592          Dim count As Byte = (duration / msPerCount).ToByte                                                                                                            1445: 0x8800   PushLocalI32            duration
                                                                                                                                                                              1446: 0x8801   PushLocalI32            msPerCount
                                                                                                                                                                              1447: 0x003B   FltDiv                  
                                                                                                                                                                              1448: 0x007B   CvtFltToInt             
                                                                                                                                                                              1449: 0x007D   CvtIntToByt             
                                                                                                                                                                              1450: 0x9002   PopLocalI32             count

000593          write(TRANSIENT_COUNT, count)                                                                                                                                 1451: 0x8020   PushConstU10            32 (0x0020)
                                                                                                                                                                              1452: 0x8802   PushLocalI32            count
                                                                                                                                                                              1453: 0x000D   PushMe                  
                                                                                                                                                                              1454: 0x54DD   BranchSubrBack          1234

000594      End Sub                                                                                                                                                           1455: 0x0091   Return                  

000595      
000596      Public Sub EnablePL(enable As Boolean)                                                                                                                            1456: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0

000597          If enable Then                                                                                                                                                1457: 0x8800   PushLocalI32            enable
                                                                                                                                                                              1458: 0x3C0B   BranchFalse             1470

000598              write(PL_CFG, (read(PL_CFG) & ~PL_EN_MASK) | PL_EN_MASK) // Enable P/L (debounce enabled by default)                                                      1459: 0x8011   PushConstU10            17 (0x0011)
                                                                                                                                                                              1460: 0x8011   PushConstU10            17 (0x0011)
                                                                                                                                                                              1461: 0x000D   PushMe                  
                                                                                                                                                                              1462: 0x5507   BranchSubrBack          1200
                                                                                                                                                                              1463: 0x80BF   PushConstU10            191 (0x00BF)
                                                                                                                                                                              1464: 0x001F   IntAnd                  
                                                                                                                                                                              1465: 0x8040   PushConstU10            64 (0x0040)
                                                                                                                                                                              1466: 0x002D   IntOr                   
                                                                                                                                                                              1467: 0x000D   PushMe                  
                                                                                                                                                                              1468: 0x54EB   BranchSubrBack          1234

                                                                                                                                                                              1469: 0x4008   Branch                  1478
000599          Else                                                                                                                                                          

000600              write(PL_CFG, (read(PL_CFG) & ~PL_EN_MASK)) // Disable P/L (debounce enabled by default)                                                                  1470: 0x8011   PushConstU10            17 (0x0011)
                                                                                                                                                                              1471: 0x8011   PushConstU10            17 (0x0011)
                                                                                                                                                                              1472: 0x000D   PushMe                  
                                                                                                                                                                              1473: 0x5512   BranchSubrBack          1200
                                                                                                                                                                              1474: 0x80BF   PushConstU10            191 (0x00BF)
                                                                                                                                                                              1475: 0x001F   IntAnd                  
                                                                                                                                                                              1476: 0x000D   PushMe                  
                                                                                                                                                                              1477: 0x54F4   BranchSubrBack          1234

000601          End If
000602      End Sub                                                                                                                                                           1478: 0x0091   Return                  

000603      
000604      Public Sub EnablePLDebounce(enable As Boolean)                                                                                                                    1479: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0

000605          '0 Decrements debounce whenever the condition of interest is no longer valid.
000606          '1 Clears the counter whenever the condition of interest is no longer valid. (default)
000607          If enable Then                                                                                                                                                1480: 0x8800   PushLocalI32            enable
                                                                                                                                                                              1481: 0x3C0B   BranchFalse             1493

000608              write(PL_CFG, (read(PL_CFG) & ~DBCNTM_MASK) | DBCNTM_MASK) // Enable P/L (debounce enabled by default)                                                    1482: 0x8011   PushConstU10            17 (0x0011)
                                                                                                                                                                              1483: 0x8011   PushConstU10            17 (0x0011)
                                                                                                                                                                              1484: 0x000D   PushMe                  
                                                                                                                                                                              1485: 0x551E   BranchSubrBack          1200
                                                                                                                                                                              1486: 0x807F   PushConstU10            127 (0x007F)
                                                                                                                                                                              1487: 0x001F   IntAnd                  
                                                                                                                                                                              1488: 0x8080   PushConstU10            128 (0x0080)
                                                                                                                                                                              1489: 0x002D   IntOr                   
                                                                                                                                                                              1490: 0x000D   PushMe                  
                                                                                                                                                                              1491: 0x5502   BranchSubrBack          1234

                                                                                                                                                                              1492: 0x4008   Branch                  1501
000609          Else                                                                                                                                                          

000610              write(PL_CFG, (read(PL_CFG) & ~DBCNTM_MASK)) // Disable P/L (debounce enabled by default)                                                                 1493: 0x8011   PushConstU10            17 (0x0011)
                                                                                                                                                                              1494: 0x8011   PushConstU10            17 (0x0011)
                                                                                                                                                                              1495: 0x000D   PushMe                  
                                                                                                                                                                              1496: 0x5529   BranchSubrBack          1200
                                                                                                                                                                              1497: 0x807F   PushConstU10            127 (0x007F)
                                                                                                                                                                              1498: 0x001F   IntAnd                  
                                                                                                                                                                              1499: 0x000D   PushMe                  
                                                                                                                                                                              1500: 0x550B   BranchSubrBack          1234

000611          End If
000612      End Sub                                                                                                                                                           1501: 0x0091   Return                  

000613      
000614      Public Sub SetPLZLOCK(zlock As Byte)                                                                                                                              1502: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0

000615          'The Z-Lock angle compensation bits allows you to adjust the Z-lockout region from 14° up to 43°.
000616          'ZLOCK (bits 0,1,2) 0 = 14° (min), 0x04 = 29° (default) x07 = 43° (max)
000617          'Z-lock angle threshold(1)
000618          'Step size is 4°
000619          'Range is from 14° to 43°
000620          If zlock <= 0x07 Then                                                                                                                                         1503: 0x8800   PushLocalI32            zlock
                                                                                                                                                                              1504: 0x8007   PushConstU10            7 (0x0007)
                                                                                                                                                                              1505: 0x300A   BranchGT                1516

000621              write(PL_BF_ZCOMP, (read(PL_BF_ZCOMP) & ~ZLOCK_MASK) | zlock)                                                                                             1506: 0x8013   PushConstU10            19 (0x0013)
                                                                                                                                                                              1507: 0x8013   PushConstU10            19 (0x0013)
                                                                                                                                                                              1508: 0x000D   PushMe                  
                                                                                                                                                                              1509: 0x5536   BranchSubrBack          1200
                                                                                                                                                                              1510: 0x80F8   PushConstU10            248 (0x00F8)
                                                                                                                                                                              1511: 0x001F   IntAnd                  
                                                                                                                                                                              1512: 0x8800   PushLocalI32            zlock
                                                                                                                                                                              1513: 0x002D   IntOr                   
                                                                                                                                                                              1514: 0x000D   PushMe                  
                                                                                                                                                                              1515: 0x551A   BranchSubrBack          1234

000622          End If
000623      End Sub                                                                                                                                                           1516: 0x0091   Return                  

000624      
000625      Public Sub SetPLZLOCKDegrees(zlock As Float)                                                                                                                      1517: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0
                                                                                                                                                                              1518: 0xE020   AllocateStackSpace      ValTypeSize=1, RefTypeSize=0

000626          'The Z-Lock angle compensation bits allows you to adjust the Z-lockout region from 14° up to 43°.
000627          'ZLOCK (bits 0,1,2) 0 = 14° (min), 0x04 = 29° (default) x07 = 43° (max)
000628          'Z-lock angle threshold(1)
000629          'Step size is 4°
000630          'Range is from 14° to 43°
000631          Dim zlockByte As Byte = map_range(zlock, 14.0, 43.0, 0, 0x07)                                                                                                 1519: 0x8800   PushLocalI32            zlock
                                                                                                                                                                              1520: 0xEA0E   PushConstFlt            14.0
                                                                                                                                                                              1521: 0xEA2B   PushConstFlt            43.0
                                                                                                                                                                              1522: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1523: 0x8007   PushConstU10            7 (0x0007)
                                                                                                                                                                              1524: 0x000D   PushMe                  
                                                                                                                                                                              1525: 0x5729   BranchSubrBack          717
                                                                                                                                                                              1526: 0x9001   PopLocalI32             zlockByte

000632          If zlockByte <= 0x07 Then                                                                                                                                     1527: 0x8801   PushLocalI32            zlockByte
                                                                                                                                                                              1528: 0x8007   PushConstU10            7 (0x0007)
                                                                                                                                                                              1529: 0x300A   BranchGT                1540

000633              write(PL_BF_ZCOMP, (read(PL_BF_ZCOMP) & ~ZLOCK_MASK) | zlockByte)                                                                                         1530: 0x8013   PushConstU10            19 (0x0013)
                                                                                                                                                                              1531: 0x8013   PushConstU10            19 (0x0013)
                                                                                                                                                                              1532: 0x000D   PushMe                  
                                                                                                                                                                              1533: 0x554E   BranchSubrBack          1200
                                                                                                                                                                              1534: 0x80F8   PushConstU10            248 (0x00F8)
                                                                                                                                                                              1535: 0x001F   IntAnd                  
                                                                                                                                                                              1536: 0x8801   PushLocalI32            zlockByte
                                                                                                                                                                              1537: 0x002D   IntOr                   
                                                                                                                                                                              1538: 0x000D   PushMe                  
                                                                                                                                                                              1539: 0x5532   BranchSubrBack          1234

000634          End If
000635      End Sub                                                                                                                                                           1540: 0x0091   Return                  

000636      
000637      Public Sub SetPLBFThreshold(threshold As Float)                                                                                                                   1541: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0
                                                                                                                                                                              1542: 0xE020   AllocateStackSpace      ValTypeSize=1, RefTypeSize=0

000638          'B/F = bits 6,7 see table 44 for setting (suggest leave at default 75°)
000639          'Back/Front trip angle threshold(1)
000640          'Step size = 5°
000641          'Range = ±(65° to 80°)
000642          Dim thresholdByte As Byte = map_range(threshold, 65.0, 80.0, 0, 0x04)                                                                                         1543: 0x8800   PushLocalI32            threshold
                                                                                                                                                                              1544: 0xEA41   PushConstFlt            65.0
                                                                                                                                                                              1545: 0xEA50   PushConstFlt            80.0
                                                                                                                                                                              1546: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1547: 0x8004   PushConstU10            4 (0x0004)
                                                                                                                                                                              1548: 0x000D   PushMe                  
                                                                                                                                                                              1549: 0x5741   BranchSubrBack          717
                                                                                                                                                                              1550: 0x9001   PopLocalI32             thresholdByte

000643          If thresholdByte <= 0x04 Then                                                                                                                                 1551: 0x8801   PushLocalI32            thresholdByte
                                                                                                                                                                              1552: 0x8004   PushConstU10            4 (0x0004)
                                                                                                                                                                              1553: 0x300C   BranchGT                1566

000644              write(PL_BF_ZCOMP, (read(PL_BF_ZCOMP) & ~BKFR_MASK) | (thresholdByte << 6))                                                                               1554: 0x8013   PushConstU10            19 (0x0013)
                                                                                                                                                                              1555: 0x8013   PushConstU10            19 (0x0013)
                                                                                                                                                                              1556: 0x000D   PushMe                  
                                                                                                                                                                              1557: 0x5566   BranchSubrBack          1200
                                                                                                                                                                              1558: 0x803F   PushConstU10            63 (0x003F)
                                                                                                                                                                              1559: 0x001F   IntAnd                  
                                                                                                                                                                              1560: 0x8801   PushLocalI32            thresholdByte
                                                                                                                                                                              1561: 0x8006   PushConstU10            6 (0x0006)
                                                                                                                                                                              1562: 0x002E   IntShl                  
                                                                                                                                                                              1563: 0x002D   IntOr                   
                                                                                                                                                                              1564: 0x000D   PushMe                  
                                                                                                                                                                              1565: 0x554C   BranchSubrBack          1234

000645          End If
000646      End Sub                                                                                                                                                           1566: 0x0091   Return                  

000647      
000648      Public Sub SetPLThreshold(threshold As Float)                                                                                                                     1567: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0
                                                                                                                                                                              1568: 0xE020   AllocateStackSpace      ValTypeSize=1, RefTypeSize=0

000649          '(bits 3,4,5,6,7)
000650          'Portrait/Landscape trip threshold angle (from 15° to 75°) in 5 deg steps
000651          'See Table 47, “Threshold angle thresholds look-up table,” on
000652          'page 36 of DS for the values with the corresponding approximate threshold angle.
000653          '0x10 = 45° default
000654          Dim thresholdByte As Byte = map_range(threshold, 15.0, 75.0, 0x07, 0x19)                                                                                      1569: 0x8800   PushLocalI32            threshold
                                                                                                                                                                              1570: 0xEA0F   PushConstFlt            15.0
                                                                                                                                                                              1571: 0xEA4B   PushConstFlt            75.0
                                                                                                                                                                              1572: 0x8007   PushConstU10            7 (0x0007)
                                                                                                                                                                              1573: 0x8019   PushConstU10            25 (0x0019)
                                                                                                                                                                              1574: 0x000D   PushMe                  
                                                                                                                                                                              1575: 0x575B   BranchSubrBack          717
                                                                                                                                                                              1576: 0x9001   PopLocalI32             thresholdByte

000655          If thresholdByte >= 0x07 And thresholdByte <= 0x19 Then                                                                                                       1577: 0x8801   PushLocalI32            thresholdByte
                                                                                                                                                                              1578: 0x8007   PushConstU10            7 (0x0007)
                                                                                                                                                                              1579: 0x0023   IntCmpGE                
                                                                                                                                                                              1580: 0x8801   PushLocalI32            thresholdByte
                                                                                                                                                                              1581: 0x8019   PushConstU10            25 (0x0019)
                                                                                                                                                                              1582: 0x0025   IntCmpLE                
                                                                                                                                                                              1583: 0x001F   IntAnd                  
                                                                                                                                                                              1584: 0x3C0C   BranchFalse             1597

000656              write(PL_THS, (read(PL_THS) & ~P_L_THS_MASK) | (thresholdByte << 4))                                                                                      1585: 0x8014   PushConstU10            20 (0x0014)
                                                                                                                                                                              1586: 0x8014   PushConstU10            20 (0x0014)
                                                                                                                                                                              1587: 0x000D   PushMe                  
                                                                                                                                                                              1588: 0x5585   BranchSubrBack          1200
                                                                                                                                                                              1589: 0x8007   PushConstU10            7 (0x0007)
                                                                                                                                                                              1590: 0x001F   IntAnd                  
                                                                                                                                                                              1591: 0x8801   PushLocalI32            thresholdByte
                                                                                                                                                                              1592: 0x8004   PushConstU10            4 (0x0004)
                                                                                                                                                                              1593: 0x002E   IntShl                  
                                                                                                                                                                              1594: 0x002D   IntOr                   
                                                                                                                                                                              1595: 0x000D   PushMe                  
                                                                                                                                                                              1596: 0x556B   BranchSubrBack          1234

000657          End If
000658      End Sub                                                                                                                                                           1597: 0x0091   Return                  

000659      
000660      Public Sub SetPLHysteresis(hysteresis As Float)                                                                                                                   1598: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0
                                                                                                                                                                              1599: 0xE020   AllocateStackSpace      ValTypeSize=1, RefTypeSize=0

000661          '(bits 0,1,2)
000662          'This angle is added to the threshold angle, for a smoother transition
000663          'from portrait to landscape and landscape to portrait.
000664          'This angle ranges from 0° to ±24°.
000665          '±14° (default)
000666          Dim hysteresisByte As Byte = map_range(hysteresis, 0, 24.0, 0, 0x07)                                                                                          1600: 0x8800   PushLocalI32            hysteresis
                                                                                                                                                                              1601: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1602: 0xEA18   PushConstFlt            24.0
                                                                                                                                                                              1603: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1604: 0x8007   PushConstU10            7 (0x0007)
                                                                                                                                                                              1605: 0x000D   PushMe                  
                                                                                                                                                                              1606: 0x577A   BranchSubrBack          717
                                                                                                                                                                              1607: 0x9001   PopLocalI32             hysteresisByte

000667          If hysteresisByte <= 0x07 Then                                                                                                                                1608: 0x8801   PushLocalI32            hysteresisByte
                                                                                                                                                                              1609: 0x8007   PushConstU10            7 (0x0007)
                                                                                                                                                                              1610: 0x300A   BranchGT                1621

000668              write(PL_THS, (read(PL_THS) & ~HYS_MASK) | hysteresisByte)                                                                                                1611: 0x8014   PushConstU10            20 (0x0014)
                                                                                                                                                                              1612: 0x8014   PushConstU10            20 (0x0014)
                                                                                                                                                                              1613: 0x000D   PushMe                  
                                                                                                                                                                              1614: 0x559F   BranchSubrBack          1200
                                                                                                                                                                              1615: 0x80F8   PushConstU10            248 (0x00F8)
                                                                                                                                                                              1616: 0x001F   IntAnd                  
                                                                                                                                                                              1617: 0x8801   PushLocalI32            hysteresisByte
                                                                                                                                                                              1618: 0x002D   IntOr                   
                                                                                                                                                                              1619: 0x000D   PushMe                  
                                                                                                                                                                              1620: 0x5583   BranchSubrBack          1234

000669          End If
000670      End Sub                                                                                                                                                           1621: 0x0091   Return                  

000671      
000672      Public Sub SetPLCount(count As Byte)                                                                                                                              1622: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0

000673          'The debounce counter weighting (time step) changes, based on the ODR and the
000674          'Oversampling mode. Table 40 explains the time step value for all sample rates and all
000675          'Oversampling modes.
000676          write(PL_COUNT, count) // debounce counter 0x10 = 320ms (at 50 hz)                                                                                            1623: 0x8012   PushConstU10            18 (0x0012)
                                                                                                                                                                              1624: 0x8800   PushLocalI32            count
                                                                                                                                                                              1625: 0x000D   PushMe                  
                                                                                                                                                                              1626: 0x5589   BranchSubrBack          1234

000677      End Sub                                                                                                                                                           1627: 0x0091   Return                  

000678      
000679      Public Sub SetPLDuration(duration As Float)                                                                                                                       1628: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0
                                                                                                                                                                              1629: 0xE040   AllocateStackSpace      ValTypeSize=2, RefTypeSize=0

000680          'Set Duration in ms (if set to 0, causes interrupt immediately, once threshold exceeded)
000681          'The Portrait/Landscape Debounce register sets the debounce count for the orientation state transition. The minimum debounce
000682          'latency is determined by the data rate (which is set by the product of the selected system ODR and PL_COUNT registers).
000683          'The duration in ms depends on the frequency, ie 50 Hz = 20ms per count, so 100ms = 5 counts
000684          'But is effected by mode also.... see table 40 p34 of DS
000685          Dim msPerCount As Float = GetmsPerCount()                                                                                                                     1630: 0x000D   PushMe                  
                                                                                                                                                                              1631: 0x5763   BranchSubrBack          765
                                                                                                                                                                              1632: 0x9001   PopLocalI32             msPerCount

000686          Dim count As Byte = (duration / msPerCount).ToByte                                                                                                            1633: 0x8800   PushLocalI32            duration
                                                                                                                                                                              1634: 0x8801   PushLocalI32            msPerCount
                                                                                                                                                                              1635: 0x003B   FltDiv                  
                                                                                                                                                                              1636: 0x007B   CvtFltToInt             
                                                                                                                                                                              1637: 0x007D   CvtIntToByt             
                                                                                                                                                                              1638: 0x9002   PopLocalI32             count

000687          write(PL_COUNT, count)                                                                                                                                        1639: 0x8012   PushConstU10            18 (0x0012)
                                                                                                                                                                              1640: 0x8802   PushLocalI32            count
                                                                                                                                                                              1641: 0x000D   PushMe                  
                                                                                                                                                                              1642: 0x5599   BranchSubrBack          1234

000688      End Sub                                                                                                                                                           1643: 0x0091   Return                  

000689      
000690      Public Sub calibrate()                                                                                                                                            1644: 0x1800   EntryPoint              ValTypParams=0, RefTypParams=0
                                                                                                                                                                              1645: 0xE043   AllocateStackSpace      ValTypeSize=2, RefTypeSize=3

000691          'Calibration routine, don't know if this works or not!
000692          Dim accel_bias As ListOfInteger = New ListOfInteger                                                                                                           1646: 0x800E   PushConstU10            14 (0x000E)
                                                                                                                                                                              1647: 0x0010   ClassNew                
                                                                                                                                                                              1648: 0x9400   PopLocalRef             accel_bias

000693          accel_bias.Add(0)                                                                                                                                             1649: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1650: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1651: 0x00A3   ListAdd                 

000694          accel_bias.Add(0)                                                                                                                                             1652: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1653: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1654: 0x00A3   ListAdd                 

000695          accel_bias.Add(0)                                                                                                                                             1655: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1656: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1657: 0x00A3   ListAdd                 

000696          Dim fcount As Integer
000697          Dim temp As ListOfShort = New ListOfShort                                                                                                                     1658: 0x800D   PushConstU10            13 (0x000D)
                                                                                                                                                                              1659: 0x0010   ClassNew                
                                                                                                                                                                              1660: 0x9401   PopLocalRef             temp

000698          
000699          // Clear all interrupts by reading the data output and F_STATUS registers
000700          temp = readAccelData()                                                                                                                                        1661: 0x000D   PushMe                  
                                                                                                                                                                              1662: 0x569B   BranchSubrBack          996
                                                                                                                                                                              1663: 0x9401   PopLocalRef             temp

000701          read(F_STATUS)                                                                                                                                                1664: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1665: 0x000D   PushMe                  
                                                                                                                                                                              1666: 0x55D3   BranchSubrBack          1200
                                                                                                                                                                              1667: 0xE420   FreeStackSpace          ValTypeSize=1, RefTypeSize=0

000702          
000703          Standby() // Must be in standby to change registers                                                                                                           1668: 0x000D   PushMe                  
                                                                                                                                                                              1669: 0x55F8   BranchSubrBack          1166

000704          
000705          SetWakeModeFrequency(AODR_100HZ) // select 100 Hz ODR                                                                                                         1670: 0x8018   PushConstU10            24 (0x0018)
                                                                                                                                                                              1671: 0x000D   PushMe                  
                                                                                                                                                                              1672: 0x5581   BranchSubrBack          1288

000706          fcount = 100 // sample for 1 second                                                                                                                           1673: 0x8064   PushConstU10            100 (0x0064)
                                                                                                                                                                              1674: 0x9000   PopLocalI32             fcount

000707          SetRange(FULL_SCALE_2G) // select 2 g full scale                                                                                                              1675: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1676: 0x000D   PushMe                  
                                                                                                                                                                              1677: 0x559A   BranchSubrBack          1268

000708          Dim accelsensitivity As Short = 1024 // 1024 LSB/g                                                                                                            1678: 0xE90A   PushConstBit            1<<10  (0x00000400 Or 1024)
                                                                                                                                                                              1679: 0x9001   PopLocalI32             accelsensitivity

000709          
000710          Active() // Set to active to start collecting data                                                                                                            1680: 0x000D   PushMe                  
                                                                                                                                                                              1681: 0x55FA   BranchSubrBack          1176

000711          
                                                                                                                                                                              1682: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1683: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1684: 0x0004   DupVal2                 
                                                                                                                                                                              1685: 0x0031   IntSub                  
                                                                                                                                                                              1686: 0x0002   ExchangeVal             
                                                                                                                                                                              1687: 0x8800   PushLocalI32            fcount
000712          For ii As Integer = 0 To fcount                                                                                                                               1688: 0x4827   BranchForNextInt        1728

000713              temp = readAccelData()                                                                                                                                    1689: 0x000D   PushMe                  
                                                                                                                                                                              1690: 0x56B7   BranchSubrBack          996
                                                                                                                                                                              1691: 0x9401   PopLocalRef             temp

000714              
000715              accel_bias(0) += temp(0)                                                                                                                                  1692: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1693: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1694: 0x00B5   ListItemPut             
                                                                                                                                                                              1695: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1696: 0x8C01   PushLocalRef            temp
                                                                                                                                                                              1697: 0x00B4   ListItemGet             
                                                                                                                                                                              1698: 0x001E   IntAdd                  
                                                                                                                                                                              1699: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1700: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1701: 0x00B5   ListItemPut             

000716              accel_bias(1) += temp(1)                                                                                                                                  1702: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1703: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1704: 0x00B5   ListItemPut             
                                                                                                                                                                              1705: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1706: 0x8C01   PushLocalRef            temp
                                                                                                                                                                              1707: 0x00B4   ListItemGet             
                                                                                                                                                                              1708: 0x001E   IntAdd                  
                                                                                                                                                                              1709: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1710: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1711: 0x00B5   ListItemPut             

000717              accel_bias(2) += temp(2)                                                                                                                                  1712: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              1713: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1714: 0x00B5   ListItemPut             
                                                                                                                                                                              1715: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              1716: 0x8C01   PushLocalRef            temp
                                                                                                                                                                              1717: 0x00B4   ListItemGet             
                                                                                                                                                                              1718: 0x001E   IntAdd                  
                                                                                                                                                                              1719: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              1720: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1721: 0x00B5   ListItemPut             

000718              
000719              Thread.Sleep(15000) // wait for a new data reading (100 Hz)                                                                                               1722: 0x0110   PushConstI32            15000 (0x00003A98)
                                                                                                                                                                              1723: 0x3A98                           
                                                                                                                                                                              1724: 0x0000                           
                                                                                                                                                                              1725: 0x00D5   ThreadSleep             
                                                                                                                                                                              1726: 0xE420   FreeStackSpace          ValTypeSize=1, RefTypeSize=0

                                                                                                                                                                              1727: 0x5028   BranchBack              1688
000720          Next                                                                                                                                                          1728: 0xE460   FreeStackSpace          ValTypeSize=3, RefTypeSize=0

000721          
000722          accel_bias(0) = accel_bias(0) / fcount // get average values                                                                                                  1729: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1730: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1731: 0x00B4   ListItemGet             
                                                                                                                                                                              1732: 0x8800   PushLocalI32            fcount
                                                                                                                                                                              1733: 0x0078   CvtIntToFlt1            
                                                                                                                                                                              1734: 0x007E   CvtIntToFlt             
                                                                                                                                                                              1735: 0x003B   FltDiv                  
                                                                                                                                                                              1736: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1737: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1738: 0x00B5   ListItemPut             

000723          accel_bias(1) = accel_bias(1) / fcount                                                                                                                        1739: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1740: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1741: 0x00B4   ListItemGet             
                                                                                                                                                                              1742: 0x8800   PushLocalI32            fcount
                                                                                                                                                                              1743: 0x0078   CvtIntToFlt1            
                                                                                                                                                                              1744: 0x007E   CvtIntToFlt             
                                                                                                                                                                              1745: 0x003B   FltDiv                  
                                                                                                                                                                              1746: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1747: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1748: 0x00B5   ListItemPut             

000724          accel_bias(2) = accel_bias(2) / fcount                                                                                                                        1749: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              1750: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1751: 0x00B4   ListItemGet             
                                                                                                                                                                              1752: 0x8800   PushLocalI32            fcount
                                                                                                                                                                              1753: 0x0078   CvtIntToFlt1            
                                                                                                                                                                              1754: 0x007E   CvtIntToFlt             
                                                                                                                                                                              1755: 0x003B   FltDiv                  
                                                                                                                                                                              1756: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              1757: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1758: 0x00B5   ListItemPut             

000725          
000726          If (accel_bias(2) > 0) Then                                                                                                                                   1759: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              1760: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1761: 0x00B4   ListItemGet             
                                                                                                                                                                              1762: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1763: 0x2C09   BranchLE                1773

000727              accel_bias(2) -= accelsensitivity // Remove gravity from the z-axis accelerometer bias calculation                                                        1764: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              1765: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1766: 0x00B5   ListItemPut             
                                                                                                                                                                              1767: 0x8801   PushLocalI32            accelsensitivity
                                                                                                                                                                              1768: 0x0031   IntSub                  
                                                                                                                                                                              1769: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              1770: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1771: 0x00B5   ListItemPut             

                                                                                                                                                                              1772: 0x4008   Branch                  1781
000728          Else                                                                                                                                                          

000729              accel_bias(2) += accelsensitivity                                                                                                                         1773: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              1774: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1775: 0x00B5   ListItemPut             
                                                                                                                                                                              1776: 0x8801   PushLocalI32            accelsensitivity
                                                                                                                                                                              1777: 0x001E   IntAdd                  
                                                                                                                                                                              1778: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              1779: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1780: 0x00B5   ListItemPut             

000730          End If
000731          
000732          Dim rawData As ListOfByte = New ListOfByte                                                                                                                    1781: 0x800C   PushConstU10            12 (0x000C)
                                                                                                                                                                              1782: 0x0010   ClassNew                
                                                                                                                                                                              1783: 0x9402   PopLocalRef             rawData

000733          rawData.Add((-accel_bias(0) / 2).ToByte& 0xff) // get average values                                                                                          1784: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1785: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1786: 0x00B4   ListItemGet             
                                                                                                                                                                              1787: 0x002B   IntNeg                  
                                                                                                                                                                              1788: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              1789: 0x0078   CvtIntToFlt1            
                                                                                                                                                                              1790: 0x007E   CvtIntToFlt             
                                                                                                                                                                              1791: 0x003B   FltDiv                  
                                                                                                                                                                              1792: 0x007B   CvtFltToInt             
                                                                                                                                                                              1793: 0x007D   CvtIntToByt             
                                                                                                                                                                              1794: 0x80FF   PushConstU10            255 (0x00FF)
                                                                                                                                                                              1795: 0x001F   IntAnd                  
                                                                                                                                                                              1796: 0x8C02   PushLocalRef            rawData
                                                                                                                                                                              1797: 0x00A3   ListAdd                 

000734          rawData.Add((-accel_bias(1) / 2).ToByte& 0xff) // get average values                                                                                          1798: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1799: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1800: 0x00B4   ListItemGet             
                                                                                                                                                                              1801: 0x002B   IntNeg                  
                                                                                                                                                                              1802: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              1803: 0x0078   CvtIntToFlt1            
                                                                                                                                                                              1804: 0x007E   CvtIntToFlt             
                                                                                                                                                                              1805: 0x003B   FltDiv                  
                                                                                                                                                                              1806: 0x007B   CvtFltToInt             
                                                                                                                                                                              1807: 0x007D   CvtIntToByt             
                                                                                                                                                                              1808: 0x80FF   PushConstU10            255 (0x00FF)
                                                                                                                                                                              1809: 0x001F   IntAnd                  
                                                                                                                                                                              1810: 0x8C02   PushLocalRef            rawData
                                                                                                                                                                              1811: 0x00A3   ListAdd                 

000735          rawData.Add((-accel_bias(2) / 2).ToByte& 0xff) // get average values                                                                                          1812: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              1813: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1814: 0x00B4   ListItemGet             
                                                                                                                                                                              1815: 0x002B   IntNeg                  
                                                                                                                                                                              1816: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              1817: 0x0078   CvtIntToFlt1            
                                                                                                                                                                              1818: 0x007E   CvtIntToFlt             
                                                                                                                                                                              1819: 0x003B   FltDiv                  
                                                                                                                                                                              1820: 0x007B   CvtFltToInt             
                                                                                                                                                                              1821: 0x007D   CvtIntToByt             
                                                                                                                                                                              1822: 0x80FF   PushConstU10            255 (0x00FF)
                                                                                                                                                                              1823: 0x001F   IntAnd                  
                                                                                                                                                                              1824: 0x8C02   PushLocalRef            rawData
                                                                                                                                                                              1825: 0x00A3   ListAdd                 

000736          
000737          Standby() // Must be in standby to change registers                                                                                                           1826: 0x000D   PushMe                  
                                                                                                                                                                              1827: 0x5696   BranchSubrBack          1166

000738          
000739          write(OFF_X, rawData(0)) // X-axis compensation                                                                                                               1828: 0x802F   PushConstU10            47 (0x002F)
                                                                                                                                                                              1829: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1830: 0x8C02   PushLocalRef            rawData
                                                                                                                                                                              1831: 0x00B4   ListItemGet             
                                                                                                                                                                              1832: 0x000D   PushMe                  
                                                                                                                                                                              1833: 0x5658   BranchSubrBack          1234

000740          write(OFF_Y, rawData(1)) // Y-axis compensation                                                                                                               1834: 0x8030   PushConstU10            48 (0x0030)
                                                                                                                                                                              1835: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1836: 0x8C02   PushLocalRef            rawData
                                                                                                                                                                              1837: 0x00B4   ListItemGet             
                                                                                                                                                                              1838: 0x000D   PushMe                  
                                                                                                                                                                              1839: 0x565E   BranchSubrBack          1234

000741          write(OFF_Z, rawData(2)) // z-axis compensation                                                                                                               1840: 0x8031   PushConstU10            49 (0x0031)
                                                                                                                                                                              1841: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              1842: 0x8C02   PushLocalRef            rawData
                                                                                                                                                                              1843: 0x00B4   ListItemGet             
                                                                                                                                                                              1844: 0x000D   PushMe                  
                                                                                                                                                                              1845: 0x5664   BranchSubrBack          1234

000742          
000743          Active() // Set to active to start reading                                                                                                                    1846: 0x000D   PushMe                  
                                                                                                                                                                              1847: 0x56A0   BranchSubrBack          1176

000744      End Sub                                                                                                                                                           1848: 0x0091   Return                  

000745      
000746      'ConfigureShockInterrupt - configures device to interrupt on shock (currently will interupt on any axis, x,y,z axis configuration can be added later)
000747      '
000748      'threshold As Float - trigger threshold (0.0 Gs ~ 8 Gs), 0.063mg steps
000749      'Duration As Float - Duration for threshold to be present to active interrupt (0 ms (immediate) to 5100ms), 20ms steps @ 50Hz
000750      Public Function ConfigureShockInterrupt(threshold As Float, duration As Float) As Boolean                                                                         1849: 0x1820   EntryPoint              ValTypParams=2, RefTypParams=0
                                                                                                                                                                              1850: 0xE020   AllocateStackSpace      ValTypeSize=1, RefTypeSize=0

000751          Dim result As Boolean = False
000752          'threshold in g 0 - 8.0
000753          'duration in ms
000754          
000755          If ((threshold >= LOW_TRIGGER_THRESHOLD And threshold <= HIGH_TRIGGER_THRESHOLD)) And ((duration >= LOW_DURATION_MS And duration <= HIGH_DURATION_MS)) Then   1851: 0x8800   PushLocalI32            threshold
                                                                                                                                                                              1852: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1853: 0x003A   FltCmp                  
                                                                                                                                                                              1854: 0x0023   IntCmpGE                
                                                                                                                                                                              1855: 0x8800   PushLocalI32            threshold
                                                                                                                                                                              1856: 0xEA08   PushConstFlt            8.0
                                                                                                                                                                              1857: 0x003A   FltCmp                  
                                                                                                                                                                              1858: 0x0025   IntCmpLE                
                                                                                                                                                                              1859: 0x001F   IntAnd                  
                                                                                                                                                                              1860: 0x8801   PushLocalI32            duration
                                                                                                                                                                              1861: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1862: 0x003A   FltCmp                  
                                                                                                                                                                              1863: 0x0023   IntCmpGE                
                                                                                                                                                                              1864: 0x8801   PushLocalI32            duration
                                                                                                                                                                              1865: 0x0110   PushConstI32            1168072704 (0x459F6000)
                                                                                                                                                                              1866: 0x6000                           
                                                                                                                                                                              1867: 0x459F                           
                                                                                                                                                                              1868: 0x003A   FltCmp                  
                                                                                                                                                                              1869: 0x0025   IntCmpLE                
                                                                                                                                                                              1870: 0x001F   IntAnd                  
                                                                                                                                                                              1871: 0x001F   IntAnd                  
                                                                                                                                                                              1872: 0x3C25   BranchFalse             1910

000756              
000757              'Put device in standby mode (can only write registers in Standby mode)
000758              Standby()                                                                                                                                                 1873: 0x000D   PushMe                  
                                                                                                                                                                              1874: 0x56C5   BranchSubrBack          1166

000759              
000760              'Setup the 3 data rate bits, from DR 0 to 7
000761              SetWakeModeFrequency(AODR_50HZ) // set 50 Hz Wake Mode                                                                                                    1875: 0x8020   PushConstU10            32 (0x0020)
                                                                                                                                                                              1876: 0x000D   PushMe                  
                                                                                                                                                                              1877: 0x564E   BranchSubrBack          1288

000762              'Low Power Mode (sleep mode on)
000763              SetSleepMode(SLPE_MASK) // clear bit 3, enable sleep mode                                                                                                 1878: 0x8004   PushConstU10            4 (0x0004)
                                                                                                                                                                              1879: 0x000D   PushMe                  
                                                                                                                                                                              1880: 0x5629   BranchSubrBack          1328

000764              'set Awake resolution
000765              SetWakeModeResolution(MOD_LOW_POWER) // clear bits 0 and 1, sent wake low power mode                                                                      1881: 0x8003   PushConstU10            3 (0x0003)
                                                                                                                                                                              1882: 0x000D   PushMe                  
                                                                                                                                                                              1883: 0x5640   BranchSubrBack          1308

000766              'set Sleep resolution
000767              SetSleepModeResolution(SMOD_LOW_POWER) // clear bits 4 and 5, set sleep mode low power                                                                    1884: 0x8018   PushConstU10            24 (0x0018)
                                                                                                                                                                              1885: 0x000D   PushMe                  
                                                                                                                                                                              1886: 0x561B   BranchSubrBack          1348

000768              'Wakeup if transient interrupt, push/pull, active low (set in New config)
000769              'set sleep mode interrupt scheme
000770              SetSleepModeInterrupts(WAKE_TRANS) // clear bit 6, set Wake on TRANS Interrupt                                                                            1887: 0x8040   PushConstU10            64 (0x0040)
                                                                                                                                                                              1888: 0x000D   PushMe                  
                                                                                                                                                                              1889: 0x560A   BranchSubrBack          1368

000771              'enable transient interrupts
000772              SetEnableInterrupts(INT_EN_TRANS) // clear bit 5, set TRANS Interrupt                                                                                     1890: 0x8020   PushConstU10            32 (0x0020)
                                                                                                                                                                              1891: 0x000D   PushMe                  
                                                                                                                                                                              1892: 0x55FF   BranchSubrBack          1382

000773              'route interrupt to INT1 pin (ff sets all interrupts to INT1 , 00 to INT2)
000774              SetInterruptsINT(INT_CFG_TRANS) // clear bit 5, set TRANS Interrupt to INT1                                                                               1893: 0x8020   PushConstU10            32 (0x0020)
                                                                                                                                                                              1894: 0x000D   PushMe                  
                                                                                                                                                                              1895: 0x55F4   BranchSubrBack          1396

000775              'latch events and enable on all axis (now only Z axis)
000776              SetTransientCFG(TELE | ZTEFE) // transients latched (TELE), Z enabled. High Pass Filter (bit 0) enabled by default                                        1896: 0x8018   PushConstU10            24 (0x0018)
                                                                                                                                                                              1897: 0x000D   PushMe                  
                                                                                                                                                                              1898: 0x55E9   BranchSubrBack          1410

000777              'Set Threshold 0.0 ~ 23.622 Gs Bit 8 of TRANSIENT_THS sets debounce mode (0 default)
000778              SetTransientThreshold(threshold) //A 7-bit unsigned number, with 0.063 g/LSB. The maximum threshold is ±8g (irrispective of Range setting).               1899: 0x8800   PushLocalI32            threshold
                                                                                                                                                                              1900: 0x000D   PushMe                  
                                                                                                                                                                              1901: 0x55E6   BranchSubrBack          1416

000779              'Set Duration (in ms if set to 0, causes interrupt immediately, once threshold exceeded
000780              SetTransientDuration(duration)                                                                                                                            1902: 0x8801   PushLocalI32            duration
                                                                                                                                                                              1903: 0x000D   PushMe                  
                                                                                                                                                                              1904: 0x55D1   BranchSubrBack          1440

000781              
000782              'Put device in active mode
000783              Active()                                                                                                                                                  1905: 0x000D   PushMe                  
                                                                                                                                                                              1906: 0x56DB   BranchSubrBack          1176

000784              result = True                                                                                                                                             1907: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1908: 0x9002   PopLocalI32             result

                                                                                                                                                                              1909: 0x4002   Branch                  1912
000785          Else                                                                                                                                                          

000786              'incorrect range, return error
000787              result = False                                                                                                                                            1910: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1911: 0x9002   PopLocalI32             result

000788          End If
000789          Return result                                                                                                                                                 1912: 0x8802   PushLocalI32            result
                                                                                                                                                                              1913: 0x0092   ReturnValType           

000790      End Function                                                                                                                                                      1914: 0x0093   Return0                 

000791      
000792      'ConfigureOrientationInterrupt - configures device to interrupt on orientation change
000793      Public Function ConfigureOrientationInterrupt(threshold As Float, duration As Float) As Boolean                                                                   1915: 0x1820   EntryPoint              ValTypParams=2, RefTypParams=0
                                                                                                                                                                              1916: 0xE020   AllocateStackSpace      ValTypeSize=1, RefTypeSize=0

000794          Dim result As Boolean = False
000795          'threshold in degrees 45 degrees default
000796          'duration in ms
000797          
000798          If (duration >= LOW_DURATION_MS And duration <= HIGH_DURATION_MS) Then                                                                                        1917: 0x8801   PushLocalI32            duration
                                                                                                                                                                              1918: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1919: 0x003A   FltCmp                  
                                                                                                                                                                              1920: 0x0023   IntCmpGE                
                                                                                                                                                                              1921: 0x8801   PushLocalI32            duration
                                                                                                                                                                              1922: 0x0110   PushConstI32            1168072704 (0x459F6000)
                                                                                                                                                                              1923: 0x6000                           
                                                                                                                                                                              1924: 0x459F                           
                                                                                                                                                                              1925: 0x003A   FltCmp                  
                                                                                                                                                                              1926: 0x0025   IntCmpLE                
                                                                                                                                                                              1927: 0x001F   IntAnd                  
                                                                                                                                                                              1928: 0x3C2B   BranchFalse             1972

000799              
000800              Standby()                                                                                                                                                 1929: 0x000D   PushMe                  
                                                                                                                                                                              1930: 0x56FD   BranchSubrBack          1166

000801              
000802              'Setup the 3 data rate bits, from DR 0 to 7
000803              SetWakeModeFrequency(AODR_50HZ) // set 50 Hz Wake Mode                                                                                                    1931: 0x8020   PushConstU10            32 (0x0020)
                                                                                                                                                                              1932: 0x000D   PushMe                  
                                                                                                                                                                              1933: 0x5686   BranchSubrBack          1288

000804              'Low Power Mode (sleep mode on)
000805              SetSleepMode(SLPE_MASK) // clear bit 3, enable sleep mode                                                                                                 1934: 0x8004   PushConstU10            4 (0x0004)
                                                                                                                                                                              1935: 0x000D   PushMe                  
                                                                                                                                                                              1936: 0x5661   BranchSubrBack          1328

000806              'set Awake resolution
000807              SetWakeModeResolution(MOD_LOW_POWER) // clear bits 0 and 1, sent wake low power mode                                                                      1937: 0x8003   PushConstU10            3 (0x0003)
                                                                                                                                                                              1938: 0x000D   PushMe                  
                                                                                                                                                                              1939: 0x5678   BranchSubrBack          1308

000808              'set Sleep resolution
000809              SetSleepModeResolution(SMOD_LOW_POWER) // clear bits 4 and 5, set sleep mode low power                                                                    1940: 0x8018   PushConstU10            24 (0x0018)
                                                                                                                                                                              1941: 0x000D   PushMe                  
                                                                                                                                                                              1942: 0x5653   BranchSubrBack          1348

000810              'Wakeup if orientation interrupt, push/pull, active low (set in New config)
000811              'set sleep mode interrupt scheme
000812              SetSleepModeInterrupts(WAKE_LNDPRT) // clear bit 5, set Wake on LP Interrupt                                                                              1943: 0x8020   PushConstU10            32 (0x0020)
                                                                                                                                                                              1944: 0x000D   PushMe                  
                                                                                                                                                                              1945: 0x5642   BranchSubrBack          1368

000813              'enable orientation interrupts
000814              SetEnableInterrupts(INT_EN_LNDPRT) // clear bit 4, set LP Interrupt                                                                                       1946: 0x8010   PushConstU10            16 (0x0010)
                                                                                                                                                                              1947: 0x000D   PushMe                  
                                                                                                                                                                              1948: 0x5637   BranchSubrBack          1382

000815              'route interrupt to INT1 pin (ff sets all interrupts to INT1 , 00 to INT2)
000816              SetInterruptsINT(INT_CFG_LNDPRT) // clear bit 4, set LP Interrupt to INT1                                                                                 1949: 0x8010   PushConstU10            16 (0x0010)
                                                                                                                                                                              1950: 0x000D   PushMe                  
                                                                                                                                                                              1951: 0x562C   BranchSubrBack          1396

000817              // Set up portrait/landscape registers - 4 steps:
000818              // 1. Enable P/L
000819              // 2. Set the back/front angle trigger points (z-lock)
000820              // 3. Set the threshold/hysteresis angle
000821              // 4. Set the debouce rate
000822              // For more info check out this app note: http://cache.freescale.com/files/sensors/doc/app_note/AN4068.pdf
000823              EnablePL(True) 'Enable P/L (debounce enabled by default)                                                                                                  1952: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1953: 0x000D   PushMe                  
                                                                                                                                                                              1954: 0x55F3   BranchSubrBack          1456

000824              EnablePLDebounce(True) 'set debounce to mode 1 (default)                                                                                                  1955: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1956: 0x000D   PushMe                  
                                                                                                                                                                              1957: 0x55DF   BranchSubrBack          1479

000825              SetPLZLOCKDegrees(43) 'set to 43 degrees: ZLOCK Treshold (bits 0,1,2) 0 = 14° (min), 0x04 = 29° (default) x07 = 43° (max)                                 1958: 0xEA2B   PushConstFlt            43.0
                                                                                                                                                                              1959: 0x000D   PushMe                  
                                                                                                                                                                              1960: 0x55BC   BranchSubrBack          1517

000826              //SetPLZLOCK(0x07)    'same as above, but set directly
000827              SetPLBFThreshold(threshold) 'BF deg threshold (45 default)                                                                                                1961: 0x8800   PushLocalI32            threshold
                                                                                                                                                                              1962: 0x000D   PushMe                  
                                                                                                                                                                              1963: 0x55A7   BranchSubrBack          1541

000828              //SetPLHysteresis(14)     '14deg hyst (14 default)
000829              //SetPLCount(0x05)          'debounce counter 0x05 = 100ms (at 50 hz in Low Power mode)
000830              SetPLDuration(duration) 'debounce counter 0x10 = 320ms (at 50 hz LP mode) if set to 0 causes interrupt immediately, once threshold exceeded               1964: 0x8801   PushLocalI32            duration
                                                                                                                                                                              1965: 0x000D   PushMe                  
                                                                                                                                                                              1966: 0x5553   BranchSubrBack          1628

000831              //SetPLCount(0x10)
000832              
000833              Active()                                                                                                                                                  1967: 0x000D   PushMe                  
                                                                                                                                                                              1968: 0x5719   BranchSubrBack          1176

000834              result = True                                                                                                                                             1969: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1970: 0x9002   PopLocalI32             result

                                                                                                                                                                              1971: 0x4002   Branch                  1974
000835          Else                                                                                                                                                          

000836              'incorrect range, return error
000837              result = False                                                                                                                                            1972: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1973: 0x9002   PopLocalI32             result

000838          End If
000839          Return result                                                                                                                                                 1974: 0x8802   PushLocalI32            result
                                                                                                                                                                              1975: 0x0092   ReturnValType           

000840      End Function                                                                                                                                                      1976: 0x0093   Return0                 

000841  End Class                                                                                                                                                             681:  0x0097   ReturnMe                


****** BLOCKS and VARIABLES for MMA8652
    Block Class (Line 3:841)
        MMA8652         Me              (ReadOnly, Offset=0)
        Object          MyBase          (ReadOnly, Offset=0)
        Byte            I2C_ADDR        (Literal=29)
        Integer         I2C_SPEED       (Literal=400000)
        Byte            CTRL_ID_DEFAULT (Literal=29)
        Byte            STATUS          (Literal=0)
        Byte            F_STATUS        (Literal=0)
        Byte            OUT_X_MSB       (Literal=1)
        Byte            OUT_X_LSB       (Literal=2)
        Byte            OUT_Y_MSB       (Literal=3)
        Byte            OUT_Y_LSB       (Literal=4)
        Byte            OUT_Z_MSB       (Literal=5)
        Byte            OUT_Z_LSB       (Literal=6)
        Byte            F_SETUP         (Literal=9)
        Byte            TRIG_CFG        (Literal=10)
        Byte            SYSMOD          (Literal=11)
        Byte            INT_SOURCE      (Literal=12)
        Byte            WHO_AM_I        (Literal=13)
        Byte            XYZ_DATA_CFG    (Literal=14)
        Byte            HP_FILTER_CUTOFF(Literal=15)
        Byte            PL_STATUS       (Literal=16)
        Byte            PL_CFG          (Literal=17)
        Byte            PL_COUNT        (Literal=18)
        Byte            PL_BF_ZCOMP     (Literal=19)
        Byte            PL_THS          (Literal=20)
        Byte            FF_MT_CFG       (Literal=21)
        Byte            FF_MT_SRC       (Literal=22)
        Byte            FF_MT_THS       (Literal=23)
        Byte            FF_MT_COUNT     (Literal=24)
        Byte            TRANSIENT_CFG   (Literal=29)
        Byte            TRANSIENT_SRC   (Literal=30)
        Byte            TRANSIENT_THS   (Literal=31)
        Byte            TRANSIENT_COUNT (Literal=32)
        Byte            PULSE_CFG       (Literal=33)
        Byte            PULSE_SRC       (Literal=34)
        Byte            PULSE_THSX      (Literal=35)
        Byte            PULSE_THSY      (Literal=36)
        Byte            PULSE_THSZ      (Literal=37)
        Byte            PULSE_TMLT      (Literal=38)
        Byte            PULSE_LTCY      (Literal=39)
        Byte            PULSE_WIND      (Literal=40)
        Byte            ASLP_COUNT      (Literal=41)
        Byte            CTRL_REG1       (Literal=42)
        Byte            CTRL_REG2       (Literal=43)
        Byte            CTRL_REG3       (Literal=44)
        Byte            CTRL_REG4       (Literal=45)
        Byte            CTRL_REG5       (Literal=46)
        Byte            OFF_X           (Literal=47)
        Byte            OFF_Y           (Literal=48)
        Byte            OFF_Z           (Literal=49)
        Byte            POSITION_DEFAULT(Literal=2)
        Byte            DELAY_DEFAULT   (Literal=200)
        Byte            STATUS_ZYXDR    (Literal=8)
        Byte            BUF_SIZE        (Literal=6)
        Byte            SRC_ASLP_MASK   (Literal=128)
        Byte            SRC_FIFO_MASK   (Literal=64)
        Byte            SRC_TRANS_MASK  (Literal=32)
        Byte            SRC_LNDPRT_MASK (Literal=16)
        Byte            SRC_PULSE_MASK  (Literal=8)
        Byte            SRC_FF_MT_MASK  (Literal=4)
        Byte            SRC_DRDY_MASK   (Literal=1)
        Byte            ST_MASK         (Literal=128)
        Byte            RST_MASK        (Literal=64)
        Byte            SMODS1_MASK     (Literal=16)
        Byte            SMODS0_MASK     (Literal=8)
        Byte            SLPE_MASK       (Literal=4)
        Byte            MODS1_MASK      (Literal=2)
        Byte            MODS0_MASK      (Literal=1)
        Byte            SMODS_MASK      (Literal=24)
        Byte            MODS_MASK       (Literal=3)
        Byte            DBCNTM_MASK     (Literal=128)
        Byte            PL_EN_MASK      (Literal=64)
        Byte            FS1_MASK        (Literal=2)
        Byte            FS0_MASK        (Literal=1)
        Byte            FS_MASK         (Literal=3)
        Byte            ASLP_RATE1_MASK (Literal=128)
        Byte            ASLP_RATE0_MASK (Literal=64)
        Byte            DR2_MASK        (Literal=32)
        Byte            DR1_MASK        (Literal=16)
        Byte            DR0_MASK        (Literal=8)
        Byte            LNOISE_MASK     (Literal=4)
        Byte            FREAD_MASK      (Literal=2)
        Byte            ACTIVE_MASK     (Literal=1)
        Byte            ASLP_RATE_MASK  (Literal=192)
        Byte            DR_MASK         (Literal=56)
        Byte            FGERR_MASK      (Literal=128)
        Byte            FGT_4_MASK      (Literal=64)
        Byte            FGT_3_MASK      (Literal=32)
        Byte            FGT_2_MASK      (Literal=16)
        Byte            FGT_1_MASK      (Literal=8)
        Byte            FGT_0_MASK      (Literal=4)
        Byte            FGT_MASK        (Literal=124)
        Byte            SYSMOD1_MASK    (Literal=2)
        Byte            SYSMOD0_MASK    (Literal=1)
        Byte            SYSMOD_MASK     (Literal=3)
        Byte            BKFR1           (Literal=128)
        Byte            BKFR0           (Literal=64)
        Byte            ZLOCK2          (Literal=4)
        Byte            ZLOCK1          (Literal=2)
        Byte            ZLOCK0          (Literal=1)
        Byte            BKFR1_MASK      (Literal=128)
        Byte            BKFR0_MASK      (Literal=64)
        Byte            ZLOCK2_MASK     (Literal=4)
        Byte            ZLOCK1_MASK     (Literal=2)
        Byte            ZLOCK0_MASK     (Literal=1)
        Byte            BKFR_MASK       (Literal=192)
        Byte            ZLOCK_MASK      (Literal=7)
        Byte            P_L_THS4        (Literal=128)
        Byte            P_L_THS3        (Literal=64)
        Byte            P_L_THS2        (Literal=32)
        Byte            P_L_THS1        (Literal=16)
        Byte            P_L_THS0        (Literal=8)
        Byte            HYS2            (Literal=4)
        Byte            HYS1            (Literal=2)
        Byte            HYS0            (Literal=1)
        Byte            P_L_THS4_MASK   (Literal=128)
        Byte            P_L_THS3_MASK   (Literal=64)
        Byte            P_L_THS2_MASK   (Literal=32)
        Byte            P_L_THS1_MASK   (Literal=16)
        Byte            P_L_THS0_MASK   (Literal=8)
        Byte            HYS2_MASK       (Literal=4)
        Byte            HYS1_MASK       (Literal=2)
        Byte            HYS0_MASK       (Literal=1)
        Byte            P_L_THS_MASK    (Literal=248)
        Byte            HYS_MASK        (Literal=7)
        Byte            FIFO_GATE_MASK  (Literal=128)
        Byte            WAKE_TRANS_MASK (Literal=64)
        Byte            WAKE_LNDPRT_MASK(Literal=32)
        Byte            WAKE_PULSE_MASK (Literal=16)
        Byte            WAKE_FF_MT_MASK (Literal=8)
        Byte            IPOL_MASK       (Literal=2)
        Byte            PP_OD_MASK      (Literal=1)
        Byte            WAKE_CLEAR_MASK (Literal=60)
        Byte            INT_EN_ASLP_MASK(Literal=128)
        Byte            INT_EN_FIFO_MASK(Literal=64)
        Byte            INT_EN_TRANS_MAS(Literal=32)
        Byte            INT_EN_LNDPRT_MA(Literal=16)
        Byte            INT_EN_PULSE_MAS(Literal=8)
        Byte            INT_EN_FF_MT_MAS(Literal=4)
        Byte            INT_EN_DRDY_MASK(Literal=1)
        Byte            INT_CLEAR_MASK  (Literal=253)
        Byte            INT_CFG_ASLP_MAS(Literal=128)
        Byte            INT_CFG_FIFO_MAS(Literal=64)
        Byte            INT_CFG_TRANS_MA(Literal=32)
        Byte            INT_CFG_LNDPRT_M(Literal=16)
        Byte            INT_CFG_PULSE_MA(Literal=8)
        Byte            INT_CFG_FF_MT_MA(Literal=4)
        Byte            INT_CFG_DRDY_MAS(Literal=1)
        Byte            INT_CFG_CLEAR_MA(Literal=253)
        Byte            TEA_MASK        (Literal=64)
        Byte            ZTRANSE_MASK    (Literal=32)
        Byte            Z_TRANS_POL_MASK(Literal=16)
        Byte            YTRANSE_MASK    (Literal=8)
        Byte            Y_TRANS_POL_MASK(Literal=4)
        Byte            XTRANSE_MASK    (Literal=2)
        Byte            X_TRANS_POL_MASK(Literal=1)
        Byte            TELE_MASK       (Literal=16)
        Byte            ZTEFE_MASK      (Literal=8)
        Byte            YTEFE_MASK      (Literal=4)
        Byte            XTEFE_MASK      (Literal=2)
        Byte            HPF_BYP_MASK    (Literal=1)
        Byte            FULL_SCALE_2G   (Literal=0)
        Byte            FULL_SCALE_4G   (Literal=1)
        Byte            FULL_SCALE_8G   (Literal=2)
        Byte            AODR_800HZ      (Literal=0)
        Byte            AODR_400HZ      (Literal=8)
        Byte            AODR_200HZ      (Literal=16)
        Byte            AODR_100HZ      (Literal=24)
        Byte            AODR_50HZ       (Literal=32)
        Byte            AODR_12_5HZ     (Literal=40)
        Byte            AODR_6_25HZ     (Literal=48)
        Byte            AODR_1_56HZ     (Literal=56)
        Byte            SMOD_NORMAL     (Literal=0)
        Byte            SMOD_LOW_NOISE  (Literal=8)
        Byte            SMOD_HIGH_RES   (Literal=16)
        Byte            SMOD_LOW_POWER  (Literal=24)
        Byte            MOD_NORMAL      (Literal=0)
        Byte            MOD_LOW_NOISE   (Literal=1)
        Byte            MOD_HIGH_RES    (Literal=2)
        Byte            MOD_LOW_POWER   (Literal=3)
        Byte            SYSMOD_STANDBY  (Literal=0)
        Byte            SYSMOD_WAKE     (Literal=2)
        Byte            SYSMOD_SLEEP    (Literal=1)
        Byte            FIFO_GATE       (Literal=128)
        Byte            WAKE_TRANS      (Literal=64)
        Byte            WAKE_LNDPRT     (Literal=32)
        Byte            WAKE_PULSE      (Literal=16)
        Byte            WAKE_FF_MT      (Literal=8)
        Byte            IPOL            (Literal=2)
        Byte            PP_OD           (Literal=1)
        Byte            INT_EN_ASLP     (Literal=128)
        Byte            INT_EN_FIFO     (Literal=64)
        Byte            INT_EN_TRANS    (Literal=32)
        Byte            INT_EN_LNDPRT   (Literal=16)
        Byte            INT_EN_PULSE    (Literal=8)
        Byte            INT_EN_FF_MT    (Literal=4)
        Byte            INT_EN_DRDY     (Literal=1)
        Byte            NEWLP           (Literal=128)
        Byte            LO              (Literal=64)
        Byte            LAPO1           (Literal=4)
        Byte            LAPO0           (Literal=2)
        Byte            BAFRO           (Literal=1)
        Byte            TEA             (Literal=64)
        Byte            ZTRANSE         (Literal=32)
        Byte            Z_TRANS_POL     (Literal=16)
        Byte            YTRANSE         (Literal=8)
        Byte            Y_TRANS_POL     (Literal=4)
        Byte            XTRANSE         (Literal=2)
        Byte            X_TRANS_POL     (Literal=1)
        Byte            INT_CFG_ASLP    (Literal=128)
        Byte            INT_CFG_FIFO    (Literal=64)
        Byte            INT_CFG_TRANS   (Literal=32)
        Byte            INT_CFG_LNDPRT  (Literal=16)
        Byte            INT_CFG_PULSE   (Literal=8)
        Byte            INT_CFG_FF_MT   (Literal=4)
        Byte            INT_CFG_DRDY    (Literal=1)
        Byte            TELE            (Literal=16)
        Byte            ZTEFE           (Literal=8)
        Byte            YTEFE           (Literal=4)
        Byte            XTEFE           (Literal=2)
        Byte            HPF_BYP         (Literal=1)
        Byte            SRC_ASLP        (Literal=128)
        Byte            SRC_FIFO        (Literal=64)
        Byte            SRC_TRANS       (Literal=32)
        Byte            SRC_LNDPRT      (Literal=16)
        Byte            SRC_PULSE       (Literal=8)
        Byte            SRC_FF_MT       (Literal=4)
        Byte            SRC_DRDY        (Literal=1)
        Float           LOW_TRIGGER_THRE(Literal=0)
        Float           HIGH_TRIGGER_THR(Literal=8)
        Float           TRANSIENT_THRESH(Literal=0.063)
        Float           LOW_DURATION_MS (Literal=0)
        Float           HIGH_DURATION_MS(Literal=5100)
        Float           DURATION_RESOLUT(Literal=20)
        I2c             gAccelerometer  (MemberRefTypVariableOffset=0)
        Boolean         online          (MemberValTypVariableOffset=4)
        Block Sub New (Line 285:295)
            Block If Then  (Line 287:294)
            End Block
        End Block
        Block Function map_range (Line 297:302)
            Float           old_range       (LocalValTypVariableOffset=5)
            Float           new_range       (LocalValTypVariableOffset=6)
            Float           var             (LocalValTypVariableOffset=0)
            Float           old_min         (LocalValTypVariableOffset=1)
            Float           old_max         (LocalValTypVariableOffset=2)
            Byte            new_min         (LocalValTypVariableOffset=3)
            Byte            new_max         (LocalValTypVariableOffset=4)
        End Block
        Block Function map_range (Line 304:309)
            Float           old_range       (LocalValTypVariableOffset=5)
            Float           new_range       (LocalValTypVariableOffset=6)
            Float           var             (LocalValTypVariableOffset=0)
            Byte            old_min         (LocalValTypVariableOffset=1)
            Byte            old_max         (LocalValTypVariableOffset=2)
            Float           new_min         (LocalValTypVariableOffset=3)
            Float           new_max         (LocalValTypVariableOffset=4)
        End Block
        Block Function GetmsPerCount (Line 311:374)
            Byte            frequency       (LocalValTypVariableOffset=0)
            Byte            mode            (LocalValTypVariableOffset=1)
            Float           ms              (LocalValTypVariableOffset=2)
        End Block
        Block Function GetmsFromFrequency (Line 376:401)
            Byte            frequency       (LocalValTypVariableOffset=0)
            Float           ms              (LocalValTypVariableOffset=1)
        End Block
        Block Function readAccelData (Line 403:413)
            ListOfByte      rawData         (LocalRefTypVariableOffset=0)
            ListOfShort     destination     (LocalRefTypVariableOffset=1)
            Block If Then  (Line 407:411)
            End Block
        End Block
        Block Function readAccelData2sCompliment (Line 415:431)
            ListOfShort     destination     (LocalRefTypVariableOffset=0)
            Block If Then  (Line 418:429)
                Block If Then  (Line 420:422)
                End Block
                Block If Then  (Line 423:425)
                End Block
                Block If Then  (Line 426:428)
                End Block
            End Block
        End Block
        Block Function readIntSource (Line 434:436)
        End Block
        Block Function readPLStatus (Line 439:441)
        End Block
        Block Function readPulseSource (Line 444:446)
        End Block
        Block Function readTransientSource (Line 449:451)
        End Block
        Block Function readFreeFallSource (Line 454:456)
        End Block
        Block Function whoAmI (Line 459:461)
        End Block
        Block Sub Standby (Line 463:466)
        End Block
        Block Sub Active (Line 468:471)
        End Block
        Block Sub SetRegister (Line 473:477)
            ListOfByte      data            (LocalRefTypVariableOffset=0)
            Byte            reg             (LocalValTypVariableOffset=0)
        End Block
        Block Function read (Line 479:488)
            Byte            result          (LocalValTypVariableOffset=1)
            ListOfByte      value           (LocalRefTypVariableOffset=0)
            Byte            address         (LocalValTypVariableOffset=0)
            Block If Then  (Line 484:486)
            End Block
        End Block
        Block Function read (Line 490:495)
            ListOfByte      value           (LocalRefTypVariableOffset=0)
            Byte            address         (LocalValTypVariableOffset=0)
            Byte            length          (LocalValTypVariableOffset=1)
        End Block
        Block Sub write (Line 497:503)
            ListOfByte      data            (LocalRefTypVariableOffset=0)
            Byte            address         (LocalValTypVariableOffset=0)
            Byte            value           (LocalValTypVariableOffset=1)
        End Block
        Block Sub reset (Line 505:510)
            Block While  (Line 507:509)
            End Block
        End Block
        Block Sub SetRange (Line 512:514)
            Byte            range           (LocalValTypVariableOffset=0)
        End Block
        Block Function GetRange (Line 516:518)
        End Block
        Block Sub SetWakeModeFrequency (Line 520:522)
            Byte            frequency       (LocalValTypVariableOffset=0)
        End Block
        Block Function GetWakeModeFrequency (Line 524:526)
        End Block
        Block Sub SetWakeModeResolution (Line 528:530)
            Byte            resolution      (LocalValTypVariableOffset=0)
        End Block
        Block Function GetWakeModeResolution (Line 532:534)
        End Block
        Block Sub SetSleepMode (Line 536:538)
            Byte            mode            (LocalValTypVariableOffset=0)
        End Block
        Block Function GetSleepMode (Line 540:542)
        End Block
        Block Sub SetSleepModeResolution (Line 544:546)
            Byte            resolution      (LocalValTypVariableOffset=0)
        End Block
        Block Function GetSleepModeResolution (Line 548:550)
        End Block
        Block Sub SetSleepModeInterrupts (Line 552:554)
            Byte            interrupts      (LocalValTypVariableOffset=0)
        End Block
        Block Sub SetEnableInterrupts (Line 556:558)
            Byte            interrupts      (LocalValTypVariableOffset=0)
        End Block
        Block Sub SetInterruptsINT (Line 560:563)
            Byte            interrupts      (LocalValTypVariableOffset=0)
        End Block
        Block Sub SetTransientCFG (Line 565:568)
            Byte            transient       (LocalValTypVariableOffset=0)
        End Block
        Block Sub SetTransientThreshold (Line 570:576)
            Byte            thresholdByte   (LocalValTypVariableOffset=1)
            Float           threshold       (LocalValTypVariableOffset=0)
            Block If Then  (Line 573:575)
            End Block
        End Block
        Block Sub SetTransientCount (Line 578:583)
            Byte            count           (LocalValTypVariableOffset=0)
        End Block
        Block Sub SetTransientDuration (Line 585:594)
            Float           msPerCount      (LocalValTypVariableOffset=1)
            Byte            count           (LocalValTypVariableOffset=2)
            Float           duration        (LocalValTypVariableOffset=0)
        End Block
        Block Sub EnablePL (Line 596:602)
            Boolean         enable          (LocalValTypVariableOffset=0)
            Block If Then  (Line 597:599)
            End Block
            Block Else (Line 599:601)
            End Block
        End Block
        Block Sub EnablePLDebounce (Line 604:612)
            Boolean         enable          (LocalValTypVariableOffset=0)
            Block If Then  (Line 607:609)
            End Block
            Block Else (Line 609:611)
            End Block
        End Block
        Block Sub SetPLZLOCK (Line 614:623)
            Byte            zlock           (LocalValTypVariableOffset=0)
            Block If Then  (Line 620:622)
            End Block
        End Block
        Block Sub SetPLZLOCKDegrees (Line 625:635)
            Byte            zlockByte       (LocalValTypVariableOffset=1)
            Float           zlock           (LocalValTypVariableOffset=0)
            Block If Then  (Line 632:634)
            End Block
        End Block
        Block Sub SetPLBFThreshold (Line 637:646)
            Byte            thresholdByte   (LocalValTypVariableOffset=1)
            Float           threshold       (LocalValTypVariableOffset=0)
            Block If Then  (Line 643:645)
            End Block
        End Block
        Block Sub SetPLThreshold (Line 648:658)
            Byte            thresholdByte   (LocalValTypVariableOffset=1)
            Float           threshold       (LocalValTypVariableOffset=0)
            Block If Then  (Line 655:657)
            End Block
        End Block
        Block Sub SetPLHysteresis (Line 660:670)
            Byte            hysteresisByte  (LocalValTypVariableOffset=1)
            Float           hysteresis      (LocalValTypVariableOffset=0)
            Block If Then  (Line 667:669)
            End Block
        End Block
        Block Sub SetPLCount (Line 672:677)
            Byte            count           (LocalValTypVariableOffset=0)
        End Block
        Block Sub SetPLDuration (Line 679:688)
            Float           msPerCount      (LocalValTypVariableOffset=1)
            Byte            count           (LocalValTypVariableOffset=2)
            Float           duration        (LocalValTypVariableOffset=0)
        End Block
        Block Sub calibrate (Line 690:744)
            ListOfInteger   accel_bias      (LocalRefTypVariableOffset=0)
            Integer         fcount          (LocalValTypVariableOffset=0)
            ListOfShort     temp            (LocalRefTypVariableOffset=1)
            Short           accelsensitivity(LocalValTypVariableOffset=1)
            ListOfByte      rawData         (LocalRefTypVariableOffset=2)
            Block For  (Line 712:720)
                Integer         ii              (LocalValTypVariableOffset=2)
            End Block
            Block If Then  (Line 726:728)
            End Block
            Block Else (Line 728:730)
            End Block
        End Block
        Block Function ConfigureShockInterrupt (Line 750:790)
            Boolean         result          (LocalValTypVariableOffset=2)
            Float           threshold       (LocalValTypVariableOffset=0)
            Float           duration        (LocalValTypVariableOffset=1)
            Block If Then  (Line 755:785)
            End Block
            Block Else (Line 785:788)
            End Block
        End Block
        Block Function ConfigureOrientationInterrupt (Line 793:840)
            Boolean         result          (LocalValTypVariableOffset=2)
            Float           threshold       (LocalValTypVariableOffset=0)
            Float           duration        (LocalValTypVariableOffset=1)
            Block If Then  (Line 798:835)
            End Block
            Block Else (Line 835:838)
            End Block
        End Block
        Total Size of Member data including base classes = 8.
    End Block




****** GLOBAL_VARIABLES **********************************************
accel, Class=MMA8652, Offset=0, SourceClass=Main
mcUIDString, Class=String, Offset=4, SourceClass=MQTT
Number, Class=Integer, Offset=8, IsReadoly, SourceClass=Intrinsic
Data, Class=Integer, Offset=12, IsReadoly, SourceClass=Intrinsic
ProgramCounter, Class=Integer, Offset=16, IsReadoly, SourceClass=Intrinsic
data, Class=dataType, Offset=24, SourceClass=Main
Publish_data, Class=Boolean, Offset=20, SourceClass=Main


****** LITERALS ***********************************************
     1 String "True"
     4 String "False"
     7 String "\r\n"
     9 String "MCThings/Publish"
    15 String "Status"
    18 String "Booted"
    21 String "Accel Sensor Online"
    27 String "Accel Sensor  Offline"
    34 String "Orientation"
    38 String "Front Facing"
    43 String "Back Facing"
    47 String "Doorknock"
    51 String "Door"
    54 String "Publish"
    57 String " :Boolean Conversion failed"
    65 String "Uptime"
    68 String "BatteryVoltage"
    73 String "Temperature"
    77 String "OnLine"
    80 String "X8"
    82 String "MCThings/"
    86 String "/"
