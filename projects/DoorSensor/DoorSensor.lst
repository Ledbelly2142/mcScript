****** BUILD Of 'DoorSensor' (2016-09-10 1:11:52 PM)


****** EVENT HANDLERS
                                                                                                                                                                              0:    0x0072   Address Priority 0 Event.   Code for 'Boot' starts at 114.
                                                                                                                                                                              1:    0x00B8   Address Priority 1 Event.   Code for 'NewGateway' starts at 184.
                                                                                                                                                                              2:    0x00C3   Address Priority 2 Event.   Code for 'AccelerometerInt1' starts at 195.
                                                                                                                                                                              3:    0x0120   Address Priority 3 Event.   Code for 'ReedSwitchChanged' starts at 288.
                                                                                                                                                                              4:    0x013F   Address Priority 4 Event.   Code for 'SubscriptionDelivery' starts at 319.
                                                                                                                                                                              5:    0x019E   Address Priority 5 Event.   Code for 'Publish' starts at 414.
                                                                                                                                                                              6:    0x0000   Address Priority 6 Event.   No Event defined.
                                                                                                                                                                              7:    0x0000   Address Priority 7 Event.   No Event defined.
                                                                                                                                                                              8:    0x0000   Address Priority 8 Event.   No Event defined.
                                                                                                                                                                              9:    0x0000   Address Priority 9 Event.   No Event defined.
                                                                                                                                                                              10:   0x0000   Address Priority 10 Event.  No Event defined.
                                                                                                                                                                              11:   0x0000   Address Priority 11 Event.  No Event defined.
                                                                                                                                                                              12:   0x0000   Address Priority 12 Event.  No Event defined.
                                                                                                                                                                              13:   0x0000   Address Priority 13 Event.  No Event defined.
                                                                                                                                                                              14:   0x0000   Address Priority 14 Event.  No Event defined.
                                                                                                                                                                              15:   0x0000   Address Priority 15 Event.  No Event defined.
                                                                                                                                                                              16:   0x0000   Address Priority 16 Event.  No Event defined.
                                                                                                                                                                              17:   0x0000   Address Priority 17 Event.  No Event defined.
                                                                                                                                                                              18:   0x0000   Address Priority 18 Event.  No Event defined.
                                                                                                                                                                              19:   0x0000   Address Priority 19 Event.  No Event defined.
                                                                                                                                                                              20:   0x0000   Address Priority 20 Event.  No Event defined.
                                                                                                                                                                              21:   0x0000   Address Priority 21 Event.  No Event defined.
                                                                                                                                                                              22:   0x0000   Address Priority 22 Event.  No Event defined.
                                                                                                                                                                              23:   0x0000   Address Priority 23 Event.  No Event defined.
                                                                                                                                                                              24:   0x0000   Address Priority 24 Event.  No Event defined.
                                                                                                                                                                              25:   0x0000   Address Priority 25 Event.  No Event defined.
                                                                                                                                                                              26:   0x0000   Address Priority 26 Event.  No Event defined.
                                                                                                                                                                              27:   0x0000   Address Priority 27 Event.  No Event defined.
                                                                                                                                                                              28:   0x0000   Address Priority 28 Event.  No Event defined.
                                                                                                                                                                              29:   0x0000   Address Priority 29 Event.  No Event defined.
                                                                                                                                                                              30:   0x0000   Address Priority 30 Event.  No Event defined.
                                                                                                                                                                              31:   0x0000   Address Priority 31 Event.  No Event defined.

****** RUNTIME INFORMATION
                                                                                                                                                                              32:   0x088D   ScriptSizeLS (Size of the code in 2-byte instructions = 2189)
                                                                                                                                                                              33:   0x0000   CodeSizeMS (Size of the code in 2-byte instructions = 2189)
                                                                                                                                                                              34:   0x0023   CodeSizeInBlocks = 35
                                                                                                                                                                              35:   0x0004   StringSizeInBlocks = 4
                                                                                                                                                                              36:   0x0000   Reserved
                                                                                                                                                                              37:   0x0000   Reserved
                                                                                                                                                                              38:   0xC318   Compile Date and Time 2016-09-10 13:11:52
                                                                                                                                                                              39:   0x1F66   Compile Date and Time 2016-09-10 13:11:52
                                                                                                                                                                              40:   0x0000   Reserved
                                                                                                                                                                              41:   0x0000   Reserved
                                                                                                                                                                              42:   0x0000   Reserved
                                                                                                                                                                              43:   0x0000   Reserved
                                                                                                                                                                              44:   0x0000   Reserved
                                                                                                                                                                              45:   0x0000   PinMode Pin0=NotUsed  Pin1=NotUsed
                                                                                                                                                                              46:   0x0000   PinMode Pin2=NotUsed  Pin3=NotUsed
                                                                                                                                                                              47:   0x0000   PinMode Pin4=NotUsed  Pin5=NotUsed
                                                                                                                                                                              48:   0x0000   PinMode Pin6=NotUsed  Pin7=NotUsed
                                                                                                                                                                              49:   0x0000   PinMode Pin8=NotUsed   Pin9=NotUsed
                                                                                                                                                                              50:   0x0000   PinMode Pin10=NotUsed   Pin11=NotUsed
                                                                                                                                                                              51:   0x0000   PinMode Pin12=NotUsed   Pin13=NotUsed
                                                                                                                                                                              52:   0x0000   PinMode Pin14=NotUsed   Pin15=NotUsed
                                                                                                                                                                              53:   0x0000   PinMode Pin16=NotUsed   Pin17=NotUsed
                                                                                                                                                                              54:   0x0000   PinMode Pin18=NotUsed   Pin19=NotUsed
                                                                                                                                                                              55:   0x0000   PinMode Pin20=NotUsed   Pin21=NotUsed
                                                                                                                                                                              56:   0x0000   PinMode Pin22=NotUsed   Pin23=NotUsed
                                                                                                                                                                              57:   0x0000   Reserved
                                                                                                                                                                              58:   0x0000   Reserved
                                                                                                                                                                              59:   0x0000   Reserved
                                                                                                                                                                              60:   0x0000   Reserved
                                                                                                                                                                              61:   0x1800   IdleThread EntryPoint ValTypParams=0, RefTypParams=0
                                                                                                                                                                              62:   0x0015   SystemIdle
                                                                                                                                                                              63:   0x5002   BranchBack 62

****** CLASS INFORMATION
                                                                                                                                                                              64:   0x0049   Class Descriptor for class 'Global'. Next Descriptor at 73.
                                                                                                                                                                              65:   0x0000   Base Class 'Object' Value represent a pointer if >= 64 (0x40) or ClassType if < 64 (0).
                                                                                                                                                                              66:   0x0000   Offset of RefObject data.(0).
                                                                                                                                                                              67:   0x000C   Size of RefObject data.(12).
                                                                                                                                                                              68:   0x0028   Size of all data.(40).
                                                                                                                                                                              69:   0x6C47   Part of the class name 'Global'.
                                                                                                                                                                              70:   0x626F   Part of the class name 'Global'.
                                                                                                                                                                              71:   0x6C61   Part of the class name 'Global'.
                                                                                                                                                                              72:   0x0000   Part of the class name 'Global'.
                                                                                                                                                                              73:   0x0051   Class Descriptor for class 'Main'. Next Descriptor at 81.
                                                                                                                                                                              74:   0x0000   Base Class 'Object' Value represent a pointer if >= 64 (0x40) or ClassType if < 64 (0).
                                                                                                                                                                              75:   0x0000   Offset of RefObject data.(0).
                                                                                                                                                                              76:   0x0000   Size of RefObject data.(0).
                                                                                                                                                                              77:   0x0000   Size of all data.(0).
                                                                                                                                                                              78:   0x614D   Part of the class name 'Main'.
                                                                                                                                                                              79:   0x6E69   Part of the class name 'Main'.
                                                                                                                                                                              80:   0x0000   Part of the class name 'Main'.
                                                                                                                                                                              81:   0x005C   Class Descriptor for class 'TempSensor'. Next Descriptor at 92.
                                                                                                                                                                              82:   0x0000   Base Class 'Object' Value represent a pointer if >= 64 (0x40) or ClassType if < 64 (0).
                                                                                                                                                                              83:   0x0000   Offset of RefObject data.(0).
                                                                                                                                                                              84:   0x0000   Size of RefObject data.(0).
                                                                                                                                                                              85:   0x0000   Size of all data.(0).
                                                                                                                                                                              86:   0x6554   Part of the class name 'TempSensor'.
                                                                                                                                                                              87:   0x706D   Part of the class name 'TempSensor'.
                                                                                                                                                                              88:   0x6553   Part of the class name 'TempSensor'.
                                                                                                                                                                              89:   0x736E   Part of the class name 'TempSensor'.
                                                                                                                                                                              90:   0x726F   Part of the class name 'TempSensor'.
                                                                                                                                                                              91:   0x0000   Part of the class name 'TempSensor'.
                                                                                                                                                                              92:   0x0064   Class Descriptor for class 'MQTT'. Next Descriptor at 100.
                                                                                                                                                                              93:   0x0000   Base Class 'Object' Value represent a pointer if >= 64 (0x40) or ClassType if < 64 (0).
                                                                                                                                                                              94:   0x0000   Offset of RefObject data.(0).
                                                                                                                                                                              95:   0x0000   Size of RefObject data.(0).
                                                                                                                                                                              96:   0x0000   Size of all data.(0).
                                                                                                                                                                              97:   0x514D   Part of the class name 'MQTT'.
                                                                                                                                                                              98:   0x5454   Part of the class name 'MQTT'.
                                                                                                                                                                              99:   0x0000   Part of the class name 'MQTT'.
                                                                                                                                                                              100:  0x006D   Class Descriptor for class 'MMA8652'. Next Descriptor at 109.
                                                                                                                                                                              101:  0x0000   Base Class 'Object' Value represent a pointer if >= 64 (0x40) or ClassType if < 64 (0).
                                                                                                                                                                              102:  0x0000   Offset of RefObject data.(0).
                                                                                                                                                                              103:  0x0004   Size of RefObject data.(4).
                                                                                                                                                                              104:  0x0008   Size of all data.(8).
                                                                                                                                                                              105:  0x4D4D   Part of the class name 'MMA8652'.
                                                                                                                                                                              106:  0x3841   Part of the class name 'MMA8652'.
                                                                                                                                                                              107:  0x3536   Part of the class name 'MMA8652'.
                                                                                                                                                                              108:  0x0032   Part of the class name 'MMA8652'.
                                                                                                                                                                              109:  0x0000   End Of Class Data.

****** APPLIACTION STATEMENTS
*************************************************************************************************************

000010  Class Main                                                                                                                                                            110:  0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000011      
000012      Const Version As String = "V1.01"
000013      Shared data As dataType
000014      Const Sub_Topic As String = "MCThings/Publish"
000015      Shared Sub_Topic_Knock_Enable As String
000016      Shared Publish_data As Boolean
000017      Shared accel As MMA8652
000018      Shared TimeSinceKnockTriggered As Integer
000019      Shared TimeSinceDoorClosed As Integer
000020      
                                                                                                                                                                              112:  0x0001                           EventType=Boot
                                                                                                                                                                              113:  0x0700                           EventCategory=Interrupt
000021      Shared Event Boot()                                                                                                                                               114:  0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000022          Publish_data = True                                                                                                                                           115:  0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              116:  0x000C   PushGlobal              
                                                                                                                                                                              117:  0xC818   PopFieldU8              Publish_data

000023          Sub_Topic_Knock_Enable = "MCThings/" + Device.mcUID().ToString("X8") + "/EnableDoorKnock"                                                                     118:  0x8412   PushLiteral             18
                                                                                                                                                                              119:  0x8416   PushLiteral             22
                                                                                                                                                                              120:  0x00F8   DeviceUID               
                                                                                                                                                                              121:  0x8004   PushConstU10            4 (0x0004)
                                                                                                                                                                              122:  0x0069   StrFormat               
                                                                                                                                                                              123:  0x0056   StrAdd                  
                                                                                                                                                                              124:  0x8418   PushLiteral             24
                                                                                                                                                                              125:  0x0056   StrAdd                  
                                                                                                                                                                              126:  0x000C   PushGlobal              
                                                                                                                                                                              127:  0xD400   PopFieldRef             Sub_Topic_Knock_Enable

000024          TimeSinceKnockTriggered = 0                                                                                                                                   128:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              129:  0x000C   PushGlobal              
                                                                                                                                                                              130:  0xD020   PopFieldI32             TimeSinceKnockTriggered

000025          TimeSinceDoorClosed = 0                                                                                                                                       131:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              132:  0x000C   PushGlobal              
                                                                                                                                                                              133:  0xD024   PopFieldI32             TimeSinceDoorClosed

000026          MQTT.Subscribe(Sub_Topic)                                                                                                                                     134:  0x840C   PushLiteral             12
                                                                                                                                                                              135:  0x000E   PushNothing             
                                                                                                                                                                              136:  0x1E84   BranchSubr              781

000027          MQTT.Subscribe(Sub_Topic_Knock_Enable)                                                                                                                        137:  0x000C   PushGlobal              
                                                                                                                                                                              138:  0xC400   PushFieldRef            Sub_Topic_Knock_Enable
                                                                                                                                                                              139:  0x000E   PushNothing             
                                                                                                                                                                              140:  0x1E80   BranchSubr              781

000028          MQTT.Publish("Status", "Booted: " + Version)                                                                                                                  141:  0x841E   PushLiteral             30
                                                                                                                                                                              142:  0x8421   PushLiteral             33
                                                                                                                                                                              143:  0x000E   PushNothing             
                                                                                                                                                                              144:  0x1DD8   BranchSubr              617

000029          accel = New MMA8652                                                                                                                                           145:  0x8064   PushConstU10            100 (0x0064)
                                                                                                                                                                              146:  0x0010   ClassNew                
                                                                                                                                                                              147:  0x1E7D   BranchSubr              785
                                                                                                                                                                              148:  0x1E7E   BranchSubr              787
                                                                                                                                                                              149:  0x000C   PushGlobal              
                                                                                                                                                                              150:  0xD404   PopFieldRef             accel

000030          If accel.online Then                                                                                                                                          151:  0x000C   PushGlobal              
                                                                                                                                                                              152:  0xC404   PushFieldRef            accel
                                                                                                                                                                              153:  0xB804   PushFieldU8             online
                                                                                                                                                                              154:  0x3C12   BranchFalse             173

000031              MQTT.Publish("Status", "Accel Sensor Online")                                                                                                             155:  0x841E   PushLiteral             30
                                                                                                                                                                              156:  0x8426   PushLiteral             38
                                                                                                                                                                              157:  0x000E   PushNothing             
                                                                                                                                                                              158:  0x1DCA   BranchSubr              617

000032              accel.ConfigureShockInterrupt(0.1, 20) //default 0.8, 0 (magnitude in g, duraton in ms)                                                                   159:  0x0110   PushConstI32            1036831949 (0x3DCCCCCD)
                                                                                                                                                                              160:  0xCCCD                           
                                                                                                                                                                              161:  0x3DCC                           
                                                                                                                                                                              162:  0xEA14   PushConstFlt            20.0
                                                                                                                                                                              163:  0x000C   PushGlobal              
                                                                                                                                                                              164:  0xC404   PushFieldRef            accel
                                                                                                                                                                              165:  0x5800   JumpSubr                2052
                                                                                                                                                                              166:  0x0804                           
                                                                                                                                                                              167:  0xE420   FreeStackSpace          ValTypeSize=1, RefTypeSize=0

000033              MQTT.Publish("KnockEnable", "True")                                                                                                                       168:  0x842C   PushLiteral             44
                                                                                                                                                                              169:  0x8401   PushLiteral             1
                                                                                                                                                                              170:  0x000E   PushNothing             
                                                                                                                                                                              171:  0x1DBD   BranchSubr              617

000034              'accel.ConfigureOrientationInterrupt(2.4, 500) //orientation not used in door sensor
                                                                                                                                                                              172:  0x4008   Branch                  181
000035          Else                                                                                                                                                          

000036              MQTT.Publish("Status", "Accel Sensor Offline")                                                                                                            173:  0x841E   PushLiteral             30
                                                                                                                                                                              174:  0x8430   PushLiteral             48
                                                                                                                                                                              175:  0x000E   PushNothing             
                                                                                                                                                                              176:  0x1DB8   BranchSubr              617

000037              MQTT.Publish("KnockEnable", "False")                                                                                                                      177:  0x842C   PushLiteral             44
                                                                                                                                                                              178:  0x8404   PushLiteral             4
                                                                                                                                                                              179:  0x000E   PushNothing             
                                                                                                                                                                              180:  0x1DB4   BranchSubr              617

000038          End If
000039      End Event                                                                                                                                                         181:  0x0091   Return                  

000040      
                                                                                                                                                                              182:  0x0005                           EventType=NewGateway
                                                                                                                                                                              183:  0x0700                           EventCategory=Interrupt
000041      Shared Event NewGateway()                                                                                                                                         184:  0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000042          MQTT.Subscribe(Sub_Topic)                                                                                                                                     185:  0x840C   PushLiteral             12
                                                                                                                                                                              186:  0x000E   PushNothing             
                                                                                                                                                                              187:  0x1E51   BranchSubr              781

000043          MQTT.Subscribe(Sub_Topic_Knock_Enable)                                                                                                                        188:  0x000C   PushGlobal              
                                                                                                                                                                              189:  0xC400   PushFieldRef            Sub_Topic_Knock_Enable
                                                                                                                                                                              190:  0x000E   PushNothing             
                                                                                                                                                                              191:  0x1E4D   BranchSubr              781

000044      End Event                                                                                                                                                         192:  0x0091   Return                  

000045      
                                                                                                                                                                              193:  0x0212                           EventType=AccelerometerInt1
                                                                                                                                                                              194:  0x0700                           EventCategory=Interrupt
000046      Shared Event AccelerometerInt1()                                                                                                                                  195:  0x1800   EntryPoint              ValTypParams=0, RefTypParams=0
                                                                                                                                                                              196:  0xE020   AllocateStackSpace      ValTypeSize=1, RefTypeSize=0

000047          Dim int_source As Byte = accel.readIntSource()                                                                                                                197:  0x000C   PushGlobal              
                                                                                                                                                                              198:  0xC404   PushFieldRef            accel
                                                                                                                                                                              199:  0x5800   JumpSubr                1235
                                                                                                                                                                              200:  0x04D3                           
                                                                                                                                                                              201:  0x9000   PopLocalI32             int_source

000048          If (int_source & MMA8652.SRC_LNDPRT) = MMA8652.SRC_LNDPRT Then                                                                                                202:  0x8800   PushLocalI32            int_source
                                                                                                                                                                              203:  0x8010   PushConstU10            16 (0x0010)
                                                                                                                                                                              204:  0x001F   IntAnd                  
                                                                                                                                                                              205:  0x8010   PushConstU10            16 (0x0010)
                                                                                                                                                                              206:  0x2415   BranchNE                228

000049              'PL interrupt occured
000050              //LedRed = True
000051              If (accel.readPLStatus() & MMA8652.BAFRO) = MMA8652.BAFRO Then                                                                                            207:  0x000C   PushGlobal              
                                                                                                                                                                              208:  0xC404   PushFieldRef            accel
                                                                                                                                                                              209:  0x5800   JumpSubr                1241
                                                                                                                                                                              210:  0x04D9                           
                                                                                                                                                                              211:  0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              212:  0x001F   IntAnd                  
                                                                                                                                                                              213:  0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              214:  0x2407   BranchNE                222

000052                  'front facing
000053                  LedRed = True                                                                                                                                         215:  0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              216:  0x0809   PopAndSetDigitalPin     Pin9

000054                  MQTT.Publish("Orientation", "Front Facing")                                                                                                           217:  0x8437   PushLiteral             55
                                                                                                                                                                              218:  0x843B   PushLiteral             59
                                                                                                                                                                              219:  0x000E   PushNothing             
                                                                                                                                                                              220:  0x1D8C   BranchSubr              617

                                                                                                                                                                              221:  0x4006   Branch                  228
000055              Else                                                                                                                                                      

000056                  'back facing
000057                  LedRed = False                                                                                                                                        222:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              223:  0x0809   PopAndSetDigitalPin     Pin9

000058                  MQTT.Publish("Orientation", "Back Facing")                                                                                                            224:  0x8437   PushLiteral             55
                                                                                                                                                                              225:  0x8440   PushLiteral             64
                                                                                                                                                                              226:  0x000E   PushNothing             
                                                                                                                                                                              227:  0x1D85   BranchSubr              617

000059              End If
000060              //LedRed = False
000061          End If
000062          If (int_source & MMA8652.SRC_TRANS) = MMA8652.SRC_TRANS Then                                                                                                  228:  0x8800   PushLocalI32            int_source
                                                                                                                                                                              229:  0x8020   PushConstU10            32 (0x0020)
                                                                                                                                                                              230:  0x001F   IntAnd                  
                                                                                                                                                                              231:  0x8020   PushConstU10            32 (0x0020)
                                                                                                                                                                              232:  0x2434   BranchNE                285

000063              'Transient interrupt occured
000064              If (accel.readTransientSource() & MMA8652.TEA) = MMA8652.TEA Then                                                                                         233:  0x000C   PushGlobal              
                                                                                                                                                                              234:  0xC404   PushFieldRef            accel
                                                                                                                                                                              235:  0x1FF9   BranchSubr              1253
                                                                                                                                                                              236:  0x8040   PushConstU10            64 (0x0040)
                                                                                                                                                                              237:  0x001F   IntAnd                  
                                                                                                                                                                              238:  0x8040   PushConstU10            64 (0x0040)
                                                                                                                                                                              239:  0x242D   BranchNE                285

000065                  'Any Transient Occured
000066                  //LedGreen = True
000067                  If ReedSwitch = False Then //If door is closed                                                                                                        240:  0x0C0C   GetAndPushDigitalPin    Pin12
                                                                                                                                                                              241:  0x382B   BranchTrue              285

000068                      //if more than 60 seconds since Knock last triggered, and more than 5 seconds since door closed
000069                      If (Device.Uptime() - TimeSinceKnockTriggered > 60) And (Device.Uptime() - TimeSinceDoorClosed > 5) Then                                          242:  0x00F9   DeviceUptime            
                                                                                                                                                                              243:  0x000C   PushGlobal              
                                                                                                                                                                              244:  0xC020   PushFieldI32            TimeSinceKnockTriggered
                                                                                                                                                                              245:  0x0031   IntSub                  
                                                                                                                                                                              246:  0x803C   PushConstU10            60 (0x003C)
                                                                                                                                                                              247:  0x0022   IntCmpGT                
                                                                                                                                                                              248:  0x00F9   DeviceUptime            
                                                                                                                                                                              249:  0x000C   PushGlobal              
                                                                                                                                                                              250:  0xC024   PushFieldI32            TimeSinceDoorClosed
                                                                                                                                                                              251:  0x0031   IntSub                  
                                                                                                                                                                              252:  0x8005   PushConstU10            5 (0x0005)
                                                                                                                                                                              253:  0x0022   IntCmpGT                
                                                                                                                                                                              254:  0x001F   IntAnd                  
                                                                                                                                                                              255:  0x3C1D   BranchFalse             285
                                                                                                                                                                              256:  0xE020   AllocateStackSpace      ValTypeSize=1, RefTypeSize=0

000070                          Dim timeSinceLastTransient As Integer = Device.GetTimeSpan()                                                                                  257:  0x00FB   DeviceGetTimeSpan       
                                                                                                                                                                              258:  0x9001   PopLocalI32             timeSinceLastTransient

000071                          'If at least two transients within 0.75 seconds
000072                          If timeSinceLastTransient < 750000 And timeSinceLastTransient > 0 Then                                                                        259:  0x8801   PushLocalI32            timeSinceLastTransient
                                                                                                                                                                              260:  0x0110   PushConstI32            750000 (0x000B71B0)
                                                                                                                                                                              261:  0x71B0                           
                                                                                                                                                                              262:  0x000B                           
                                                                                                                                                                              263:  0x0024   IntCmpLT                
                                                                                                                                                                              264:  0x8801   PushLocalI32            timeSinceLastTransient
                                                                                                                                                                              265:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              266:  0x0022   IntCmpGT                
                                                                                                                                                                              267:  0x001F   IntAnd                  
                                                                                                                                                                              268:  0x3C0F   BranchFalse             284

000073                              Thread.Sleep(1000000) //sleep 1 second                                                                                                    269:  0x0110   PushConstI32            1000000 (0x000F4240)
                                                                                                                                                                              270:  0x4240                           
                                                                                                                                                                              271:  0x000F                           
                                                                                                                                                                              272:  0x00D5   ThreadSleep             
                                                                                                                                                                              273:  0xE420   FreeStackSpace          ValTypeSize=1, RefTypeSize=0

000074                              If ReedSwitch = False Then //If door is still closed (prevent door opening transients from triggering)                                    274:  0x0C0C   GetAndPushDigitalPin    Pin12
                                                                                                                                                                              275:  0x3808   BranchTrue              284

000075                                  TimeSinceKnockTriggered = Device.Uptime()                                                                                             276:  0x00F9   DeviceUptime            
                                                                                                                                                                              277:  0x000C   PushGlobal              
                                                                                                                                                                              278:  0xD020   PopFieldI32             TimeSinceKnockTriggered

000076                                  MQTT.Publish("Doorknock", True)                                                                                                       279:  0x8444   PushLiteral             68
                                                                                                                                                                              280:  0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              281:  0x1401   Box                     BoxBoolean
                                                                                                                                                                              282:  0x000E   PushNothing             
                                                                                                                                                                              283:  0x1D6D   BranchSubr              649

000077                              End If
000078                          End If
                                                                                                                                                                              284:  0xE420   FreeStackSpace          ValTypeSize=1, RefTypeSize=0
000079                      End If                                                                                                                                            

000080                  End If
000081                  //LedGreen = False
000082              End If 
000083          End If
000084      End Event                                                                                                                                                         285:  0x0091   Return                  

000085      
                                                                                                                                                                              286:  0x030C                           EventType=ReedSwitchChanged
                                                                                                                                                                              287:  0x0700                           EventCategory=Interrupt
000086      Shared Event ReedSwitchChanged()                                                                                                                                  288:  0x1800   EntryPoint              ValTypParams=0, RefTypParams=0
                                                                                                                                                                              289:  0xE020   AllocateStackSpace      ValTypeSize=1, RefTypeSize=0

000087          TimeSinceDoorClosed = Device.Uptime()                                                                                                                         290:  0x00F9   DeviceUptime            
                                                                                                                                                                              291:  0x000C   PushGlobal              
                                                                                                                                                                              292:  0xD024   PopFieldI32             TimeSinceDoorClosed

000088          Thread.Sleep(500000) //debounce                                                                                                                               293:  0x0110   PushConstI32            500000 (0x0007A120)
                                                                                                                                                                              294:  0xA120                           
                                                                                                                                                                              295:  0x0007                           
                                                                                                                                                                              296:  0x00D5   ThreadSleep             
                                                                                                                                                                              297:  0xE420   FreeStackSpace          ValTypeSize=1, RefTypeSize=0

000089          Thread.ClearHardwareEvent()                                                                                                                                   298:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              299:  0x00FA   SetCleartHardwareEvent  

000090          LedGreen = True                                                                                                                                               300:  0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              301:  0x080A   PopAndSetDigitalPin     Pin10

000091          Dim Door_Status As Boolean = ReedSwitch                                                                                                                       302:  0x0C0C   GetAndPushDigitalPin    Pin12
                                                                                                                                                                              303:  0x9000   PopLocalI32             Door_Status

000092          MQTT.Publish("Door", Door_Status)                                                                                                                             304:  0x8448   PushLiteral             72
                                                                                                                                                                              305:  0x8800   PushLocalI32            Door_Status
                                                                                                                                                                              306:  0x1401   Box                     BoxBoolean
                                                                                                                                                                              307:  0x000E   PushNothing             
                                                                                                                                                                              308:  0x1D54   BranchSubr              649

000093          MQTT.BeaconPublish(dataType.DOOR, Door_Status)                                                                                                                309:  0x800B   PushConstU10            11 (0x000B)
                                                                                                                                                                              310:  0x8800   PushLocalI32            Door_Status
                                                                                                                                                                              311:  0x1401   Box                     BoxBoolean
                                                                                                                                                                              312:  0x000E   PushNothing             
                                                                                                                                                                              313:  0x1D80   BranchSubr              698

000094          LedGreen = False                                                                                                                                              314:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              315:  0x080A   PopAndSetDigitalPin     Pin10

000095      End Event                                                                                                                                                         316:  0x0091   Return                  

000096      
                                                                                                                                                                              317:  0x0003                           EventType=SubscriptionDelivery
                                                                                                                                                                              318:  0x0700                           EventCategory=Interrupt
000097      Shared Event SubscriptionDelivery()                                                                                                                               319:  0x1800   EntryPoint              ValTypParams=0, RefTypParams=0
                                                                                                                                                                              320:  0xE023   AllocateStackSpace      ValTypeSize=1, RefTypeSize=3

000098          Dim msg As Message = Lplan.GetDelivery()                                                                                                                      321:  0x00FE   LplanGetDelivery        
                                                                                                                                                                              322:  0x9400   PopLocalRef             msg

000099          'Dim payload As ListOfByte = msg.PayLoad
000100          Dim tmp As Boolean = True 'payload.ExtractFloat(0)                                                                                                            323:  0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              324:  0x9000   PopLocalI32             tmp

000101          Dim tmp_str As String = msg.PayLoad.ToString()                                                                                                                325:  0x8C00   PushLocalRef            msg
                                                                                                                                                                              326:  0xC404   PushFieldRef            Offset=4
                                                                                                                                                                              327:  0x006B   StrFromListOfByte       
                                                                                                                                                                              328:  0x9401   PopLocalRef             tmp_str

000102          Dim topic As String = msg.Topic.ToString()                                                                                                                    329:  0x8C00   PushLocalRef            msg
                                                                                                                                                                              330:  0xC400   PushFieldRef            Offset=0
                                                                                                                                                                              331:  0x9402   PopLocalRef             topic

000103          'MQTT.Publish("Status", "Received Message: " + topic + " : " + tmp_str)
000104          If topic = Sub_Topic Then                                                                                                                                     332:  0x8C02   PushLocalRef            topic
                                                                                                                                                                              333:  0x840C   PushLiteral             12
                                                                                                                                                                              334:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              335:  0x0058   StrCmpEQ                
                                                                                                                                                                              336:  0x3C16   BranchFalse             359

000105              If Boolean.TryConvert(tmp_str, tmp) Then                                                                                                                  337:  0x8C01   PushLocalRef            tmp_str
                                                                                                                                                                              338:  0x8800   PushLocalI32            tmp
                                                                                                                                                                              339:  0x008A   TryCvtStrToBoo          
                                                                                                                                                                              340:  0x9000   PopLocalI32             tmp
                                                                                                                                                                              341:  0x3C0A   BranchFalse             352

000106                  Publish_data = tmp                                                                                                                                    342:  0x8800   PushLocalI32            tmp
                                                                                                                                                                              343:  0x000C   PushGlobal              
                                                                                                                                                                              344:  0xC818   PopFieldU8              Publish_data

000107                  MQTT.Publish("Publish", Publish_data)                                                                                                                 345:  0x844B   PushLiteral             75
                                                                                                                                                                              346:  0x000C   PushGlobal              
                                                                                                                                                                              347:  0xB818   PushFieldU8             Publish_data
                                                                                                                                                                              348:  0x1401   Box                     BoxBoolean
                                                                                                                                                                              349:  0x000E   PushNothing             
                                                                                                                                                                              350:  0x1D2A   BranchSubr              649

                                                                                                                                                                              351:  0x4006   Branch                  358
000108              Else                                                                                                                                                      

000109                  MQTT.Publish("Publish", tmp_str + " :Boolean Conversion failed")                                                                                      352:  0x844B   PushLiteral             75
                                                                                                                                                                              353:  0x8C01   PushLocalRef            tmp_str
                                                                                                                                                                              354:  0x844E   PushLiteral             78
                                                                                                                                                                              355:  0x0056   StrAdd                  
                                                                                                                                                                              356:  0x000E   PushNothing             
                                                                                                                                                                              357:  0x1D03   BranchSubr              617

000110              End If 
                                                                                                                                                                              358:  0x4034   Branch                  411
000111          ElseIf topic = Sub_Topic_Knock_Enable Then                                                                                                                    359:  0x8C02   PushLocalRef            topic
                                                                                                                                                                              360:  0x000C   PushGlobal              
                                                                                                                                                                              361:  0xC400   PushFieldRef            Sub_Topic_Knock_Enable
                                                                                                                                                                              362:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              363:  0x0058   StrCmpEQ                
                                                                                                                                                                              364:  0x3C28   BranchFalse             405

000112              If Boolean.TryConvert(tmp_str, tmp) Then                                                                                                                  365:  0x8C01   PushLocalRef            tmp_str
                                                                                                                                                                              366:  0x8800   PushLocalI32            tmp
                                                                                                                                                                              367:  0x008A   TryCvtStrToBoo          
                                                                                                                                                                              368:  0x9000   PopLocalI32             tmp
                                                                                                                                                                              369:  0x3C1C   BranchFalse             398

000113                  If accel.online Then                                                                                                                                  370:  0x000C   PushGlobal              
                                                                                                                                                                              371:  0xC404   PushFieldRef            accel
                                                                                                                                                                              372:  0xB804   PushFieldU8             online
                                                                                                                                                                              373:  0x3C0F   BranchFalse             389

000114                      MQTT.Publish("KnockEnable", tmp)                                                                                                                  374:  0x842C   PushLiteral             44
                                                                                                                                                                              375:  0x8800   PushLocalI32            tmp
                                                                                                                                                                              376:  0x1401   Box                     BoxBoolean
                                                                                                                                                                              377:  0x000E   PushNothing             
                                                                                                                                                                              378:  0x1D0E   BranchSubr              649

000115                      If tmp Then                                                                                                                                       379:  0x8800   PushLocalI32            tmp
                                                                                                                                                                              380:  0x3C04   BranchFalse             385

000116                          accel.Active()                                                                                                                                381:  0x000C   PushGlobal              
                                                                                                                                                                              382:  0xC404   PushFieldRef            accel
                                                                                                                                                                              383:  0x1F81   BranchSubr              1281

                                                                                                                                                                              384:  0x4003   Branch                  388
000117                      Else                                                                                                                                              

000118                          accel.Standby()                                                                                                                               385:  0x000C   PushGlobal              
                                                                                                                                                                              386:  0xC404   PushFieldRef            accel
                                                                                                                                                                              387:  0x1F73   BranchSubr              1271

000119                      End If
                                                                                                                                                                              388:  0x4008   Branch                  397
000120                  Else                                                                                                                                                  

000121                      MQTT.Publish("Status", "Accel Sensor Offline")                                                                                                    389:  0x841E   PushLiteral             30
                                                                                                                                                                              390:  0x8430   PushLiteral             48
                                                                                                                                                                              391:  0x000E   PushNothing             
                                                                                                                                                                              392:  0x1CE0   BranchSubr              617

000122                      MQTT.Publish("KnockEnable", "False")                                                                                                              393:  0x842C   PushLiteral             44
                                                                                                                                                                              394:  0x8404   PushLiteral             4
                                                                                                                                                                              395:  0x000E   PushNothing             
                                                                                                                                                                              396:  0x1CDC   BranchSubr              617

000123                  End If
                                                                                                                                                                              397:  0x4006   Branch                  404
000124              Else                                                                                                                                                      

000125                  MQTT.Publish("KnockEnable", tmp_str + " :Boolean Conversion failed")                                                                                  398:  0x842C   PushLiteral             44
                                                                                                                                                                              399:  0x8C01   PushLocalRef            tmp_str
                                                                                                                                                                              400:  0x844E   PushLiteral             78
                                                                                                                                                                              401:  0x0056   StrAdd                  
                                                                                                                                                                              402:  0x000E   PushNothing             
                                                                                                                                                                              403:  0x1CD5   BranchSubr              617

000126              End If
                                                                                                                                                                              404:  0x4006   Branch                  411
000127          Else                                                                                                                                                          

000128              MQTT.Publish("Status", topic + " :Unknown Command")                                                                                                       405:  0x841E   PushLiteral             30
                                                                                                                                                                              406:  0x8C02   PushLocalRef            topic
                                                                                                                                                                              407:  0x8456   PushLiteral             86
                                                                                                                                                                              408:  0x0056   StrAdd                  
                                                                                                                                                                              409:  0x000E   PushNothing             
                                                                                                                                                                              410:  0x1CCE   BranchSubr              617

000129          End If
000130      End Event                                                                                                                                                         411:  0x0091   Return                  

000131      
                                                                                                                                                                              412:  0x0001                           TimeValue=1
                                                                                                                                                                              413:  0x0400                           EventCategory=TimeInMinutes
000132      Shared Event Publish() RaiseEvent Every 1 Minutes                                                                                                                 414:  0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000133          LedGreen = True                                                                                                                                               415:  0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              416:  0x080A   PopAndSetDigitalPin     Pin10

000134          Select data                                                                                                                                                   417:  0x000C   PushGlobal              
                                                                                                                                                                              418:  0xC01C   PushFieldI32            data
                                                                                                                                                                              419:  0x0122   CaseComputed            
                                                                                                                                                                              420:  0x0002                           CaseCommonClass=Byte
                                                                                                                                                                              421:  0x0004                           NumberOfCaseEntries=4
                                                                                                                                                                              422:  0x0062                           CaseElseBranch=521
                                                                                                                                                                              423:  0x0002                           CaseValue=2
                                                                                                                                                                              424:  0x0008                           CaseBranch=431
                                                                                                                                                                              425:  0x0003                           CaseValue=3
                                                                                                                                                                              426:  0x0022                           CaseBranch=457
                                                                                                                                                                              427:  0x0004                           CaseValue=4
                                                                                                                                                                              428:  0x0037                           CaseBranch=478
                                                                                                                                                                              429:  0x000B                           CaseValue=11
                                                                                                                                                                              430:  0x004D                           CaseBranch=500

000135              Case dataType.UPTIME                                                                                                                                      431:  0xE020   AllocateStackSpace      ValTypeSize=1, RefTypeSize=0

000136                  Dim Uptime As Integer = Device.Uptime()                                                                                                               432:  0x00F9   DeviceUptime            
                                                                                                                                                                              433:  0x9000   PopLocalI32             Uptime

000137                  If Publish_data Then                                                                                                                                  434:  0x000C   PushGlobal              
                                                                                                                                                                              435:  0xB818   PushFieldU8             Publish_data
                                                                                                                                                                              436:  0x3C05   BranchFalse             442

000138                      MQTT.Publish("Uptime", Uptime)                                                                                                                    437:  0x845C   PushLiteral             92
                                                                                                                                                                              438:  0x8800   PushLocalI32            Uptime
                                                                                                                                                                              439:  0x1404   Box                     BoxInteger
                                                                                                                                                                              440:  0x000E   PushNothing             
                                                                                                                                                                              441:  0x1CCF   BranchSubr              649

000139                  End If
000140                  If Uptime < Short.MaxValue Then                                                                                                                       442:  0x8800   PushLocalI32            Uptime
                                                                                                                                                                              443:  0x0110   PushConstI32            32767 (0x00007FFF)
                                                                                                                                                                              444:  0x7FFF                           
                                                                                                                                                                              445:  0x0000                           
                                                                                                                                                                              446:  0x3405   BranchGE                452

000141                      MQTT.BeaconPublish(dataType.UPTIME, Uptime)                                                                                                       447:  0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              448:  0x8800   PushLocalI32            Uptime
                                                                                                                                                                              449:  0x1404   Box                     BoxInteger
                                                                                                                                                                              450:  0x000E   PushNothing             
                                                                                                                                                                              451:  0x1CF6   BranchSubr              698

000142                  End If
000143                  data = dataType.BATTVOLTAGE                                                                                                                           452:  0x8003   PushConstU10            3 (0x0003)
                                                                                                                                                                              453:  0x000C   PushGlobal              
                                                                                                                                                                              454:  0xD01C   PopFieldI32             data

                                                                                                                                                                              455:  0xE420   FreeStackSpace          ValTypeSize=1, RefTypeSize=0
                                                                                                                                                                              456:  0x4047   Branch                  528
000144              Case dataType.BATTVOLTAGE                                                                                                                                 457:  0xE020   AllocateStackSpace      ValTypeSize=1, RefTypeSize=0

000145                  Dim BattVolt As Integer = Device.BatteryVoltage()                                                                                                     458:  0x00ED   DeviceBatteryVoltage    
                                                                                                                                                                              459:  0x9000   PopLocalI32             BattVolt

000146                  If Publish_data Then                                                                                                                                  460:  0x000C   PushGlobal              
                                                                                                                                                                              461:  0xB818   PushFieldU8             Publish_data
                                                                                                                                                                              462:  0x3C05   BranchFalse             468

000147                      MQTT.Publish("BatteryVoltage", BattVolt)                                                                                                          463:  0x845F   PushLiteral             95
                                                                                                                                                                              464:  0x8800   PushLocalI32            BattVolt
                                                                                                                                                                              465:  0x1404   Box                     BoxInteger
                                                                                                                                                                              466:  0x000E   PushNothing             
                                                                                                                                                                              467:  0x1CB5   BranchSubr              649

000148                  End If
000149                  MQTT.BeaconPublish(dataType.BATTVOLTAGE, BattVolt)                                                                                                    468:  0x8003   PushConstU10            3 (0x0003)
                                                                                                                                                                              469:  0x8800   PushLocalI32            BattVolt
                                                                                                                                                                              470:  0x1404   Box                     BoxInteger
                                                                                                                                                                              471:  0x000E   PushNothing             
                                                                                                                                                                              472:  0x1CE1   BranchSubr              698

000150                  data = dataType.TEMPERATURE                                                                                                                           473:  0x8004   PushConstU10            4 (0x0004)
                                                                                                                                                                              474:  0x000C   PushGlobal              
                                                                                                                                                                              475:  0xD01C   PopFieldI32             data

                                                                                                                                                                              476:  0xE420   FreeStackSpace          ValTypeSize=1, RefTypeSize=0
                                                                                                                                                                              477:  0x4032   Branch                  528
000151              Case dataType.TEMPERATURE                                                                                                                                 478:  0xE020   AllocateStackSpace      ValTypeSize=1, RefTypeSize=0

000152                  Dim TempC As Float = TempSensor.GetTemp                                                                                                               479:  0x000E   PushNothing             
                                                                                                                                                                              480:  0x1C34   BranchSubr              533
                                                                                                                                                                              481:  0x9000   PopLocalI32             TempC

000153                  If Publish_data Then                                                                                                                                  482:  0x000C   PushGlobal              
                                                                                                                                                                              483:  0xB818   PushFieldU8             Publish_data
                                                                                                                                                                              484:  0x3C05   BranchFalse             490

000154                      MQTT.Publish("Temperature", TempC)                                                                                                                485:  0x8464   PushLiteral             100
                                                                                                                                                                              486:  0x8800   PushLocalI32            TempC
                                                                                                                                                                              487:  0x1406   Box                     BoxFloat
                                                                                                                                                                              488:  0x000E   PushNothing             
                                                                                                                                                                              489:  0x1C9F   BranchSubr              649

000155                  End If
000156                  MQTT.BeaconPublish(dataType.TEMPERATURE, TempC)                                                                                                       490:  0x8004   PushConstU10            4 (0x0004)
                                                                                                                                                                              491:  0x8800   PushLocalI32            TempC
                                                                                                                                                                              492:  0x1406   Box                     BoxFloat
                                                                                                                                                                              493:  0x000E   PushNothing             
                                                                                                                                                                              494:  0x1CCB   BranchSubr              698

000157                  data = dataType.DOOR                                                                                                                                  495:  0x800B   PushConstU10            11 (0x000B)
                                                                                                                                                                              496:  0x000C   PushGlobal              
                                                                                                                                                                              497:  0xD01C   PopFieldI32             data

                                                                                                                                                                              498:  0xE420   FreeStackSpace          ValTypeSize=1, RefTypeSize=0
                                                                                                                                                                              499:  0x401C   Branch                  528
000158              Case dataType.DOOR                                                                                                                                        500:  0xE020   AllocateStackSpace      ValTypeSize=1, RefTypeSize=0

000159                  Dim Door_Status As Boolean = ReedSwitch                                                                                                               501:  0x0C0C   GetAndPushDigitalPin    Pin12
                                                                                                                                                                              502:  0x9000   PopLocalI32             Door_Status

000160                  If Publish_data Then                                                                                                                                  503:  0x000C   PushGlobal              
                                                                                                                                                                              504:  0xB818   PushFieldU8             Publish_data
                                                                                                                                                                              505:  0x3C05   BranchFalse             511

000161                      MQTT.Publish("Door", Door_Status) //True = OPEN False = CLOSED                                                                                    506:  0x8448   PushLiteral             72
                                                                                                                                                                              507:  0x8800   PushLocalI32            Door_Status
                                                                                                                                                                              508:  0x1401   Box                     BoxBoolean
                                                                                                                                                                              509:  0x000E   PushNothing             
                                                                                                                                                                              510:  0x1C8A   BranchSubr              649

000162                  End If
000163                  MQTT.BeaconPublish(dataType.DOOR, Door_Status)                                                                                                        511:  0x800B   PushConstU10            11 (0x000B)
                                                                                                                                                                              512:  0x8800   PushLocalI32            Door_Status
                                                                                                                                                                              513:  0x1401   Box                     BoxBoolean
                                                                                                                                                                              514:  0x000E   PushNothing             
                                                                                                                                                                              515:  0x1CB6   BranchSubr              698

000164                  data = dataType.UPTIME                                                                                                                                516:  0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              517:  0x000C   PushGlobal              
                                                                                                                                                                              518:  0xD01C   PopFieldI32             data

                                                                                                                                                                              519:  0xE420   FreeStackSpace          ValTypeSize=1, RefTypeSize=0
                                                                                                                                                                              520:  0x4007   Branch                  528
000165              Case Else                                                                                                                                                 

000166                  MQTT.Publish("Status", "OnLine")                                                                                                                      521:  0x841E   PushLiteral             30
                                                                                                                                                                              522:  0x8468   PushLiteral             104
                                                                                                                                                                              523:  0x000E   PushNothing             
                                                                                                                                                                              524:  0x1C5C   BranchSubr              617

000167                  data = dataType.UPTIME                                                                                                                                525:  0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              526:  0x000C   PushGlobal              
                                                                                                                                                                              527:  0xD01C   PopFieldI32             data

000168          End Select
000169          LedGreen = False                                                                                                                                              528:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              529:  0x080A   PopAndSetDigitalPin     Pin10

000170      End Event                                                                                                                                                         530:  0x0091   Return                  

000171  End Class                                                                                                                                                             111:  0x0097   ReturnMe                


****** BLOCKS and VARIABLES for Main
    Block Class (Line 10:171)
        Main            Me              (ReadOnly, Offset=0)
        Object          MyBase          (ReadOnly, Offset=0)
        String          Version         (Literal="V1.01")
        dataType        data            (SharedValTypVariableOffset=28)
        String          Sub_Topic       (Literal="MCThings/Publish")
        String          Sub_Topic_Knock_(SharedRefTypVariableOffset=0)
        Boolean         Publish_data    (SharedValTypVariableOffset=24)
        MMA8652         accel           (SharedRefTypVariableOffset=4)
        Integer         TimeSinceKnockTr(SharedValTypVariableOffset=32)
        Integer         TimeSinceDoorClo(SharedValTypVariableOffset=36)
        Block Event Boot (Line 21:39)
            Block If Then  (Line 30:35)
            End Block
            Block Else (Line 35:38)
            End Block
        End Block
        Block Event NewGateway (Line 41:44)
        End Block
        Block Event AccelerometerInt1 (Line 46:84)
            Byte            int_source      (LocalValTypVariableOffset=0)
            Block If Then  (Line 48:61)
                Block If Then  (Line 51:55)
                End Block
                Block Else (Line 55:59)
                End Block
            End Block
            Block If Then  (Line 62:83)
                Block If Then  (Line 64:82)
                    Block If Then  (Line 67:80)
                        Block If Then  (Line 69:79)
                            Integer         timeSinceLastTra(LocalValTypVariableOffset=1)
                            Block If Then  (Line 72:78)
                                Block If Then  (Line 74:77)
                                End Block
                            End Block
                        End Block
                    End Block
                End Block
            End Block
        End Block
        Block Event ReedSwitchChanged (Line 86:95)
            Boolean         Door_Status     (LocalValTypVariableOffset=0)
        End Block
        Block Event SubscriptionDelivery (Line 97:130)
            Message         msg             (LocalRefTypVariableOffset=0)
            Boolean         tmp             (LocalValTypVariableOffset=0)
            String          tmp_str         (LocalRefTypVariableOffset=1)
            String          topic           (LocalRefTypVariableOffset=2)
            Block If Then  (Line 104:111)
                Block If Then  (Line 105:108)
                End Block
                Block Else (Line 108:110)
                End Block
            End Block
            Block ElseIf (Line 111:127)
                Block If Then  (Line 112:124)
                    Block If Then  (Line 113:120)
                        Block If Then  (Line 115:117)
                        End Block
                        Block Else (Line 117:119)
                        End Block
                    End Block
                    Block Else (Line 120:123)
                    End Block
                End Block
                Block Else (Line 124:126)
                End Block
            End Block
            Block Else (Line 127:129)
            End Block
        End Block
        Block Event Publish (Line 132:170)
        End Block
        Total Size of Member data including base classes = 0.
    End Block


*************************************************************************************************************

000001  Class TempSensor                                                                                                                                                      531:  0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000002      // Function returns the temperature in degree celcius or 
000003      // Float.NaN if something is wrong
000004      Shared Function GetTemp() As Float                                                                                                                                533:  0x1800   EntryPoint              ValTypParams=0, RefTypParams=0
                                                                                                                                                                              534:  0xE022   AllocateStackSpace      ValTypeSize=1, RefTypeSize=2

000005          // Define the properties of the I2C peripheral and device address
000006          Dim sensor As I2c
000007          sensor = I2c.Create(250000, Pin.SCL, Pin.SDA, 0x48)                                                                                                           535:  0x0110   PushConstI32            250000 (0x0003D090)
                                                                                                                                                                              536:  0xD090                           
                                                                                                                                                                              537:  0x0003                           
                                                                                                                                                                              538:  0x800D   PushConstU10            13 (0x000D)
                                                                                                                                                                              539:  0x800E   PushConstU10            14 (0x000E)
                                                                                                                                                                              540:  0x8048   PushConstU10            72 (0x0048)
                                                                                                                                                                              541:  0x803B   PushConstU10            59 (0x003B)
                                                                                                                                                                              542:  0x0010   ClassNew                
                                                                                                                                                                              543:  0x9400   PopLocalRef             sensor

000008          
000009          // Power up the sensor and give it some time to settle
000010          Device.EnableTempSensor()                                                                                                                                     544:  0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              545:  0x00F0   DeviceEnableTemp        

000011          Thread.Sleep(40000) // See page 13 of the datasheet                                                                                                           546:  0x0110   PushConstI32            40000 (0x00009C40)
                                                                                                                                                                              547:  0x9C40                           
                                                                                                                                                                              548:  0x0000                           
                                                                                                                                                                              549:  0x00D5   ThreadSleep             
                                                                                                                                                                              550:  0xE420   FreeStackSpace          ValTypeSize=1, RefTypeSize=0

000012          
000013          // Read the sensor (only 2 bytes to read
000014          Dim res As ListOfByte = sensor.Read(2)                                                                                                                        551:  0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              552:  0x8C00   PushLocalRef            sensor
                                                                                                                                                                              553:  0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              554:  0x00E0   I2cDeviceRead           
                                                                                                                                                                              555:  0x9401   PopLocalRef             res

000015          
000016          // See Tmp102 documentation how to interpret the data (page 8)
000017          Dim temp As Float = Float.NaN                                                                                                                                 556:  0x0110   PushConstI32            -4194304 (0xFFC00000)
                                                                                                                                                                              557:  0x0000                           
                                                                                                                                                                              558:  0xFFC0                           
                                                                                                                                                                              559:  0x9000   PopLocalI32             temp

000018          If res <> Nothing Then                                                                                                                                        560:  0x8C01   PushLocalRef            res
                                                                                                                                                                              561:  0x000E   PushNothing             
                                                                                                                                                                              562:  0x000B   RefCmpNE                
                                                                                                                                                                              563:  0x3C16   BranchFalse             586
                                                                                                                                                                              564:  0xE020   AllocateStackSpace      ValTypeSize=1, RefTypeSize=0

000019              // Shift the partial part to the right nibble
000020              Dim part As Float = res(1) >> 4                                                                                                                           565:  0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              566:  0x8C01   PushLocalRef            res
                                                                                                                                                                              567:  0x00B4   ListItemGet             
                                                                                                                                                                              568:  0x8004   PushConstU10            4 (0x0004)
                                                                                                                                                                              569:  0x002F   IntShr                  
                                                                                                                                                                              570:  0x007E   CvtIntToFlt             
                                                                                                                                                                              571:  0x9001   PopLocalI32             part

000021              // Temperature partial is 1/16*n where n is between 0 and 15            
000022              part = part / 16                                                                                                                                          572:  0x8801   PushLocalI32            part
                                                                                                                                                                              573:  0xEA10   PushConstFlt            16.0
                                                                                                                                                                              574:  0x003B   FltDiv                  
                                                                                                                                                                              575:  0x9001   PopLocalI32             part

000023              // Sign extend the byte to an integer
000024              temp = res(0).SignExtend() + part                                                                                                                         576:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              577:  0x8C01   PushLocalRef            res
                                                                                                                                                                              578:  0x00B4   ListItemGet             
                                                                                                                                                                              579:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              580:  0x0005   SignExtend              
                                                                                                                                                                              581:  0x8801   PushLocalI32            part
                                                                                                                                                                              582:  0x0078   CvtIntToFlt1            
                                                                                                                                                                              583:  0x0039   FltAdd                  
                                                                                                                                                                              584:  0x9000   PopLocalI32             temp

                                                                                                                                                                              585:  0xE420   FreeStackSpace          ValTypeSize=1, RefTypeSize=0
000025          End If                                                                                                                                                        

000026          
000027          // power off
000028          Device.DisableTempSensor()                                                                                                                                    586:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              587:  0x00F0   DeviceEnableTemp        

000029          Return temp                                                                                                                                                   588:  0x8800   PushLocalI32            temp
                                                                                                                                                                              589:  0x0092   ReturnValType           

000030      End Function                                                                                                                                                      590:  0x0093   Return0                 

000031      
000032      Shared Function GetDieTemp() As Float                                                                                                                             591:  0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000033          // Just get the temperature and return
000034          Return Device.TempDie                                                                                                                                         592:  0x00F7   DeviceTempDie           
                                                                                                                                                                              593:  0x0092   ReturnValType           

000035      End Function                                                                                                                                                      594:  0x0093   Return0                 

000036      
000037      Shared Function ToFarenheit(celcius As Float) As Float                                                                                                            595:  0x1810   EntryPoint              ValTypParams=1, RefTypParams=0

000038          Return (celcius * 9) / 5 + 32                                                                                                                                 596:  0x8800   PushLocalI32            celcius
                                                                                                                                                                              597:  0xEA09   PushConstFlt            9.0
                                                                                                                                                                              598:  0x003C   FltMul                  
                                                                                                                                                                              599:  0xEA05   PushConstFlt            5.0
                                                                                                                                                                              600:  0x003B   FltDiv                  
                                                                                                                                                                              601:  0xEA20   PushConstFlt            32.0
                                                                                                                                                                              602:  0x0039   FltAdd                  
                                                                                                                                                                              603:  0x0092   ReturnValType           

000039      End Function                                                                                                                                                      604:  0x0093   Return0                 

000040      
000041      Shared Function ToCelcius(farenheit As Float) As Float                                                                                                            605:  0x1810   EntryPoint              ValTypParams=1, RefTypParams=0

000042          Return (farenheit - 32) * 5 / 9                                                                                                                               606:  0x8800   PushLocalI32            farenheit
                                                                                                                                                                              607:  0xEA20   PushConstFlt            32.0
                                                                                                                                                                              608:  0x003F   FltSub                  
                                                                                                                                                                              609:  0xEA05   PushConstFlt            5.0
                                                                                                                                                                              610:  0x003C   FltMul                  
                                                                                                                                                                              611:  0xEA09   PushConstFlt            9.0
                                                                                                                                                                              612:  0x003B   FltDiv                  
                                                                                                                                                                              613:  0x0092   ReturnValType           

000043      End Function                                                                                                                                                      614:  0x0093   Return0                 

000044      
000045  End Class                                                                                                                                                             532:  0x0097   ReturnMe                


****** BLOCKS and VARIABLES for TempSensor
    Block Class (Line 1:45)
        TempSensor      Me              (ReadOnly, Offset=0)
        Object          MyBase          (ReadOnly, Offset=0)
        Block Function GetTemp (Line 4:30)
            I2c             sensor          (LocalRefTypVariableOffset=0)
            ListOfByte      res             (LocalRefTypVariableOffset=1)
            Float           temp            (LocalValTypVariableOffset=0)
            Block If Then  (Line 18:25)
                Float           part            (LocalValTypVariableOffset=1)
            End Block
        End Block
        Block Function GetDieTemp (Line 32:35)
        End Block
        Block Function ToFarenheit (Line 37:39)
            Float           celcius         (LocalValTypVariableOffset=0)
        End Block
        Block Function ToCelcius (Line 41:43)
            Float           farenheit       (LocalValTypVariableOffset=0)
        End Block
        Total Size of Member data including base classes = 0.
    End Block


*************************************************************************************************************

000003  Enum dataType As Byte
000004      NONE = 0
000005      VERSION = 1 //default beacon data for MQTT
000006      UPTIME = 2
000007      BATTVOLTAGE = 3
000008      TEMPERATURE = 4
000009      TEMPERATURE2 = 5
000010      HUMIDITY = 6
000011      DEWPOINT = 7
000012      PRESSURE = 8
000013      ALTITUDE = 9
000014      MOTION = 10
000015      DOOR = 11
000016      KNOCK = 12
000017  End Enum

****** BLOCKS and VARIABLES for dataType
    Block Struct (Line 3:17)
        dataType        NONE            (Literal=0)
        dataType        VERSION         (Literal=1)
        dataType        UPTIME          (Literal=2)
        dataType        BATTVOLTAGE     (Literal=3)
        dataType        TEMPERATURE     (Literal=4)
        dataType        TEMPERATURE2    (Literal=5)
        dataType        HUMIDITY        (Literal=6)
        dataType        DEWPOINT        (Literal=7)
        dataType        PRESSURE        (Literal=8)
        dataType        ALTITUDE        (Literal=9)
        dataType        MOTION          (Literal=10)
        dataType        DOOR            (Literal=11)
        dataType        KNOCK           (Literal=12)
        Total Size of Member data including base classes = 0.
    End Block


*************************************************************************************************************

000019  Class MQTT                                                                                                                                                            615:  0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000020      Shared mcUIDString As String
000021      
000022      Shared Sub Publish(topic As String, value As String)                                                                                                              617:  0x1802   EntryPoint              ValTypParams=0, RefTypParams=2
                                                                                                                                                                              618:  0xE001   AllocateStackSpace      ValTypeSize=0, RefTypeSize=1

000023          If mcUIDString = Nothing Then                                                                                                                                 619:  0x000C   PushGlobal              
                                                                                                                                                                              620:  0xC408   PushFieldRef            mcUIDString
                                                                                                                                                                              621:  0x000E   PushNothing             
                                                                                                                                                                              622:  0x000A   RefCmpEQ                
                                                                                                                                                                              623:  0x3C06   BranchFalse             630

000024              mcUIDString = Device.mcUID().ToString("X8")                                                                                                               624:  0x8416   PushLiteral             22
                                                                                                                                                                              625:  0x00F8   DeviceUID               
                                                                                                                                                                              626:  0x8004   PushConstU10            4 (0x0004)
                                                                                                                                                                              627:  0x0069   StrFormat               
                                                                                                                                                                              628:  0x000C   PushGlobal              
                                                                                                                                                                              629:  0xD408   PopFieldRef             mcUIDString

000025          End If
000026          Dim text_string As ListOfByte = New ListOfByte()                                                                                                              630:  0x800C   PushConstU10            12 (0x000C)
                                                                                                                                                                              631:  0x0010   ClassNew                
                                                                                                                                                                              632:  0x9402   PopLocalRef             text_string

000027          text_string.Add(value)                                                                                                                                        633:  0x8C01   PushLocalRef            value
                                                                                                                                                                              634:  0x8C02   PushLocalRef            text_string
                                                                                                                                                                              635:  0x00A6   ListAddString           

000028          Lplan.Publish("MCThings/" + mcUIDString + "/" + topic, text_string)                                                                                           636:  0x8412   PushLiteral             18
                                                                                                                                                                              637:  0x000C   PushGlobal              
                                                                                                                                                                              638:  0xC408   PushFieldRef            mcUIDString
                                                                                                                                                                              639:  0x0056   StrAdd                  
                                                                                                                                                                              640:  0x846B   PushLiteral             107
                                                                                                                                                                              641:  0x0056   StrAdd                  
                                                                                                                                                                              642:  0x8C00   PushLocalRef            topic
                                                                                                                                                                              643:  0x0056   StrAdd                  
                                                                                                                                                                              644:  0x8C02   PushLocalRef            text_string
                                                                                                                                                                              645:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              646:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              647:  0x0101   LplanPublish            

000029      End Sub                                                                                                                                                           648:  0x0091   Return                  

000030      
000031      Shared Sub Publish(topic As String, value As Object)                                                                                                              649:  0x1802   EntryPoint              ValTypParams=0, RefTypParams=2
                                                                                                                                                                              650:  0xE002   AllocateStackSpace      ValTypeSize=0, RefTypeSize=2

000032          Dim text As String = value.ToString()                                                                                                                         651:  0x8C01   PushLocalRef            value
                                                                                                                                                                              652:  0x0081   CvtObjToStr             
                                                                                                                                                                              653:  0x9402   PopLocalRef             text

000033          If mcUIDString = Nothing Then                                                                                                                                 654:  0x000C   PushGlobal              
                                                                                                                                                                              655:  0xC408   PushFieldRef            mcUIDString
                                                                                                                                                                              656:  0x000E   PushNothing             
                                                                                                                                                                              657:  0x000A   RefCmpEQ                
                                                                                                                                                                              658:  0x3C06   BranchFalse             665

000034              mcUIDString = Device.mcUID().ToString("X8")                                                                                                               659:  0x8416   PushLiteral             22
                                                                                                                                                                              660:  0x00F8   DeviceUID               
                                                                                                                                                                              661:  0x8004   PushConstU10            4 (0x0004)
                                                                                                                                                                              662:  0x0069   StrFormat               
                                                                                                                                                                              663:  0x000C   PushGlobal              
                                                                                                                                                                              664:  0xD408   PopFieldRef             mcUIDString

000035          End If
000036          Dim text_string As ListOfByte = New ListOfByte()                                                                                                              665:  0x800C   PushConstU10            12 (0x000C)
                                                                                                                                                                              666:  0x0010   ClassNew                
                                                                                                                                                                              667:  0x9403   PopLocalRef             text_string

000037          text_string.Add(text)                                                                                                                                         668:  0x8C02   PushLocalRef            text
                                                                                                                                                                              669:  0x8C03   PushLocalRef            text_string
                                                                                                                                                                              670:  0x00A6   ListAddString           

000038          Lplan.Publish("MCThings/" + mcUIDString + "/" + topic, text_string)                                                                                           671:  0x8412   PushLiteral             18
                                                                                                                                                                              672:  0x000C   PushGlobal              
                                                                                                                                                                              673:  0xC408   PushFieldRef            mcUIDString
                                                                                                                                                                              674:  0x0056   StrAdd                  
                                                                                                                                                                              675:  0x846B   PushLiteral             107
                                                                                                                                                                              676:  0x0056   StrAdd                  
                                                                                                                                                                              677:  0x8C00   PushLocalRef            topic
                                                                                                                                                                              678:  0x0056   StrAdd                  
                                                                                                                                                                              679:  0x8C03   PushLocalRef            text_string
                                                                                                                                                                              680:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              681:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              682:  0x0101   LplanPublish            

000039      End Sub                                                                                                                                                           683:  0x0091   Return                  

000040      
000041      Shared Sub Publish_exact(topic As String, text As String)                                                                                                         684:  0x1802   EntryPoint              ValTypParams=0, RefTypParams=2
                                                                                                                                                                              685:  0xE001   AllocateStackSpace      ValTypeSize=0, RefTypeSize=1

000042          Dim text_String As ListOfByte = New ListOfByte()                                                                                                              686:  0x800C   PushConstU10            12 (0x000C)
                                                                                                                                                                              687:  0x0010   ClassNew                
                                                                                                                                                                              688:  0x9402   PopLocalRef             text_String

000043          text_String.Add(text)                                                                                                                                         689:  0x8C01   PushLocalRef            text
                                                                                                                                                                              690:  0x8C02   PushLocalRef            text_String
                                                                                                                                                                              691:  0x00A6   ListAddString           

000044          Lplan.Publish(topic, text_String)                                                                                                                             692:  0x8C00   PushLocalRef            topic
                                                                                                                                                                              693:  0x8C02   PushLocalRef            text_String
                                                                                                                                                                              694:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              695:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              696:  0x0101   LplanPublish            

000045      End Sub                                                                                                                                                           697:  0x0091   Return                  

000046      
000047      //**************************************************************************/
000048      //*!
000049      //    Encodes Float or Integer into 4 bytes of beacon data
000050      //    encoding is - byte 0 is data type (numeric value)
000051      //    Integer as Short (2 bytes) 
000052      //    Fraction as byte (1 byte)
000053      //*/
000054      //**************************************************************************/
000055      Shared Sub BeaconPublish(data_Type As Byte, value As Object)                                                                                                      698:  0x1811   EntryPoint              ValTypParams=1, RefTypParams=1
                                                                                                                                                                              699:  0xE041   AllocateStackSpace      ValTypeSize=2, RefTypeSize=1

000056          Dim fraction As Byte = 0
000057          Dim data As Short = 0
000058          If value Is Float Then                                                                                                                                        700:  0x8C00   PushLocalRef            value
                                                                                                                                                                              701:  0x8006   PushConstU10            6 (0x0006)
                                                                                                                                                                              702:  0x0006   ClassIs                 
                                                                                                                                                                              703:  0x3C12   BranchFalse             722

000059              data = value.Cast(Float).ToShort() //get integer part (16 bit only)                                                                                       704:  0x8006   PushConstU10            6 (0x0006)
                                                                                                                                                                              705:  0x8C00   PushLocalRef            value
                                                                                                                                                                              706:  0x0007   Cast                    
                                                                                                                                                                              707:  0x007B   CvtFltToInt             
                                                                                                                                                                              708:  0x007F   CvtIntToSho             
                                                                                                                                                                              709:  0x9002   PopLocalI32             data

000060              fraction = ((value.Cast(Float) - data) * 100.0).ToByte()                                                                                                  710:  0x8006   PushConstU10            6 (0x0006)
                                                                                                                                                                              711:  0x8C00   PushLocalRef            value
                                                                                                                                                                              712:  0x0007   Cast                    
                                                                                                                                                                              713:  0x8802   PushLocalI32            data
                                                                                                                                                                              714:  0x007E   CvtIntToFlt             
                                                                                                                                                                              715:  0x003F   FltSub                  
                                                                                                                                                                              716:  0xEA64   PushConstFlt            100.0
                                                                                                                                                                              717:  0x003C   FltMul                  
                                                                                                                                                                              718:  0x007B   CvtFltToInt             
                                                                                                                                                                              719:  0x007D   CvtIntToByt             
                                                                                                                                                                              720:  0x9001   PopLocalI32             fraction

                                                                                                                                                                              721:  0x4029   Branch                  763
000061          ElseIf value Is Integer Then                                                                                                                                  722:  0x8C00   PushLocalRef            value
                                                                                                                                                                              723:  0x8004   PushConstU10            4 (0x0004)
                                                                                                                                                                              724:  0x0006   ClassIs                 
                                                                                                                                                                              725:  0x3C06   BranchFalse             732

000062              data = value.Cast(Integer).ToShort() //get integer part (16 bit only)                                                                                     726:  0x8004   PushConstU10            4 (0x0004)
                                                                                                                                                                              727:  0x8C00   PushLocalRef            value
                                                                                                                                                                              728:  0x0007   Cast                    
                                                                                                                                                                              729:  0x007F   CvtIntToSho             
                                                                                                                                                                              730:  0x9002   PopLocalI32             data

                                                                                                                                                                              731:  0x401F   Branch                  763
000063          ElseIf value Is Short Then                                                                                                                                    732:  0x8C00   PushLocalRef            value
                                                                                                                                                                              733:  0x8003   PushConstU10            3 (0x0003)
                                                                                                                                                                              734:  0x0006   ClassIs                 
                                                                                                                                                                              735:  0x3C05   BranchFalse             741

000064              data = value.Cast(Short)                                                                                                                                  736:  0x8003   PushConstU10            3 (0x0003)
                                                                                                                                                                              737:  0x8C00   PushLocalRef            value
                                                                                                                                                                              738:  0x0007   Cast                    
                                                                                                                                                                              739:  0x9002   PopLocalI32             data

                                                                                                                                                                              740:  0x4016   Branch                  763
000065          ElseIf value Is Byte Then                                                                                                                                     741:  0x8C00   PushLocalRef            value
                                                                                                                                                                              742:  0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              743:  0x0006   ClassIs                 
                                                                                                                                                                              744:  0x3C05   BranchFalse             750

000066              data = value.Cast(Byte).ToShort() //get integer part (16 bit only)                                                                                        745:  0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              746:  0x8C00   PushLocalRef            value
                                                                                                                                                                              747:  0x0007   Cast                    
                                                                                                                                                                              748:  0x9002   PopLocalI32             data

                                                                                                                                                                              749:  0x400D   Branch                  763
000067          ElseIf value Is Boolean Then                                                                                                                                  750:  0x8C00   PushLocalRef            value
                                                                                                                                                                              751:  0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              752:  0x0006   ClassIs                 
                                                                                                                                                                              753:  0x3C09   BranchFalse             763
                                                                                                                                                                              754:  0xE020   AllocateStackSpace      ValTypeSize=1, RefTypeSize=0

000068              Dim on As Boolean = value.Cast(Boolean)                                                                                                                   755:  0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              756:  0x8C00   PushLocalRef            value
                                                                                                                                                                              757:  0x0007   Cast                    
                                                                                                                                                                              758:  0x9003   PopLocalI32             on

000069              If on Then                                                                                                                                                759:  0x8803   PushLocalI32            on
                                                                                                                                                                              760:  0x3C01   BranchFalse             762

000070                  data = 1                                                                                                                                              761:  0x6402   Const1toLocalI32        data

000071              End If
                                                                                                                                                                              762:  0xE420   FreeStackSpace          ValTypeSize=1, RefTypeSize=0
000072          End If                                                                                                                                                        

000073          Dim beaconData As ListOfByte = New ListOfByte()                                                                                                               763:  0x800C   PushConstU10            12 (0x000C)
                                                                                                                                                                              764:  0x0010   ClassNew                
                                                                                                                                                                              765:  0x9401   PopLocalRef             beaconData

000074          beaconData.Add(data_Type)                                                                                                                                     766:  0x8800   PushLocalI32            data_Type
                                                                                                                                                                              767:  0x8C01   PushLocalRef            beaconData
                                                                                                                                                                              768:  0x00A3   ListAdd                 

000075          beaconData.AddShort(data)                                                                                                                                     769:  0x8802   PushLocalI32            data
                                                                                                                                                                              770:  0x8C01   PushLocalRef            beaconData
                                                                                                                                                                              771:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              772:  0x00A7   ListAdd2Byte            

000076          beaconData.Add(fraction)                                                                                                                                      773:  0x8801   PushLocalI32            fraction
                                                                                                                                                                              774:  0x8C01   PushLocalRef            beaconData
                                                                                                                                                                              775:  0x00A3   ListAdd                 

000077          Lplan.SetBeaconData(beaconData)                                                                                                                               776:  0x8C01   PushLocalRef            beaconData
                                                                                                                                                                              777:  0x0016   PushConstMinus1         
                                                                                                                                                                              778:  0x0105   LplanSetBeacon          

000078          Lplan.SendBeacon()                                                                                                                                            779:  0x0104   LplanSendBeacon         

000079          //Lplan.BeaconNow () //does not seem to work
000080      End Sub                                                                                                                                                           780:  0x0091   Return                  

000081      
000082      Shared Sub Subscribe(topic As String)                                                                                                                             781:  0x1801   EntryPoint              ValTypParams=0, RefTypParams=1

000083          Lplan.Subscribe(topic)                                                                                                                                        782:  0x8C00   PushLocalRef            topic
                                                                                                                                                                              783:  0x0102   LplanSubscribe          

000084      End Sub                                                                                                                                                           784:  0x0091   Return                  

000085      
000086  End Class                                                                                                                                                             616:  0x0097   ReturnMe                


****** BLOCKS and VARIABLES for MQTT
    Block Class (Line 19:86)
        MQTT            Me              (ReadOnly, Offset=0)
        Object          MyBase          (ReadOnly, Offset=0)
        String          mcUIDString     (SharedRefTypVariableOffset=8)
        Block Sub Publish (Line 22:29)
            ListOfByte      text_string     (LocalRefTypVariableOffset=2)
            String          topic           (LocalRefTypVariableOffset=0)
            String          value           (LocalRefTypVariableOffset=1)
            Block If Then  (Line 23:25)
            End Block
        End Block
        Block Sub Publish (Line 31:39)
            String          text            (LocalRefTypVariableOffset=2)
            ListOfByte      text_string     (LocalRefTypVariableOffset=3)
            String          topic           (LocalRefTypVariableOffset=0)
            Object          value           (LocalRefTypVariableOffset=1)
            Block If Then  (Line 33:35)
            End Block
        End Block
        Block Sub Publish_exact (Line 41:45)
            ListOfByte      text_String     (LocalRefTypVariableOffset=2)
            String          topic           (LocalRefTypVariableOffset=0)
            String          text            (LocalRefTypVariableOffset=1)
        End Block
        Block Sub BeaconPublish (Line 55:80)
            Byte            fraction        (LocalValTypVariableOffset=1)
            Short           data            (LocalValTypVariableOffset=2)
            ListOfByte      beaconData      (LocalRefTypVariableOffset=1)
            Byte            data_Type       (LocalValTypVariableOffset=0)
            Object          value           (LocalRefTypVariableOffset=0)
            Block If Then  (Line 58:61)
            End Block
            Block ElseIf (Line 61:63)
            End Block
            Block ElseIf (Line 63:65)
            End Block
            Block ElseIf (Line 65:67)
            End Block
            Block ElseIf (Line 67:72)
                Boolean         on              (LocalValTypVariableOffset=3)
                Block If Then  (Line 69:71)
                End Block
            End Block
        End Block
        Block Sub Subscribe (Line 82:84)
            String          topic           (LocalRefTypVariableOffset=0)
        End Block
        Total Size of Member data including base classes = 0.
    End Block


*************************************************************************************************************

000003  Class MMA8652                                                                                                                                                         785:  0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000004      'Constants
000005      Const I2C_ADDR As Byte = 0x1d
000006      Const I2C_SPEED As Integer = 400000 //250000    
000007      Const CTRL_ID_DEFAULT As Byte = 0x1d //!<This is the factory pre-configured I2C address for an MMA8652
000008      
000009      'Registers From Library but without _REG
000010      Const STATUS As Byte = 0x00
000011      Const F_STATUS As Byte = 0x00
000012      Const OUT_X_MSB As Byte = 0x01
000013      Const OUT_X_LSB As Byte = 0x02
000014      Const OUT_Y_MSB As Byte = 0x03
000015      Const OUT_Y_LSB As Byte = 0x04
000016      Const OUT_Z_MSB As Byte = 0x05
000017      Const OUT_Z_LSB As Byte = 0x06
000018      Const F_SETUP As Byte = 0x09
000019      Const TRIG_CFG As Byte = 0x0a
000020      Const SYSMOD As Byte = 0x0b
000021      Const INT_SOURCE As Byte = 0x0c
000022      Const WHO_AM_I As Byte = 0x0d
000023      Const XYZ_DATA_CFG As Byte = 0x0e
000024      Const HP_FILTER_CUTOFF As Byte = 0x0f
000025      Const PL_STATUS As Byte = 0x10
000026      Const PL_CFG As Byte = 0x11
000027      Const PL_COUNT As Byte = 0x12
000028      Const PL_BF_ZCOMP As Byte = 0x13
000029      Const PL_THS As Byte = 0x14
000030      Const FF_MT_CFG As Byte = 0x15
000031      Const FF_MT_SRC As Byte = 0x16
000032      Const FF_MT_THS As Byte = 0x17
000033      Const FF_MT_COUNT As Byte = 0x18    
000034      Const TRANSIENT_CFG As Byte = 0x1d
000035      Const TRANSIENT_SRC As Byte = 0x1e
000036      Const TRANSIENT_THS As Byte = 0x1f
000037      Const TRANSIENT_COUNT As Byte = 0x20    
000038      Const PULSE_CFG As Byte = 0x21
000039      Const PULSE_SRC As Byte = 0x22
000040      Const PULSE_THSX As Byte = 0x23
000041      Const PULSE_THSY As Byte = 0x24
000042      Const PULSE_THSZ As Byte = 0x25
000043      Const PULSE_TMLT As Byte = 0x26
000044      Const PULSE_LTCY As Byte = 0x27
000045      Const PULSE_WIND As Byte = 0x28
000046      Const ASLP_COUNT As Byte = 0x29    
000047      Const CTRL_REG1 As Byte = 0x2a
000048      Const CTRL_REG2 As Byte = 0x2b
000049      Const CTRL_REG3 As Byte = 0x2c
000050      Const CTRL_REG4 As Byte = 0x2d
000051      Const CTRL_REG5 As Byte = 0x2e    
000052      Const OFF_X As Byte = 0x2f
000053      Const OFF_Y As Byte = 0x30
000054      Const OFF_Z As Byte = 0x31
000055      
000056      Const POSITION_DEFAULT As Byte = 2
000057      Const DELAY_DEFAULT As Byte = 200
000058      
000059      Const STATUS_ZYXDR As Byte = 0x08
000060      Const BUF_SIZE As Byte = 6
000061      
000062      'Masks
000063      Const SRC_ASLP_MASK As Byte = 0x80
000064      Const SRC_FIFO_MASK As Byte = 0x40 // MMA8652 only
000065      Const SRC_TRANS_MASK As Byte = 0x20
000066      Const SRC_LNDPRT_MASK As Byte = 0x10
000067      Const SRC_PULSE_MASK As Byte = 0x08
000068      Const SRC_FF_MT_MASK As Byte = 0x04
000069      Const SRC_DRDY_MASK As Byte = 0x01
000070      
000071      Const ST_MASK As Byte = 0x80
000072      Const RST_MASK As Byte = 0x40
000073      Const SMODS1_MASK As Byte = 0x10
000074      Const SMODS0_MASK As Byte = 0x08
000075      Const SLPE_MASK As Byte = 0x04
000076      Const MODS1_MASK As Byte = 0x02
000077      Const MODS0_MASK As Byte = 0x01
000078      Const SMODS_MASK As Byte = 0x18
000079      Const MODS_MASK As Byte = 0x03
000080      
000081      Const DBCNTM_MASK As Byte = 0x80
000082      Const PL_EN_MASK As Byte = 0x40
000083      
000084      Const FS1_MASK As Byte = 0x02
000085      Const FS0_MASK As Byte = 0x01
000086      Const FS_MASK As Byte = 0x03
000087      
000088      Const ASLP_RATE1_MASK As Byte = 0x80
000089      Const ASLP_RATE0_MASK As Byte = 0x40
000090      Const DR2_MASK As Byte = 0x20
000091      Const DR1_MASK As Byte = 0x10
000092      Const DR0_MASK As Byte = 0x08
000093      Const LNOISE_MASK As Byte = 0x04
000094      Const FREAD_MASK As Byte = 0x02
000095      Const ACTIVE_MASK As Byte = 0x01
000096      Const ASLP_RATE_MASK As Byte = 0xc0
000097      Const DR_MASK As Byte = 0x38
000098      
000099      Const FGERR_MASK As Byte = 0x80 
000100      Const FGT_4_MASK As Byte = 0x40 
000101      Const FGT_3_MASK As Byte = 0x20 
000102      Const FGT_2_MASK As Byte = 0x10 
000103      Const FGT_1_MASK As Byte = 0x08 
000104      Const FGT_0_MASK As Byte = 0x04 
000105      Const FGT_MASK As Byte = 0x7c 
000106      Const SYSMOD1_MASK As Byte = 0x02
000107      Const SYSMOD0_MASK As Byte = 0x01
000108      Const SYSMOD_MASK As Byte = 0x03
000109      
000110      // PL_BF_ZCOMP Back/Front and Z Compensation Register
000111      Const BKFR1 As Byte = 0x80
000112      Const BKFR0 As Byte = 0x40
000113      Const ZLOCK2 As Byte = 0x04
000114      Const ZLOCK1 As Byte = 0x02
000115      Const ZLOCK0 As Byte = 0x01
000116      
000117      Const BKFR1_MASK As Byte = 0x80
000118      Const BKFR0_MASK As Byte = 0x40
000119      Const ZLOCK2_MASK As Byte = 0x04
000120      Const ZLOCK1_MASK As Byte = 0x02
000121      Const ZLOCK0_MASK As Byte = 0x01
000122      Const BKFR_MASK As Byte = 0xc0
000123      Const ZLOCK_MASK As Byte = 0x07
000124      
000125      // PL_P_L_THS Portrait to Landscape Threshold Register
000126      Const P_L_THS4 As Byte = 0x80
000127      Const P_L_THS3 As Byte = 0x40
000128      Const P_L_THS2 As Byte = 0x20
000129      Const P_L_THS1 As Byte = 0x10
000130      Const P_L_THS0 As Byte = 0x08
000131      Const HYS2 As Byte = 0x04
000132      Const HYS1 As Byte = 0x02
000133      Const HYS0 As Byte = 0x01
000134      
000135      Const P_L_THS4_MASK As Byte = 0x80
000136      Const P_L_THS3_MASK As Byte = 0x40
000137      Const P_L_THS2_MASK As Byte = 0x20
000138      Const P_L_THS1_MASK As Byte = 0x10
000139      Const P_L_THS0_MASK As Byte = 0x08
000140      Const HYS2_MASK As Byte = 0x04
000141      Const HYS1_MASK As Byte = 0x02
000142      Const HYS0_MASK As Byte = 0x01
000143      Const P_L_THS_MASK As Byte = 0xf8
000144      Const HYS_MASK As Byte = 0x07
000145      
000146      // CTRL_REG3 Interrupt Control Register
000147      Const FIFO_GATE_MASK As Byte = 0x80 // MMA8652 only
000148      Const WAKE_TRANS_MASK As Byte = 0x40 // MMA8652 only
000149      Const WAKE_LNDPRT_MASK As Byte = 0x20
000150      Const WAKE_PULSE_MASK As Byte = 0x10 // MMA8652 only
000151      Const WAKE_FF_MT_MASK As Byte = 0x08
000152      Const IPOL_MASK As Byte = 0x02
000153      Const PP_OD_MASK As Byte = 0x01
000154      Const WAKE_CLEAR_MASK As Byte = 0x3c
000155      
000156      // CTRL_REG4 Interrupt Enable Register
000157      Const INT_EN_ASLP_MASK As Byte = 0x80
000158      Const INT_EN_FIFO_MASK As Byte = 0x40 // MMA8652 only
000159      Const INT_EN_TRANS_MASK As Byte = 0x20 // MMA8652 only
000160      Const INT_EN_LNDPRT_MASK As Byte = 0x10
000161      Const INT_EN_PULSE_MASK As Byte = 0x08 // MMA8652 only
000162      Const INT_EN_FF_MT_MASK As Byte = 0x04
000163      Const INT_EN_DRDY_MASK As Byte = 0x01
000164      Const INT_CLEAR_MASK As Byte = 0xfd
000165      
000166      // CTRL_REG5 Interrupt Configuration Register
000167      Const INT_CFG_ASLP_MASK As Byte = 0x80
000168      Const INT_CFG_FIFO_MASK As Byte = 0x40 // MMA8652 only
000169      Const INT_CFG_TRANS_MASK As Byte = 0x20 // MMA8652 only
000170      Const INT_CFG_LNDPRT_MASK As Byte = 0x10
000171      Const INT_CFG_PULSE_MASK As Byte = 0x08 // MMA8652 only
000172      Const INT_CFG_FF_MT_MASK As Byte = 0x04
000173      Const INT_CFG_DRDY_MASK As Byte = 0x01
000174      Const INT_CFG_CLEAR_MASK As Byte = 0xfd
000175      
000176      // TRANSIENT_SRC Transient Source Register
000177      Const TEA_MASK As Byte = 0x40
000178      Const ZTRANSE_MASK As Byte = 0x20
000179      Const Z_TRANS_POL_MASK As Byte = 0x10
000180      Const YTRANSE_MASK As Byte = 0x08
000181      Const Y_TRANS_POL_MASK As Byte = 0x04
000182      Const XTRANSE_MASK As Byte = 0x02
000183      Const X_TRANS_POL_MASK As Byte = 0x01
000184      
000185      // TRANSIENT_CFG Transient Configuration Register
000186      Const TELE_MASK As Byte = 0x10
000187      Const ZTEFE_MASK As Byte = 0x08
000188      Const YTEFE_MASK As Byte = 0x04
000189      Const XTEFE_MASK As Byte = 0x02
000190      Const HPF_BYP_MASK As Byte = 0x01
000191      
000192      'Values
000193      Const FULL_SCALE_2G As Byte = 0x00
000194      Const FULL_SCALE_4G As Byte = 0x01
000195      Const FULL_SCALE_8G As Byte = 0x02
000196      
000197      //Awake Frequencies
000198      Const AODR_800HZ As Byte = 0x00, // 200 Hz
000199      Const AODR_400HZ As Byte = 0x08
000200      Const AODR_200HZ As Byte = 0x10
000201      Const AODR_100HZ As Byte = 0x18
000202      Const AODR_50HZ As Byte = 0x20
000203      Const AODR_12_5HZ As Byte = 0x28 // 12.5 Hz, etc.
000204      Const AODR_6_25HZ As Byte = 0x30
000205      Const AODR_1_56HZ As Byte = 0x38
000206      
000207      //Sleep Frequencies
000208      Const SODR_50HZ As Byte = 0x00
000209      Const SODR_12_5HZ As Byte = 0x40 // 12.5 Hz, etc.
000210      Const SODR_6_25HZ As Byte = 0x80
000211      Const SODR_1_56HZ As Byte = 0xc0
000212      
000213      //Sleep modes
000214      Const SMOD_NORMAL As Byte = 0x00
000215      Const SMOD_LOW_NOISE As Byte = 0x08 //(SMODS0_MASK)
000216      Const SMOD_HIGH_RES As Byte = 0x10 //(SMODS1_MASK)
000217      Const SMOD_LOW_POWER As Byte = 0x18 //(SMODS1_MASK+SMODS0_MASK)
000218      
000219      //Wake modes
000220      Const MOD_NORMAL As Byte = 0x00
000221      Const MOD_LOW_NOISE As Byte = 0x01 //(MODS0_MASK)
000222      Const MOD_HIGH_RES As Byte = 0x02 //(MODS1_MASK)
000223      Const MOD_LOW_POWER As Byte = 0x03 //(MODS1_MASK+MODS0_MASK)
000224      
000225      Const SYSMOD_STANDBY As Byte = 0x00
000226      Const SYSMOD_WAKE As Byte = 0x02
000227      Const SYSMOD_SLEEP As Byte = 0x01
000228      
000229      Const FIFO_GATE As Byte = 0x80 // MMA8652 only
000230      Const WAKE_TRANS As Byte = 0x40 // MMA8652 only
000231      Const WAKE_LNDPRT As Byte = 0x20
000232      Const WAKE_PULSE As Byte = 0x10 // MMA8652 only
000233      Const WAKE_FF_MT As Byte = 0x08
000234      Const IPOL As Byte = 0x02
000235      Const PP_OD As Byte = 0x01
000236      
000237      Const INT_EN_ASLP As Byte = 0x80
000238      Const INT_EN_FIFO As Byte = 0x40 // MMA8652 only
000239      Const INT_EN_TRANS As Byte = 0x20 // MMA8652 only
000240      Const INT_EN_LNDPRT As Byte = 0x10
000241      Const INT_EN_PULSE As Byte = 0x08 // MMA8652 only
000242      Const INT_EN_FF_MT As Byte = 0x04
000243      Const INT_EN_DRDY As Byte = 0x01
000244      
000245      Const NEWLP As Byte = 0x80
000246      Const LO As Byte = 0x40
000247      Const LAPO1 As Byte = 0x04
000248      Const LAPO0 As Byte = 0x02
000249      Const BAFRO As Byte = 0x01
000250      
000251      Const TEA As Byte = 0x40
000252      Const ZTRANSE As Byte = 0x20
000253      Const Z_TRANS_POL As Byte = 0x10
000254      Const YTRANSE As Byte = 0x08
000255      Const Y_TRANS_POL As Byte = 0x04
000256      Const XTRANSE As Byte = 0x02
000257      Const X_TRANS_POL As Byte = 0x01
000258      
000259      Const INT_CFG_ASLP As Byte = 0x80
000260      Const INT_CFG_FIFO As Byte = 0x40 // MMA8652 only
000261      Const INT_CFG_TRANS As Byte = 0x20 // MMA8652 only
000262      Const INT_CFG_LNDPRT As Byte = 0x10
000263      Const INT_CFG_PULSE As Byte = 0x08 // MMA8652 only
000264      Const INT_CFG_FF_MT As Byte = 0x04
000265      Const INT_CFG_DRDY As Byte = 0x01
000266      
000267      Const TELE As Byte = 0x10
000268      Const ZTEFE As Byte = 0x08
000269      Const YTEFE As Byte = 0x04
000270      Const XTEFE As Byte = 0x02
000271      Const HPF_BYP As Byte = 0x01
000272      
000273      Const SRC_ASLP As Byte = 0x80
000274      Const SRC_FIFO As Byte = 0x40 // MMA8652 only
000275      Const SRC_TRANS As Byte = 0x20
000276      Const SRC_LNDPRT As Byte = 0x10
000277      Const SRC_PULSE As Byte = 0x08
000278      Const SRC_FF_MT As Byte = 0x04
000279      Const SRC_DRDY As Byte = 0x01
000280      
000281      Const LOW_TRIGGER_THRESHOLD As Float = 0.0
000282      Const HIGH_TRIGGER_THRESHOLD As Float = 8.0
000283      Const TRANSIENT_THRESHOLD_RESOLUTION As Float = 0.063
000284      
000285      Const LOW_DURATION_MS As Float = 0.0
000286      Const HIGH_DURATION_MS As Float = 5100.0
000287      Const DURATION_RESOLUTION As Float = 20.0
000288      
000289      Public gAccelerometer As I2c
000290      Public online As Boolean = False
000291      
000292      Public Sub New()                                                                                                                                                  787:  0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000293          gAccelerometer = I2c.Create(I2C_SPEED, Pin.SCL, Pin.SDA, I2C_ADDR)                                                                                            788:  0x0110   PushConstI32            400000 (0x00061A80)
                                                                                                                                                                              789:  0x1A80                           
                                                                                                                                                                              790:  0x0006                           
                                                                                                                                                                              791:  0x800D   PushConstU10            13 (0x000D)
                                                                                                                                                                              792:  0x800E   PushConstU10            14 (0x000E)
                                                                                                                                                                              793:  0x801D   PushConstU10            29 (0x001D)
                                                                                                                                                                              794:  0x803B   PushConstU10            59 (0x003B)
                                                                                                                                                                              795:  0x0010   ClassNew                
                                                                                                                                                                              796:  0xB400   PopMemberRef            gAccelerometer

000294          If whoAmI() = 0x4a Then                                                                                                                                       797:  0x000D   PushMe                  
                                                                                                                                                                              798:  0x1DD2   BranchSubr              1265
                                                                                                                                                                              799:  0x804A   PushConstU10            74 (0x004A)
                                                                                                                                                                              800:  0x2414   BranchNE                821

000295              online = True                                                                                                                                             801:  0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              802:  0xA804   PopMemberU8             online

000296              reset()                                                                                                                                                   803:  0x000D   PushMe                  
                                                                                                                                                                              804:  0x1E27   BranchSubr              1356

000297              // Set interrupt active low
000298              write(CTRL_REG3, read(CTRL_REG3) & ~IPOL_MASK) // clear bit 1 (active low)                                                                                805:  0x802C   PushConstU10            44 (0x002C)
                                                                                                                                                                              806:  0x802C   PushConstU10            44 (0x002C)
                                                                                                                                                                              807:  0x000D   PushMe                  
                                                                                                                                                                              808:  0x1DF0   BranchSubr              1305
                                                                                                                                                                              809:  0x80FD   PushConstU10            253 (0x00FD)
                                                                                                                                                                              810:  0x001F   IntAnd                  
                                                                                                                                                                              811:  0x000D   PushMe                  
                                                                                                                                                                              812:  0x1E0E   BranchSubr              1339

000299              // Set interrupt push/pull
000300              write(CTRL_REG3, read(CTRL_REG3) & ~PP_OD_MASK) // clear bit 0 (push-pull)                                                                                813:  0x802C   PushConstU10            44 (0x002C)
                                                                                                                                                                              814:  0x802C   PushConstU10            44 (0x002C)
                                                                                                                                                                              815:  0x000D   PushMe                  
                                                                                                                                                                              816:  0x1DE8   BranchSubr              1305
                                                                                                                                                                              817:  0x80FE   PushConstU10            254 (0x00FE)
                                                                                                                                                                              818:  0x001F   IntAnd                  
                                                                                                                                                                              819:  0x000D   PushMe                  
                                                                                                                                                                              820:  0x1E06   BranchSubr              1339

000301          End If
000302      End Sub                                                                                                                                                           821:  0x0097   ReturnMe                

000303      
000304      Public Function map_range(var As Float, old_min As Float, old_max As Float, new_min As Byte, new_max As Byte) As Byte                                             822:  0x1850   EntryPoint              ValTypParams=5, RefTypParams=0
                                                                                                                                                                              823:  0xE040   AllocateStackSpace      ValTypeSize=2, RefTypeSize=0

000305          'Convert floats to byte range
000306          Dim old_range As Float = old_max - old_min                                                                                                                    824:  0x8802   PushLocalI32            old_max
                                                                                                                                                                              825:  0x8801   PushLocalI32            old_min
                                                                                                                                                                              826:  0x003F   FltSub                  
                                                                                                                                                                              827:  0x9005   PopLocalI32             old_range

000307          Dim new_range As Float = new_max - new_min                                                                                                                    828:  0x8804   PushLocalI32            new_max
                                                                                                                                                                              829:  0x8803   PushLocalI32            new_min
                                                                                                                                                                              830:  0x0031   IntSub                  
                                                                                                                                                                              831:  0x007E   CvtIntToFlt             
                                                                                                                                                                              832:  0x9006   PopLocalI32             new_range

000308          Return ((((var - old_min) * new_range) / old_range) + new_min).ToByte                                                                                         833:  0x8800   PushLocalI32            var
                                                                                                                                                                              834:  0x8801   PushLocalI32            old_min
                                                                                                                                                                              835:  0x003F   FltSub                  
                                                                                                                                                                              836:  0x8806   PushLocalI32            new_range
                                                                                                                                                                              837:  0x003C   FltMul                  
                                                                                                                                                                              838:  0x8805   PushLocalI32            old_range
                                                                                                                                                                              839:  0x003B   FltDiv                  
                                                                                                                                                                              840:  0x8803   PushLocalI32            new_min
                                                                                                                                                                              841:  0x007E   CvtIntToFlt             
                                                                                                                                                                              842:  0x0039   FltAdd                  
                                                                                                                                                                              843:  0x007B   CvtFltToInt             
                                                                                                                                                                              844:  0x007D   CvtIntToByt             
                                                                                                                                                                              845:  0x0092   ReturnValType           

000309      End Function                                                                                                                                                      846:  0x0093   Return0                 

000310      
000311      Public Function map_range(var As Float, old_min As Byte, old_max As Byte, new_min As Float, new_max As Float) As Float                                            847:  0x1850   EntryPoint              ValTypParams=5, RefTypParams=0
                                                                                                                                                                              848:  0xE040   AllocateStackSpace      ValTypeSize=2, RefTypeSize=0

000312          'convert bytes to floats range
000313          Dim old_range As Float = old_max - old_min                                                                                                                    849:  0x8802   PushLocalI32            old_max
                                                                                                                                                                              850:  0x8801   PushLocalI32            old_min
                                                                                                                                                                              851:  0x0031   IntSub                  
                                                                                                                                                                              852:  0x007E   CvtIntToFlt             
                                                                                                                                                                              853:  0x9005   PopLocalI32             old_range

000314          Dim new_range As Float = new_max - new_min                                                                                                                    854:  0x8804   PushLocalI32            new_max
                                                                                                                                                                              855:  0x8803   PushLocalI32            new_min
                                                                                                                                                                              856:  0x003F   FltSub                  
                                                                                                                                                                              857:  0x9006   PopLocalI32             new_range

000315          Return ((((var - old_min) * new_range) / old_range) + new_min).ToFloat                                                                                        858:  0x8800   PushLocalI32            var
                                                                                                                                                                              859:  0x8801   PushLocalI32            old_min
                                                                                                                                                                              860:  0x007E   CvtIntToFlt             
                                                                                                                                                                              861:  0x003F   FltSub                  
                                                                                                                                                                              862:  0x8806   PushLocalI32            new_range
                                                                                                                                                                              863:  0x003C   FltMul                  
                                                                                                                                                                              864:  0x8805   PushLocalI32            old_range
                                                                                                                                                                              865:  0x003B   FltDiv                  
                                                                                                                                                                              866:  0x8803   PushLocalI32            new_min
                                                                                                                                                                              867:  0x0039   FltAdd                  
                                                                                                                                                                              868:  0x0092   ReturnValType           

000316      End Function                                                                                                                                                      869:  0x0093   Return0                 

000317      
000318      Public Function GetmsPerCount() As Float                                                                                                                          870:  0x1800   EntryPoint              ValTypParams=0, RefTypParams=0
                                                                                                                                                                              871:  0xE060   AllocateStackSpace      ValTypeSize=3, RefTypeSize=0

000319          //read frequency and mode to determine milliseconds per count for debounce (see table 40 p34 in DS)
000320          Dim frequency As Byte = GetWakeModeFrequency()                                                                                                                872:  0x000D   PushMe                  
                                                                                                                                                                              873:  0x1E13   BranchSubr              1405
                                                                                                                                                                              874:  0x9000   PopLocalI32             frequency

000321          Dim mode As Byte = GetWakeModeResolution()                                                                                                                    875:  0x000D   PushMe                  
                                                                                                                                                                              876:  0x1E24   BranchSubr              1425
                                                                                                                                                                              877:  0x9001   PopLocalI32             mode

000322          Dim ms As Float = 1.25                                                                                                                                        878:  0x0110   PushConstI32            1067450368 (0x3FA00000)
                                                                                                                                                                              879:  0x0000                           
                                                                                                                                                                              880:  0x3FA0                           
                                                                                                                                                                              881:  0x9002   PopLocalI32             ms

000323          
000324          Select mode                                                                                                                                                   882:  0x8801   PushLocalI32            mode
                                                                                                                                                                              883:  0x0122   CaseComputed            
                                                                                                                                                                              884:  0x0002                           CaseCommonClass=Byte
                                                                                                                                                                              885:  0x0004                           NumberOfCaseEntries=4
                                                                                                                                                                              886:  0x0092                           CaseElseBranch=1033
                                                                                                                                                                              887:  0x0000                           CaseValue=0
                                                                                                                                                                              888:  0x0008                           CaseBranch=895
                                                                                                                                                                              889:  0x0001                           CaseValue=1
                                                                                                                                                                              890:  0x0028                           CaseBranch=927
                                                                                                                                                                              891:  0x0002                           CaseValue=2
                                                                                                                                                                              892:  0x004D                           CaseBranch=964
                                                                                                                                                                              893:  0x0003                           CaseValue=3
                                                                                                                                                                              894:  0x005E                           CaseBranch=981

000325              Case MOD_NORMAL
000326                  Select frequency                                                                                                                                      895:  0x8800   PushLocalI32            frequency
                                                                                                                                                                              896:  0x0122   CaseComputed            
                                                                                                                                                                              897:  0x0002                           CaseCommonClass=Byte
                                                                                                                                                                              898:  0x0004                           NumberOfCaseEntries=4
                                                                                                                                                                              899:  0x0018                           CaseElseBranch=924
                                                                                                                                                                              900:  0x0000                           CaseValue=0
                                                                                                                                                                              901:  0x0008                           CaseBranch=908
                                                                                                                                                                              902:  0x0008                           CaseValue=8
                                                                                                                                                                              903:  0x000D                           CaseBranch=913
                                                                                                                                                                              904:  0x0010                           CaseValue=16
                                                                                                                                                                              905:  0x0012                           CaseBranch=918
                                                                                                                                                                              906:  0x0018                           CaseValue=24
                                                                                                                                                                              907:  0x0015                           CaseBranch=921

000327                      Case AODR_800HZ
000328                          ms = 1.25                                                                                                                                     908:  0x0110   PushConstI32            1067450368 (0x3FA00000)
                                                                                                                                                                              909:  0x0000                           
                                                                                                                                                                              910:  0x3FA0                           
                                                                                                                                                                              911:  0x9002   PopLocalI32             ms

                                                                                                                                                                              912:  0x400D   Branch                  926
000329                      Case AODR_400HZ                                                                                                                                   

000330                          ms = 2.5                                                                                                                                      913:  0x0110   PushConstI32            1075838976 (0x40200000)
                                                                                                                                                                              914:  0x0000                           
                                                                                                                                                                              915:  0x4020                           
                                                                                                                                                                              916:  0x9002   PopLocalI32             ms

                                                                                                                                                                              917:  0x4008   Branch                  926
000331                      Case AODR_200HZ                                                                                                                                   

000332                          ms = 5.0                                                                                                                                      918:  0xEA05   PushConstFlt            5.0
                                                                                                                                                                              919:  0x9002   PopLocalI32             ms

                                                                                                                                                                              920:  0x4005   Branch                  926
000333                      Case AODR_100HZ                                                                                                                                   

000334                          ms = 10.0                                                                                                                                     921:  0xEA0A   PushConstFlt            10.0
                                                                                                                                                                              922:  0x9002   PopLocalI32             ms

                                                                                                                                                                              923:  0x4002   Branch                  926
000335                      Case Else                                                                                                                                         

000336                          ms = 20.0                                                                                                                                     924:  0xEA14   PushConstFlt            20.0
                                                                                                                                                                              925:  0x9002   PopLocalI32             ms

000337                  End Select
                                                                                                                                                                              926:  0x406A   Branch                  1033
000338              Case MOD_LOW_NOISE                                                                                                                                        

000339                  Select frequency                                                                                                                                      927:  0x8800   PushLocalI32            frequency
                                                                                                                                                                              928:  0x0122   CaseComputed            
                                                                                                                                                                              929:  0x0002                           CaseCommonClass=Byte
                                                                                                                                                                              930:  0x0005                           NumberOfCaseEntries=5
                                                                                                                                                                              931:  0x001D                           CaseElseBranch=961
                                                                                                                                                                              932:  0x0000                           CaseValue=0
                                                                                                                                                                              933:  0x000A                           CaseBranch=942
                                                                                                                                                                              934:  0x0008                           CaseValue=8
                                                                                                                                                                              935:  0x000F                           CaseBranch=947
                                                                                                                                                                              936:  0x0010                           CaseValue=16
                                                                                                                                                                              937:  0x0014                           CaseBranch=952
                                                                                                                                                                              938:  0x0018                           CaseValue=24
                                                                                                                                                                              939:  0x0017                           CaseBranch=955
                                                                                                                                                                              940:  0x0020                           CaseValue=32
                                                                                                                                                                              941:  0x001A                           CaseBranch=958

000340                      Case AODR_800HZ
000341                          ms = 1.25                                                                                                                                     942:  0x0110   PushConstI32            1067450368 (0x3FA00000)
                                                                                                                                                                              943:  0x0000                           
                                                                                                                                                                              944:  0x3FA0                           
                                                                                                                                                                              945:  0x9002   PopLocalI32             ms

                                                                                                                                                                              946:  0x4010   Branch                  963
000342                      Case AODR_400HZ                                                                                                                                   

000343                          ms = 2.5                                                                                                                                      947:  0x0110   PushConstI32            1075838976 (0x40200000)
                                                                                                                                                                              948:  0x0000                           
                                                                                                                                                                              949:  0x4020                           
                                                                                                                                                                              950:  0x9002   PopLocalI32             ms

                                                                                                                                                                              951:  0x400B   Branch                  963
000344                      Case AODR_200HZ                                                                                                                                   

000345                          ms = 5.0                                                                                                                                      952:  0xEA05   PushConstFlt            5.0
                                                                                                                                                                              953:  0x9002   PopLocalI32             ms

                                                                                                                                                                              954:  0x4008   Branch                  963
000346                      Case AODR_100HZ                                                                                                                                   

000347                          ms = 10.0                                                                                                                                     955:  0xEA0A   PushConstFlt            10.0
                                                                                                                                                                              956:  0x9002   PopLocalI32             ms

                                                                                                                                                                              957:  0x4005   Branch                  963
000348                      Case AODR_50HZ                                                                                                                                    

000349                          ms = 20.0                                                                                                                                     958:  0xEA14   PushConstFlt            20.0
                                                                                                                                                                              959:  0x9002   PopLocalI32             ms

                                                                                                                                                                              960:  0x4002   Branch                  963
000350                      Case Else                                                                                                                                         

000351                          ms = 80.0                                                                                                                                     961:  0xEA50   PushConstFlt            80.0
                                                                                                                                                                              962:  0x9002   PopLocalI32             ms

000352                  End Select
                                                                                                                                                                              963:  0x4045   Branch                  1033
000353              Case MOD_HIGH_RES                                                                                                                                         

000354                  Select frequency                                                                                                                                      964:  0x8800   PushLocalI32            frequency
                                                                                                                                                                              965:  0x0122   CaseComputed            
                                                                                                                                                                              966:  0x0002                           CaseCommonClass=Byte
                                                                                                                                                                              967:  0x0001                           NumberOfCaseEntries=1
                                                                                                                                                                              968:  0x0007                           CaseElseBranch=976
                                                                                                                                                                              969:  0x0000                           CaseValue=0
                                                                                                                                                                              970:  0x0002                           CaseBranch=971

000355                      Case AODR_800HZ
000356                          ms = 1.25                                                                                                                                     971:  0x0110   PushConstI32            1067450368 (0x3FA00000)
                                                                                                                                                                              972:  0x0000                           
                                                                                                                                                                              973:  0x3FA0                           
                                                                                                                                                                              974:  0x9002   PopLocalI32             ms

                                                                                                                                                                              975:  0x4004   Branch                  980
000357                      Case Else                                                                                                                                         

000358                          ms = 2.5                                                                                                                                      976:  0x0110   PushConstI32            1075838976 (0x40200000)
                                                                                                                                                                              977:  0x0000                           
                                                                                                                                                                              978:  0x4020                           
                                                                                                                                                                              979:  0x9002   PopLocalI32             ms

000359                  End Select
                                                                                                                                                                              980:  0x4034   Branch                  1033
000360              Case MOD_LOW_POWER                                                                                                                                        

000361                  Select frequency                                                                                                                                      981:  0x8800   PushLocalI32            frequency
                                                                                                                                                                              982:  0x0122   CaseComputed            
                                                                                                                                                                              983:  0x0002                           CaseCommonClass=Byte
                                                                                                                                                                              984:  0x0008                           NumberOfCaseEntries=8
                                                                                                                                                                              985:  0x002F                           CaseElseBranch=1033
                                                                                                                                                                              986:  0x0000                           CaseValue=0
                                                                                                                                                                              987:  0x0010                           CaseBranch=1002
                                                                                                                                                                              988:  0x0008                           CaseValue=8
                                                                                                                                                                              989:  0x0015                           CaseBranch=1007
                                                                                                                                                                              990:  0x0010                           CaseValue=16
                                                                                                                                                                              991:  0x001A                           CaseBranch=1012
                                                                                                                                                                              992:  0x0018                           CaseValue=24
                                                                                                                                                                              993:  0x001D                           CaseBranch=1015
                                                                                                                                                                              994:  0x0020                           CaseValue=32
                                                                                                                                                                              995:  0x0020                           CaseBranch=1018
                                                                                                                                                                              996:  0x0028                           CaseValue=40
                                                                                                                                                                              997:  0x0023                           CaseBranch=1021
                                                                                                                                                                              998:  0x0030                           CaseValue=48
                                                                                                                                                                              999:  0x0026                           CaseBranch=1024
                                                                                                                                                                              1000: 0x0038                           CaseValue=56
                                                                                                                                                                              1001: 0x002B                           CaseBranch=1029

000362                      Case AODR_800HZ
000363                          ms = 1.25                                                                                                                                     1002: 0x0110   PushConstI32            1067450368 (0x3FA00000)
                                                                                                                                                                              1003: 0x0000                           
                                                                                                                                                                              1004: 0x3FA0                           
                                                                                                                                                                              1005: 0x9002   PopLocalI32             ms

                                                                                                                                                                              1006: 0x401A   Branch                  1033
000364                      Case AODR_400HZ                                                                                                                                   

000365                          ms = 2.5                                                                                                                                      1007: 0x0110   PushConstI32            1075838976 (0x40200000)
                                                                                                                                                                              1008: 0x0000                           
                                                                                                                                                                              1009: 0x4020                           
                                                                                                                                                                              1010: 0x9002   PopLocalI32             ms

                                                                                                                                                                              1011: 0x4015   Branch                  1033
000366                      Case AODR_200HZ                                                                                                                                   

000367                          ms = 5.0                                                                                                                                      1012: 0xEA05   PushConstFlt            5.0
                                                                                                                                                                              1013: 0x9002   PopLocalI32             ms

                                                                                                                                                                              1014: 0x4012   Branch                  1033
000368                      Case AODR_100HZ                                                                                                                                   

000369                          ms = 10.0                                                                                                                                     1015: 0xEA0A   PushConstFlt            10.0
                                                                                                                                                                              1016: 0x9002   PopLocalI32             ms

                                                                                                                                                                              1017: 0x400F   Branch                  1033
000370                      Case AODR_50HZ                                                                                                                                    

000371                          ms = 20.0                                                                                                                                     1018: 0xEA14   PushConstFlt            20.0
                                                                                                                                                                              1019: 0x9002   PopLocalI32             ms

                                                                                                                                                                              1020: 0x400C   Branch                  1033
000372                      Case AODR_12_5HZ                                                                                                                                  

000373                          ms = 80.0                                                                                                                                     1021: 0xEA50   PushConstFlt            80.0
                                                                                                                                                                              1022: 0x9002   PopLocalI32             ms

                                                                                                                                                                              1023: 0x4009   Branch                  1033
000374                      Case AODR_6_25HZ                                                                                                                                  

000375                          ms = 160.0                                                                                                                                    1024: 0x0110   PushConstI32            1126170624 (0x43200000)
                                                                                                                                                                              1025: 0x0000                           
                                                                                                                                                                              1026: 0x4320                           
                                                                                                                                                                              1027: 0x9002   PopLocalI32             ms

                                                                                                                                                                              1028: 0x4004   Branch                  1033
000376                      Case AODR_1_56HZ                                                                                                                                  

000377                          ms = 160.0                                                                                                                                    1029: 0x0110   PushConstI32            1126170624 (0x43200000)
                                                                                                                                                                              1030: 0x0000                           
                                                                                                                                                                              1031: 0x4320                           
                                                                                                                                                                              1032: 0x9002   PopLocalI32             ms

000378                  End Select
000379          End Select
000380          Return ms                                                                                                                                                     1033: 0x8802   PushLocalI32            ms
                                                                                                                                                                              1034: 0x0092   ReturnValType           

000381      End Function                                                                                                                                                      1035: 0x0093   Return0                 

000382      
000383      Public Function GetmsFromFrequency() As Float                                                                                                                     1036: 0x1800   EntryPoint              ValTypParams=0, RefTypParams=0
                                                                                                                                                                              1037: 0xE040   AllocateStackSpace      ValTypeSize=2, RefTypeSize=0

000384          //read frequency to determine Wake mode milliseconds per cycle
000385          Dim frequency As Byte = GetWakeModeFrequency()                                                                                                                1038: 0x000D   PushMe                  
                                                                                                                                                                              1039: 0x1D6D   BranchSubr              1405
                                                                                                                                                                              1040: 0x9000   PopLocalI32             frequency

000386          Dim ms As Float = 0
000387          Select frequency                                                                                                                                              1041: 0x8800   PushLocalI32            frequency
                                                                                                                                                                              1042: 0x0122   CaseComputed            
                                                                                                                                                                              1043: 0x0002                           CaseCommonClass=Byte
                                                                                                                                                                              1044: 0x0008                           NumberOfCaseEntries=8
                                                                                                                                                                              1045: 0x0030                           CaseElseBranch=1094
                                                                                                                                                                              1046: 0x0000                           CaseValue=0
                                                                                                                                                                              1047: 0x0010                           CaseBranch=1062
                                                                                                                                                                              1048: 0x0008                           CaseValue=8
                                                                                                                                                                              1049: 0x0015                           CaseBranch=1067
                                                                                                                                                                              1050: 0x0010                           CaseValue=16
                                                                                                                                                                              1051: 0x001A                           CaseBranch=1072
                                                                                                                                                                              1052: 0x0018                           CaseValue=24
                                                                                                                                                                              1053: 0x001D                           CaseBranch=1075
                                                                                                                                                                              1054: 0x0020                           CaseValue=32
                                                                                                                                                                              1055: 0x0020                           CaseBranch=1078
                                                                                                                                                                              1056: 0x0028                           CaseValue=40
                                                                                                                                                                              1057: 0x0023                           CaseBranch=1081
                                                                                                                                                                              1058: 0x0030                           CaseValue=48
                                                                                                                                                                              1059: 0x0026                           CaseBranch=1084
                                                                                                                                                                              1060: 0x0038                           CaseValue=56
                                                                                                                                                                              1061: 0x002B                           CaseBranch=1089

000388              Case AODR_800HZ
000389                  ms = 1.25                                                                                                                                             1062: 0x0110   PushConstI32            1067450368 (0x3FA00000)
                                                                                                                                                                              1063: 0x0000                           
                                                                                                                                                                              1064: 0x3FA0                           
                                                                                                                                                                              1065: 0x9001   PopLocalI32             ms

                                                                                                                                                                              1066: 0x401F   Branch                  1098
000390              Case AODR_400HZ                                                                                                                                           

000391                  ms = 2.5                                                                                                                                              1067: 0x0110   PushConstI32            1075838976 (0x40200000)
                                                                                                                                                                              1068: 0x0000                           
                                                                                                                                                                              1069: 0x4020                           
                                                                                                                                                                              1070: 0x9001   PopLocalI32             ms

                                                                                                                                                                              1071: 0x401A   Branch                  1098
000392              Case AODR_200HZ                                                                                                                                           

000393                  ms = 5.0                                                                                                                                              1072: 0xEA05   PushConstFlt            5.0
                                                                                                                                                                              1073: 0x9001   PopLocalI32             ms

                                                                                                                                                                              1074: 0x4017   Branch                  1098
000394              Case AODR_100HZ                                                                                                                                           

000395                  ms = 10.0                                                                                                                                             1075: 0xEA0A   PushConstFlt            10.0
                                                                                                                                                                              1076: 0x9001   PopLocalI32             ms

                                                                                                                                                                              1077: 0x4014   Branch                  1098
000396              Case AODR_50HZ                                                                                                                                            

000397                  ms = 20.0                                                                                                                                             1078: 0xEA14   PushConstFlt            20.0
                                                                                                                                                                              1079: 0x9001   PopLocalI32             ms

                                                                                                                                                                              1080: 0x4011   Branch                  1098
000398              Case AODR_12_5HZ                                                                                                                                          

000399                  ms = 80.0                                                                                                                                             1081: 0xEA50   PushConstFlt            80.0
                                                                                                                                                                              1082: 0x9001   PopLocalI32             ms

                                                                                                                                                                              1083: 0x400E   Branch                  1098
000400              Case AODR_6_25HZ                                                                                                                                          

000401                  ms = 160.0                                                                                                                                            1084: 0x0110   PushConstI32            1126170624 (0x43200000)
                                                                                                                                                                              1085: 0x0000                           
                                                                                                                                                                              1086: 0x4320                           
                                                                                                                                                                              1087: 0x9001   PopLocalI32             ms

                                                                                                                                                                              1088: 0x4009   Branch                  1098
000402              Case AODR_1_56HZ                                                                                                                                          

000403                  ms = 640.0                                                                                                                                            1089: 0x0110   PushConstI32            1142947840 (0x44200000)
                                                                                                                                                                              1090: 0x0000                           
                                                                                                                                                                              1091: 0x4420                           
                                                                                                                                                                              1092: 0x9001   PopLocalI32             ms

                                                                                                                                                                              1093: 0x4004   Branch                  1098
000404              Case Else                                                                                                                                                 

000405                  ms = 1.25 //default                                                                                                                                   1094: 0x0110   PushConstI32            1067450368 (0x3FA00000)
                                                                                                                                                                              1095: 0x0000                           
                                                                                                                                                                              1096: 0x3FA0                           
                                                                                                                                                                              1097: 0x9001   PopLocalI32             ms

000406          End Select
000407          Return ms                                                                                                                                                     1098: 0x8801   PushLocalI32            ms
                                                                                                                                                                              1099: 0x0092   ReturnValType           

000408      End Function                                                                                                                                                      1100: 0x0093   Return0                 

000409      
000410      Public Function readAccelData() As ListOfShort                                                                                                                    1101: 0x1800   EntryPoint              ValTypParams=0, RefTypParams=0
                                                                                                                                                                              1102: 0xE002   AllocateStackSpace      ValTypeSize=0, RefTypeSize=2

000411          Dim rawData As ListOfByte = New ListOfByte // x/y/z accel register data stored here                                                                           1103: 0x800C   PushConstU10            12 (0x000C)
                                                                                                                                                                              1104: 0x0010   ClassNew                
                                                                                                                                                                              1105: 0x9400   PopLocalRef             rawData

000412          Dim destination As ListOfShort = New ListOfShort                                                                                                              1106: 0x800D   PushConstU10            13 (0x000D)
                                                                                                                                                                              1107: 0x0010   ClassNew                
                                                                                                                                                                              1108: 0x9401   PopLocalRef             destination

000413          rawData = read(OUT_X_MSB, 6) // Read the six raw data registers into data array                                                                               1109: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1110: 0x8006   PushConstU10            6 (0x0006)
                                                                                                                                                                              1111: 0x000D   PushMe                  
                                                                                                                                                                              1112: 0x1CD5   BranchSubr              1326
                                                                                                                                                                              1113: 0x9400   PopLocalRef             rawData

000414          If rawData <> Nothing Then                                                                                                                                    1114: 0x8C00   PushLocalRef            rawData
                                                                                                                                                                              1115: 0x000E   PushNothing             
                                                                                                                                                                              1116: 0x000B   RefCmpNE                
                                                                                                                                                                              1117: 0x3C27   BranchFalse             1157

000415              destination.Add((rawData(0) << 8 | rawData(1)) >> 4)                                                                                                      1118: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1119: 0x8C00   PushLocalRef            rawData
                                                                                                                                                                              1120: 0x00B4   ListItemGet             
                                                                                                                                                                              1121: 0x8008   PushConstU10            8 (0x0008)
                                                                                                                                                                              1122: 0x002E   IntShl                  
                                                                                                                                                                              1123: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1124: 0x8C00   PushLocalRef            rawData
                                                                                                                                                                              1125: 0x00B4   ListItemGet             
                                                                                                                                                                              1126: 0x002D   IntOr                   
                                                                                                                                                                              1127: 0x8004   PushConstU10            4 (0x0004)
                                                                                                                                                                              1128: 0x002F   IntShr                  
                                                                                                                                                                              1129: 0x8C01   PushLocalRef            destination
                                                                                                                                                                              1130: 0x00A3   ListAdd                 

000416              destination.Add((rawData(2) << 8 | rawData(3)) >> 4)                                                                                                      1131: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              1132: 0x8C00   PushLocalRef            rawData
                                                                                                                                                                              1133: 0x00B4   ListItemGet             
                                                                                                                                                                              1134: 0x8008   PushConstU10            8 (0x0008)
                                                                                                                                                                              1135: 0x002E   IntShl                  
                                                                                                                                                                              1136: 0x8003   PushConstU10            3 (0x0003)
                                                                                                                                                                              1137: 0x8C00   PushLocalRef            rawData
                                                                                                                                                                              1138: 0x00B4   ListItemGet             
                                                                                                                                                                              1139: 0x002D   IntOr                   
                                                                                                                                                                              1140: 0x8004   PushConstU10            4 (0x0004)
                                                                                                                                                                              1141: 0x002F   IntShr                  
                                                                                                                                                                              1142: 0x8C01   PushLocalRef            destination
                                                                                                                                                                              1143: 0x00A3   ListAdd                 

000417              destination.Add((rawData(4) << 8 | rawData(5)) >> 4)                                                                                                      1144: 0x8004   PushConstU10            4 (0x0004)
                                                                                                                                                                              1145: 0x8C00   PushLocalRef            rawData
                                                                                                                                                                              1146: 0x00B4   ListItemGet             
                                                                                                                                                                              1147: 0x8008   PushConstU10            8 (0x0008)
                                                                                                                                                                              1148: 0x002E   IntShl                  
                                                                                                                                                                              1149: 0x8005   PushConstU10            5 (0x0005)
                                                                                                                                                                              1150: 0x8C00   PushLocalRef            rawData
                                                                                                                                                                              1151: 0x00B4   ListItemGet             
                                                                                                                                                                              1152: 0x002D   IntOr                   
                                                                                                                                                                              1153: 0x8004   PushConstU10            4 (0x0004)
                                                                                                                                                                              1154: 0x002F   IntShr                  
                                                                                                                                                                              1155: 0x8C01   PushLocalRef            destination
                                                                                                                                                                              1156: 0x00A3   ListAdd                 

000418          End If
000419          Return destination                                                                                                                                            1157: 0x8C01   PushLocalRef            destination
                                                                                                                                                                              1158: 0x0095   ReturnRefType           

000420      End Function                                                                                                                                                      1159: 0x0096   ReturnNothing           

000421      
000422      Public Function readAccelData2sCompliment() As ListOfShort                                                                                                        1160: 0x1800   EntryPoint              ValTypParams=0, RefTypParams=0
                                                                                                                                                                              1161: 0xE001   AllocateStackSpace      ValTypeSize=0, RefTypeSize=1

000423          Dim destination As ListOfShort = New ListOfShort // x/y/z accel register data stored here                                                                     1162: 0x800D   PushConstU10            13 (0x000D)
                                                                                                                                                                              1163: 0x0010   ClassNew                
                                                                                                                                                                              1164: 0x9400   PopLocalRef             destination

000424          destination = readAccelData() // Read the data as shorts                                                                                                      1165: 0x000D   PushMe                  
                                                                                                                                                                              1166: 0x5442   BranchSubrBack          1101
                                                                                                                                                                              1167: 0x9400   PopLocalRef             destination

000425          If destination <> Nothing Then                                                                                                                                1168: 0x8C00   PushLocalRef            destination
                                                                                                                                                                              1169: 0x000E   PushNothing             
                                                                                                                                                                              1170: 0x000B   RefCmpNE                
                                                                                                                                                                              1171: 0x3C3C   BranchFalse             1232

000426              //convert values to 2's compliment
000427              If (((destination(0) >> 8) & 0xff) > 0x7f) Then                                                                                                           1172: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1173: 0x8C00   PushLocalRef            destination
                                                                                                                                                                              1174: 0x00B4   ListItemGet             
                                                                                                                                                                              1175: 0x8008   PushConstU10            8 (0x0008)
                                                                                                                                                                              1176: 0x002F   IntShr                  
                                                                                                                                                                              1177: 0x80FF   PushConstU10            255 (0x00FF)
                                                                                                                                                                              1178: 0x001F   IntAnd                  
                                                                                                                                                                              1179: 0x807F   PushConstU10            127 (0x007F)
                                                                                                                                                                              1180: 0x2C0B   BranchLE                1192

000428                  destination(0) = (~destination(0) + 1) * (-1)                                                                                                         1181: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1182: 0x8C00   PushLocalRef            destination
                                                                                                                                                                              1183: 0x00B4   ListItemGet             
                                                                                                                                                                              1184: 0x002C   IntNot                  
                                                                                                                                                                              1185: 0x007F   CvtIntToSho             
                                                                                                                                                                              1186: 0x0028   IntInc                  
                                                                                                                                                                              1187: 0x0016   PushConstMinus1         
                                                                                                                                                                              1188: 0x002A   IntMul                  
                                                                                                                                                                              1189: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1190: 0x8C00   PushLocalRef            destination
                                                                                                                                                                              1191: 0x00B5   ListItemPut             

000429              End If
000430              If (((destination(1) >> 8) & 0xff) > 0x7f) Then                                                                                                           1192: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1193: 0x8C00   PushLocalRef            destination
                                                                                                                                                                              1194: 0x00B4   ListItemGet             
                                                                                                                                                                              1195: 0x8008   PushConstU10            8 (0x0008)
                                                                                                                                                                              1196: 0x002F   IntShr                  
                                                                                                                                                                              1197: 0x80FF   PushConstU10            255 (0x00FF)
                                                                                                                                                                              1198: 0x001F   IntAnd                  
                                                                                                                                                                              1199: 0x807F   PushConstU10            127 (0x007F)
                                                                                                                                                                              1200: 0x2C0B   BranchLE                1212

000431                  destination(1) = (~destination(1) + 1) * (-1)                                                                                                         1201: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1202: 0x8C00   PushLocalRef            destination
                                                                                                                                                                              1203: 0x00B4   ListItemGet             
                                                                                                                                                                              1204: 0x002C   IntNot                  
                                                                                                                                                                              1205: 0x007F   CvtIntToSho             
                                                                                                                                                                              1206: 0x0028   IntInc                  
                                                                                                                                                                              1207: 0x0016   PushConstMinus1         
                                                                                                                                                                              1208: 0x002A   IntMul                  
                                                                                                                                                                              1209: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1210: 0x8C00   PushLocalRef            destination
                                                                                                                                                                              1211: 0x00B5   ListItemPut             

000432              End If
000433              If (((destination(2) >> 8) & 0xff) > 0x7f) Then                                                                                                           1212: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              1213: 0x8C00   PushLocalRef            destination
                                                                                                                                                                              1214: 0x00B4   ListItemGet             
                                                                                                                                                                              1215: 0x8008   PushConstU10            8 (0x0008)
                                                                                                                                                                              1216: 0x002F   IntShr                  
                                                                                                                                                                              1217: 0x80FF   PushConstU10            255 (0x00FF)
                                                                                                                                                                              1218: 0x001F   IntAnd                  
                                                                                                                                                                              1219: 0x807F   PushConstU10            127 (0x007F)
                                                                                                                                                                              1220: 0x2C0B   BranchLE                1232

000434                  destination(2) = (~destination(2) + 1) * (-1)                                                                                                         1221: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              1222: 0x8C00   PushLocalRef            destination
                                                                                                                                                                              1223: 0x00B4   ListItemGet             
                                                                                                                                                                              1224: 0x002C   IntNot                  
                                                                                                                                                                              1225: 0x007F   CvtIntToSho             
                                                                                                                                                                              1226: 0x0028   IntInc                  
                                                                                                                                                                              1227: 0x0016   PushConstMinus1         
                                                                                                                                                                              1228: 0x002A   IntMul                  
                                                                                                                                                                              1229: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              1230: 0x8C00   PushLocalRef            destination
                                                                                                                                                                              1231: 0x00B5   ListItemPut             

000435              End If
000436          End If
000437          Return destination                                                                                                                                            1232: 0x8C00   PushLocalRef            destination
                                                                                                                                                                              1233: 0x0095   ReturnRefType           

000438      End Function                                                                                                                                                      1234: 0x0096   ReturnNothing           

000439      
000440      // Read interrupt source register (see MMA8652FC datasheet, p. 28)
000441      Public Function readIntSource() As Byte                                                                                                                           1235: 0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000442          Return read(INT_SOURCE)                                                                                                                                       1236: 0x800C   PushConstU10            12 (0x000C)
                                                                                                                                                                              1237: 0x000D   PushMe                  
                                                                                                                                                                              1238: 0x1C42   BranchSubr              1305
                                                                                                                                                                              1239: 0x0092   ReturnValType           

000443      End Function                                                                                                                                                      1240: 0x0093   Return0                 

000444      
000445      // Read portrait/landscape status register (see MMA8652FC datasheet, p. 32)
000446      Public Function readPLStatus() As Byte                                                                                                                            1241: 0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000447          Return read(PL_STATUS)                                                                                                                                        1242: 0x8010   PushConstU10            16 (0x0010)
                                                                                                                                                                              1243: 0x000D   PushMe                  
                                                                                                                                                                              1244: 0x1C3C   BranchSubr              1305
                                                                                                                                                                              1245: 0x0092   ReturnValType           

000448      End Function                                                                                                                                                      1246: 0x0093   Return0                 

000449      
000450      // Read pulse source register (see MMA8652FC datasheet, p. 45)
000451      Public Function readPulseSource() As Byte                                                                                                                         1247: 0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000452          Return read(PULSE_SRC)                                                                                                                                        1248: 0x8022   PushConstU10            34 (0x0022)
                                                                                                                                                                              1249: 0x000D   PushMe                  
                                                                                                                                                                              1250: 0x1C36   BranchSubr              1305
                                                                                                                                                                              1251: 0x0092   ReturnValType           

000453      End Function                                                                                                                                                      1252: 0x0093   Return0                 

000454      
000455      // Read Transient source register (see MMA8652FC datasheet, p. 43)
000456      Public Function readTransientSource() As Byte                                                                                                                     1253: 0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000457          Return read(TRANSIENT_SRC)                                                                                                                                    1254: 0x801E   PushConstU10            30 (0x001E)
                                                                                                                                                                              1255: 0x000D   PushMe                  
                                                                                                                                                                              1256: 0x1C30   BranchSubr              1305
                                                                                                                                                                              1257: 0x0092   ReturnValType           

000458      End Function                                                                                                                                                      1258: 0x0093   Return0                 

000459      
000460      // Read free-fall source register (see MMA8652FC datasheet, p. 36)
000461      Public Function readFreeFallSource() As Byte                                                                                                                      1259: 0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000462          Return read(FF_MT_SRC)                                                                                                                                        1260: 0x8016   PushConstU10            22 (0x0016)
                                                                                                                                                                              1261: 0x000D   PushMe                  
                                                                                                                                                                              1262: 0x1C2A   BranchSubr              1305
                                                                                                                                                                              1263: 0x0092   ReturnValType           

000463      End Function                                                                                                                                                      1264: 0x0093   Return0                 

000464      
000465      // Read "who am I" register. It should return 0x4A
000466      Public Function whoAmI() As Byte                                                                                                                                  1265: 0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000467          Return read(WHO_AM_I)                                                                                                                                         1266: 0x800D   PushConstU10            13 (0x000D)
                                                                                                                                                                              1267: 0x000D   PushMe                  
                                                                                                                                                                              1268: 0x1C24   BranchSubr              1305
                                                                                                                                                                              1269: 0x0092   ReturnValType           

000468      End Function                                                                                                                                                      1270: 0x0093   Return0                 

000469      
000470      Public Sub Standby()                                                                                                                                              1271: 0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000471          'set active bit to 0 put accel in standby mode
000472          write(CTRL_REG1, read(CTRL_REG1) & ~ACTIVE_MASK)                                                                                                              1272: 0x802A   PushConstU10            42 (0x002A)
                                                                                                                                                                              1273: 0x802A   PushConstU10            42 (0x002A)
                                                                                                                                                                              1274: 0x000D   PushMe                  
                                                                                                                                                                              1275: 0x1C1D   BranchSubr              1305
                                                                                                                                                                              1276: 0x80FE   PushConstU10            254 (0x00FE)
                                                                                                                                                                              1277: 0x001F   IntAnd                  
                                                                                                                                                                              1278: 0x000D   PushMe                  
                                                                                                                                                                              1279: 0x1C3B   BranchSubr              1339

000473      End Sub                                                                                                                                                           1280: 0x0091   Return                  

000474      
000475      Public Sub Active()                                                                                                                                               1281: 0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000476          'set active bit to put accel in active mode
000477          write(CTRL_REG1, read(CTRL_REG1) | ACTIVE_MASK)                                                                                                               1282: 0x802A   PushConstU10            42 (0x002A)
                                                                                                                                                                              1283: 0x802A   PushConstU10            42 (0x002A)
                                                                                                                                                                              1284: 0x000D   PushMe                  
                                                                                                                                                                              1285: 0x1C13   BranchSubr              1305
                                                                                                                                                                              1286: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1287: 0x002D   IntOr                   
                                                                                                                                                                              1288: 0x000D   PushMe                  
                                                                                                                                                                              1289: 0x1C31   BranchSubr              1339

000478      End Sub                                                                                                                                                           1290: 0x0091   Return                  

000479      
000480      Public Sub SetRegister(reg As Byte)                                                                                                                               1291: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0
                                                                                                                                                                              1292: 0xE001   AllocateStackSpace      ValTypeSize=0, RefTypeSize=1

000481          Dim data As ListOfByte = New ListOfByte                                                                                                                       1293: 0x800C   PushConstU10            12 (0x000C)
                                                                                                                                                                              1294: 0x0010   ClassNew                
                                                                                                                                                                              1295: 0x9400   PopLocalRef             data

000482          data.Add(reg)                                                                                                                                                 1296: 0x8800   PushLocalI32            reg
                                                                                                                                                                              1297: 0x8C00   PushLocalRef            data
                                                                                                                                                                              1298: 0x00A3   ListAdd                 

000483          gAccelerometer.Write(data, False)                                                                                                                             1299: 0x8C00   PushLocalRef            data
                                                                                                                                                                              1300: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1301: 0xA400   PushMemberRef           gAccelerometer
                                                                                                                                                                              1302: 0x00E1   I2cDeviceWrite          
                                                                                                                                                                              1303: 0xE420   FreeStackSpace          ValTypeSize=1, RefTypeSize=0

000484      End Sub                                                                                                                                                           1304: 0x0091   Return                  

000485      
000486      Public Function read(address As Byte) As Byte                                                                                                                     1305: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0
                                                                                                                                                                              1306: 0xE021   AllocateStackSpace      ValTypeSize=1, RefTypeSize=1

000487          // read single byte
000488          SetRegister(address)                                                                                                                                          1307: 0x8800   PushLocalI32            address
                                                                                                                                                                              1308: 0x000D   PushMe                  
                                                                                                                                                                              1309: 0x5413   BranchSubrBack          1291

000489          Dim result As Byte = 0
000490          Dim value As ListOfByte = gAccelerometer.Read(1, True)                                                                                                        1310: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1311: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1312: 0xA400   PushMemberRef           gAccelerometer
                                                                                                                                                                              1313: 0x00E0   I2cDeviceRead           
                                                                                                                                                                              1314: 0x9400   PopLocalRef             value

000491          If value <> Nothing Then                                                                                                                                      1315: 0x8C00   PushLocalRef            value
                                                                                                                                                                              1316: 0x000E   PushNothing             
                                                                                                                                                                              1317: 0x000B   RefCmpNE                
                                                                                                                                                                              1318: 0x3C04   BranchFalse             1323

000492              result = value(0)                                                                                                                                         1319: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1320: 0x8C00   PushLocalRef            value
                                                                                                                                                                              1321: 0x00B4   ListItemGet             
                                                                                                                                                                              1322: 0x9001   PopLocalI32             result

000493          End If
000494          Return result                                                                                                                                                 1323: 0x8801   PushLocalI32            result
                                                                                                                                                                              1324: 0x0092   ReturnValType           

000495      End Function                                                                                                                                                      1325: 0x0093   Return0                 

000496      
000497      Public Function read(address As Byte, length As Byte) As ListOfByte                                                                                               1326: 0x1820   EntryPoint              ValTypParams=2, RefTypParams=0
                                                                                                                                                                              1327: 0xE001   AllocateStackSpace      ValTypeSize=0, RefTypeSize=1

000498          //read multiple bytes
000499          SetRegister(address)                                                                                                                                          1328: 0x8800   PushLocalI32            address
                                                                                                                                                                              1329: 0x000D   PushMe                  
                                                                                                                                                                              1330: 0x5428   BranchSubrBack          1291

000500          Dim value As ListOfByte = gAccelerometer.Read(length, True)                                                                                                   1331: 0x8801   PushLocalI32            length
                                                                                                                                                                              1332: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1333: 0xA400   PushMemberRef           gAccelerometer
                                                                                                                                                                              1334: 0x00E0   I2cDeviceRead           
                                                                                                                                                                              1335: 0x9400   PopLocalRef             value

000501          Return value                                                                                                                                                  1336: 0x8C00   PushLocalRef            value
                                                                                                                                                                              1337: 0x0095   ReturnRefType           

000502      End Function                                                                                                                                                      1338: 0x0096   ReturnNothing           

000503      
000504      Public Sub write(address As Byte, value As Byte)                                                                                                                  1339: 0x1820   EntryPoint              ValTypParams=2, RefTypParams=0
                                                                                                                                                                              1340: 0xE001   AllocateStackSpace      ValTypeSize=0, RefTypeSize=1

000505          //write single byte
000506          Dim data As ListOfByte = New ListOfByte                                                                                                                       1341: 0x800C   PushConstU10            12 (0x000C)
                                                                                                                                                                              1342: 0x0010   ClassNew                
                                                                                                                                                                              1343: 0x9400   PopLocalRef             data

000507          data.Add(address)                                                                                                                                             1344: 0x8800   PushLocalI32            address
                                                                                                                                                                              1345: 0x8C00   PushLocalRef            data
                                                                                                                                                                              1346: 0x00A3   ListAdd                 

000508          data.Add(value)                                                                                                                                               1347: 0x8801   PushLocalI32            value
                                                                                                                                                                              1348: 0x8C00   PushLocalRef            data
                                                                                                                                                                              1349: 0x00A3   ListAdd                 

000509          gAccelerometer.Write(data, True)                                                                                                                              1350: 0x8C00   PushLocalRef            data
                                                                                                                                                                              1351: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1352: 0xA400   PushMemberRef           gAccelerometer
                                                                                                                                                                              1353: 0x00E1   I2cDeviceWrite          
                                                                                                                                                                              1354: 0xE420   FreeStackSpace          ValTypeSize=1, RefTypeSize=0

000510      End Sub                                                                                                                                                           1355: 0x0091   Return                  

000511      
000512      Public Sub reset()                                                                                                                                                1356: 0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000513          write(CTRL_REG2, RST_MASK)                                                                                                                                    1357: 0x802B   PushConstU10            43 (0x002B)
                                                                                                                                                                              1358: 0x8040   PushConstU10            64 (0x0040)
                                                                                                                                                                              1359: 0x000D   PushMe                  
                                                                                                                                                                              1360: 0x5416   BranchSubrBack          1339

000514          While (read(CTRL_REG2) & RST_MASK) = RST_MASK                                                                                                                 1361: 0x802B   PushConstU10            43 (0x002B)
                                                                                                                                                                              1362: 0x000D   PushMe                  
                                                                                                                                                                              1363: 0x543B   BranchSubrBack          1305
                                                                                                                                                                              1364: 0x8040   PushConstU10            64 (0x0040)
                                                                                                                                                                              1365: 0x001F   IntAnd                  
                                                                                                                                                                              1366: 0x8040   PushConstU10            64 (0x0040)
                                                                                                                                                                              1367: 0x2404   BranchNE                1372

000515              Thread.Sleep(1000) //wait for reset to end                                                                                                                1368: 0x83E8   PushConstU10            1000 (0x03E8)
                                                                                                                                                                              1369: 0x00D5   ThreadSleep             
                                                                                                                                                                              1370: 0xE420   FreeStackSpace          ValTypeSize=1, RefTypeSize=0

000516          End While                                                                                                                                                     1371: 0x500B   BranchBack              1361

000517      End Sub                                                                                                                                                           1372: 0x0091   Return                  

000518      
000519      Public Sub SetRange(range As Byte)                                                                                                                                1373: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0

000520          write(XYZ_DATA_CFG, (read(XYZ_DATA_CFG) & ~FS_MASK) | range)                                                                                                  1374: 0x800E   PushConstU10            14 (0x000E)
                                                                                                                                                                              1375: 0x800E   PushConstU10            14 (0x000E)
                                                                                                                                                                              1376: 0x000D   PushMe                  
                                                                                                                                                                              1377: 0x5449   BranchSubrBack          1305
                                                                                                                                                                              1378: 0x80FC   PushConstU10            252 (0x00FC)
                                                                                                                                                                              1379: 0x001F   IntAnd                  
                                                                                                                                                                              1380: 0x8800   PushLocalI32            range
                                                                                                                                                                              1381: 0x002D   IntOr                   
                                                                                                                                                                              1382: 0x000D   PushMe                  
                                                                                                                                                                              1383: 0x542D   BranchSubrBack          1339

000521      End Sub                                                                                                                                                           1384: 0x0091   Return                  

000522      
000523      Public Function GetRange() As Byte                                                                                                                                1385: 0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000524          Return read(XYZ_DATA_CFG) & FS_MASK                                                                                                                           1386: 0x800E   PushConstU10            14 (0x000E)
                                                                                                                                                                              1387: 0x000D   PushMe                  
                                                                                                                                                                              1388: 0x5454   BranchSubrBack          1305
                                                                                                                                                                              1389: 0x8003   PushConstU10            3 (0x0003)
                                                                                                                                                                              1390: 0x001F   IntAnd                  
                                                                                                                                                                              1391: 0x0092   ReturnValType           

000525      End Function                                                                                                                                                      1392: 0x0093   Return0                 

000526      
000527      Public Sub SetWakeModeFrequency(frequency As Byte)                                                                                                                1393: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0

000528          write(CTRL_REG1, (read(CTRL_REG1) & ~DR_MASK) | frequency)                                                                                                    1394: 0x802A   PushConstU10            42 (0x002A)
                                                                                                                                                                              1395: 0x802A   PushConstU10            42 (0x002A)
                                                                                                                                                                              1396: 0x000D   PushMe                  
                                                                                                                                                                              1397: 0x545D   BranchSubrBack          1305
                                                                                                                                                                              1398: 0x80C7   PushConstU10            199 (0x00C7)
                                                                                                                                                                              1399: 0x001F   IntAnd                  
                                                                                                                                                                              1400: 0x8800   PushLocalI32            frequency
                                                                                                                                                                              1401: 0x002D   IntOr                   
                                                                                                                                                                              1402: 0x000D   PushMe                  
                                                                                                                                                                              1403: 0x5441   BranchSubrBack          1339

000529      End Sub                                                                                                                                                           1404: 0x0091   Return                  

000530      
000531      Public Function GetWakeModeFrequency() As Byte                                                                                                                    1405: 0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000532          Return read(CTRL_REG1) & DR_MASK                                                                                                                              1406: 0x802A   PushConstU10            42 (0x002A)
                                                                                                                                                                              1407: 0x000D   PushMe                  
                                                                                                                                                                              1408: 0x5468   BranchSubrBack          1305
                                                                                                                                                                              1409: 0x8038   PushConstU10            56 (0x0038)
                                                                                                                                                                              1410: 0x001F   IntAnd                  
                                                                                                                                                                              1411: 0x0092   ReturnValType           

000533      End Function                                                                                                                                                      1412: 0x0093   Return0                 

000534      
000535      Public Sub SetWakeModeResolution(resolution As Byte)                                                                                                              1413: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0

000536          write(CTRL_REG2, (read(CTRL_REG2) & ~MODS_MASK) | resolution) // clear bits 0 and 1, sent wake mode resolution                                                1414: 0x802B   PushConstU10            43 (0x002B)
                                                                                                                                                                              1415: 0x802B   PushConstU10            43 (0x002B)
                                                                                                                                                                              1416: 0x000D   PushMe                  
                                                                                                                                                                              1417: 0x5471   BranchSubrBack          1305
                                                                                                                                                                              1418: 0x80FC   PushConstU10            252 (0x00FC)
                                                                                                                                                                              1419: 0x001F   IntAnd                  
                                                                                                                                                                              1420: 0x8800   PushLocalI32            resolution
                                                                                                                                                                              1421: 0x002D   IntOr                   
                                                                                                                                                                              1422: 0x000D   PushMe                  
                                                                                                                                                                              1423: 0x5455   BranchSubrBack          1339

000537      End Sub                                                                                                                                                           1424: 0x0091   Return                  

000538      
000539      Public Function GetWakeModeResolution() As Byte                                                                                                                   1425: 0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000540          Return read(CTRL_REG2) & MODS_MASK // read bits 0 and 1                                                                                                       1426: 0x802B   PushConstU10            43 (0x002B)
                                                                                                                                                                              1427: 0x000D   PushMe                  
                                                                                                                                                                              1428: 0x547C   BranchSubrBack          1305
                                                                                                                                                                              1429: 0x8003   PushConstU10            3 (0x0003)
                                                                                                                                                                              1430: 0x001F   IntAnd                  
                                                                                                                                                                              1431: 0x0092   ReturnValType           

000541      End Function                                                                                                                                                      1432: 0x0093   Return0                 

000542      
000543      Public Sub SetSleepMode(mode As Byte)                                                                                                                             1433: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0

000544          write(CTRL_REG2, (read(CTRL_REG2) & ~SLPE_MASK) | mode) // clear bit 3, set sleep mode                                                                        1434: 0x802B   PushConstU10            43 (0x002B)
                                                                                                                                                                              1435: 0x802B   PushConstU10            43 (0x002B)
                                                                                                                                                                              1436: 0x000D   PushMe                  
                                                                                                                                                                              1437: 0x5485   BranchSubrBack          1305
                                                                                                                                                                              1438: 0x80FB   PushConstU10            251 (0x00FB)
                                                                                                                                                                              1439: 0x001F   IntAnd                  
                                                                                                                                                                              1440: 0x8800   PushLocalI32            mode
                                                                                                                                                                              1441: 0x002D   IntOr                   
                                                                                                                                                                              1442: 0x000D   PushMe                  
                                                                                                                                                                              1443: 0x5469   BranchSubrBack          1339

000545      End Sub                                                                                                                                                           1444: 0x0091   Return                  

000546      
000547      Public Function GetSleepMode() As Byte                                                                                                                            1445: 0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000548          Return read(CTRL_REG2) & SLPE_MASK // read bit 3                                                                                                              1446: 0x802B   PushConstU10            43 (0x002B)
                                                                                                                                                                              1447: 0x000D   PushMe                  
                                                                                                                                                                              1448: 0x5490   BranchSubrBack          1305
                                                                                                                                                                              1449: 0x8004   PushConstU10            4 (0x0004)
                                                                                                                                                                              1450: 0x001F   IntAnd                  
                                                                                                                                                                              1451: 0x0092   ReturnValType           

000549      End Function                                                                                                                                                      1452: 0x0093   Return0                 

000550      
000551      Public Sub SetSleepModeFrequency(frequency As Byte)                                                                                                               1453: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0

000552          write(CTRL_REG1, (read(CTRL_REG1) & ~ASLP_RATE_MASK) | frequency)                                                                                             1454: 0x802A   PushConstU10            42 (0x002A)
                                                                                                                                                                              1455: 0x802A   PushConstU10            42 (0x002A)
                                                                                                                                                                              1456: 0x000D   PushMe                  
                                                                                                                                                                              1457: 0x5499   BranchSubrBack          1305
                                                                                                                                                                              1458: 0x803F   PushConstU10            63 (0x003F)
                                                                                                                                                                              1459: 0x001F   IntAnd                  
                                                                                                                                                                              1460: 0x8800   PushLocalI32            frequency
                                                                                                                                                                              1461: 0x002D   IntOr                   
                                                                                                                                                                              1462: 0x000D   PushMe                  
                                                                                                                                                                              1463: 0x547D   BranchSubrBack          1339

000553      End Sub                                                                                                                                                           1464: 0x0091   Return                  

000554      
000555      Public Function GetSleepModeleepModeFrequency() As Byte                                                                                                           1465: 0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000556          Return (read(CTRL_REG1) & ASLP_RATE_MASK) >> 7                                                                                                                1466: 0x802A   PushConstU10            42 (0x002A)
                                                                                                                                                                              1467: 0x000D   PushMe                  
                                                                                                                                                                              1468: 0x54A4   BranchSubrBack          1305
                                                                                                                                                                              1469: 0x80C0   PushConstU10            192 (0x00C0)
                                                                                                                                                                              1470: 0x001F   IntAnd                  
                                                                                                                                                                              1471: 0x8007   PushConstU10            7 (0x0007)
                                                                                                                                                                              1472: 0x002F   IntShr                  
                                                                                                                                                                              1473: 0x0092   ReturnValType           

000557      End Function                                                                                                                                                      1474: 0x0093   Return0                 

000558      
000559      Public Sub SetSleepModeDuration(duration As Float)                                                                                                                1475: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0
                                                                                                                                                                              1476: 0xE020   AllocateStackSpace      ValTypeSize=1, RefTypeSize=0

000560          //period of inactivity before device enters sleep mode, in ms
000561          Dim durationByte As Byte = 0
000562          If GetWakeModeFrequency() = AODR_1_56HZ Then                                                                                                                  1477: 0x000D   PushMe                  
                                                                                                                                                                              1478: 0x544A   BranchSubrBack          1405
                                                                                                                                                                              1479: 0x8038   PushConstU10            56 (0x0038)
                                                                                                                                                                              1480: 0x240B   BranchNE                1492

000563              durationByte = map_range(duration, 0, 162000.0, 0, 0xff)                                                                                                  1481: 0x8800   PushLocalI32            duration
                                                                                                                                                                              1482: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1483: 0x0110   PushConstI32            1209938944 (0x481E3400)
                                                                                                                                                                              1484: 0x3400                           
                                                                                                                                                                              1485: 0x481E                           
                                                                                                                                                                              1486: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1487: 0x80FF   PushConstU10            255 (0x00FF)
                                                                                                                                                                              1488: 0x000D   PushMe                  
                                                                                                                                                                              1489: 0x569C   BranchSubrBack          822
                                                                                                                                                                              1490: 0x9001   PopLocalI32             durationByte

                                                                                                                                                                              1491: 0x400A   Branch                  1502
000564          Else                                                                                                                                                          

000565              durationByte = map_range(duration, 0, 81000.0, 0, 0xff)                                                                                                   1492: 0x8800   PushLocalI32            duration
                                                                                                                                                                              1493: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1494: 0x0110   PushConstI32            1201550336 (0x479E3400)
                                                                                                                                                                              1495: 0x3400                           
                                                                                                                                                                              1496: 0x479E                           
                                                                                                                                                                              1497: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1498: 0x80FF   PushConstU10            255 (0x00FF)
                                                                                                                                                                              1499: 0x000D   PushMe                  
                                                                                                                                                                              1500: 0x56A7   BranchSubrBack          822
                                                                                                                                                                              1501: 0x9001   PopLocalI32             durationByte

000566          End If
000567          write(ASLP_COUNT, durationByte)                                                                                                                               1502: 0x8029   PushConstU10            41 (0x0029)
                                                                                                                                                                              1503: 0x8801   PushLocalI32            durationByte
                                                                                                                                                                              1504: 0x000D   PushMe                  
                                                                                                                                                                              1505: 0x54A7   BranchSubrBack          1339

000568      End Sub                                                                                                                                                           1506: 0x0091   Return                  

000569      
000570      Public Function GetSleepModeleepModeDuration() As Byte                                                                                                            1507: 0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000571          Return read(ASLP_COUNT)                                                                                                                                       1508: 0x8029   PushConstU10            41 (0x0029)
                                                                                                                                                                              1509: 0x000D   PushMe                  
                                                                                                                                                                              1510: 0x54CE   BranchSubrBack          1305
                                                                                                                                                                              1511: 0x0092   ReturnValType           

000572      End Function                                                                                                                                                      1512: 0x0093   Return0                 

000573      
000574      Public Function GetSleepModeleepModeDurationms() As Float                                                                                                         1513: 0x1800   EntryPoint              ValTypParams=0, RefTypParams=0
                                                                                                                                                                              1514: 0xE020   AllocateStackSpace      ValTypeSize=1, RefTypeSize=0

000575          Return read(ASLP_COUNT)                                                                                                                                       1515: 0x8029   PushConstU10            41 (0x0029)
                                                                                                                                                                              1516: 0x000D   PushMe                  
                                                                                                                                                                              1517: 0x54D5   BranchSubrBack          1305
                                                                                                                                                                              1518: 0x0092   ReturnValType           

000576          Dim durationByte As Byte = read(ASLP_COUNT)                                                                                                                   1519: 0x8029   PushConstU10            41 (0x0029)
                                                                                                                                                                              1520: 0x000D   PushMe                  
                                                                                                                                                                              1521: 0x54D9   BranchSubrBack          1305
                                                                                                                                                                              1522: 0x9000   PopLocalI32             durationByte

000577          If GetWakeModeFrequency() = AODR_1_56HZ Then                                                                                                                  1523: 0x000D   PushMe                  
                                                                                                                                                                              1524: 0x5478   BranchSubrBack          1405
                                                                                                                                                                              1525: 0x8038   PushConstU10            56 (0x0038)
                                                                                                                                                                              1526: 0x240C   BranchNE                1539

000578              Return map_range(durationByte, 0, 0xff, 0, 162000.0)                                                                                                      1527: 0x8800   PushLocalI32            durationByte
                                                                                                                                                                              1528: 0x007E   CvtIntToFlt             
                                                                                                                                                                              1529: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1530: 0x80FF   PushConstU10            255 (0x00FF)
                                                                                                                                                                              1531: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1532: 0x0110   PushConstI32            1209938944 (0x481E3400)
                                                                                                                                                                              1533: 0x3400                           
                                                                                                                                                                              1534: 0x481E                           
                                                                                                                                                                              1535: 0x000D   PushMe                  
                                                                                                                                                                              1536: 0x56B2   BranchSubrBack          847
                                                                                                                                                                              1537: 0x0092   ReturnValType           

                                                                                                                                                                              1538: 0x400B   Branch                  1550
000579          Else                                                                                                                                                          

000580              Return map_range(durationByte, 0, 0xff, 0, 81000.0)                                                                                                       1539: 0x8800   PushLocalI32            durationByte
                                                                                                                                                                              1540: 0x007E   CvtIntToFlt             
                                                                                                                                                                              1541: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1542: 0x80FF   PushConstU10            255 (0x00FF)
                                                                                                                                                                              1543: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1544: 0x0110   PushConstI32            1201550336 (0x479E3400)
                                                                                                                                                                              1545: 0x3400                           
                                                                                                                                                                              1546: 0x479E                           
                                                                                                                                                                              1547: 0x000D   PushMe                  
                                                                                                                                                                              1548: 0x56BE   BranchSubrBack          847
                                                                                                                                                                              1549: 0x0092   ReturnValType           

000581          End If
000582      End Function                                                                                                                                                      1550: 0x0093   Return0                 

000583      
000584      Public Sub SetSleepModeResolution(resolution As Byte)                                                                                                             1551: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0

000585          write(CTRL_REG2, (read(CTRL_REG2) & ~SMODS_MASK) | resolution) // clear bits 4 and 5, set sleep mode resolution                                               1552: 0x802B   PushConstU10            43 (0x002B)
                                                                                                                                                                              1553: 0x802B   PushConstU10            43 (0x002B)
                                                                                                                                                                              1554: 0x000D   PushMe                  
                                                                                                                                                                              1555: 0x54FB   BranchSubrBack          1305
                                                                                                                                                                              1556: 0x80E7   PushConstU10            231 (0x00E7)
                                                                                                                                                                              1557: 0x001F   IntAnd                  
                                                                                                                                                                              1558: 0x8800   PushLocalI32            resolution
                                                                                                                                                                              1559: 0x002D   IntOr                   
                                                                                                                                                                              1560: 0x000D   PushMe                  
                                                                                                                                                                              1561: 0x54DF   BranchSubrBack          1339

000586      End Sub                                                                                                                                                           1562: 0x0091   Return                  

000587      
000588      Public Function GetSleepModeResolution() As Byte                                                                                                                  1563: 0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000589          Return read(CTRL_REG2) & SMODS_MASK // read bits 4 and 5                                                                                                      1564: 0x802B   PushConstU10            43 (0x002B)
                                                                                                                                                                              1565: 0x000D   PushMe                  
                                                                                                                                                                              1566: 0x5506   BranchSubrBack          1305
                                                                                                                                                                              1567: 0x8018   PushConstU10            24 (0x0018)
                                                                                                                                                                              1568: 0x001F   IntAnd                  
                                                                                                                                                                              1569: 0x0092   ReturnValType           

000590      End Function                                                                                                                                                      1570: 0x0093   Return0                 

000591      
000592      Public Sub SetSleepModeInterrupts(interrupts As Byte)                                                                                                             1571: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0

000593          write(CTRL_REG3, (read(CTRL_REG3) & ~interrupts) | interrupts) // clear interrupts, set Wake on interrupts                                                    1572: 0x802C   PushConstU10            44 (0x002C)
                                                                                                                                                                              1573: 0x802C   PushConstU10            44 (0x002C)
                                                                                                                                                                              1574: 0x000D   PushMe                  
                                                                                                                                                                              1575: 0x550F   BranchSubrBack          1305
                                                                                                                                                                              1576: 0x8800   PushLocalI32            interrupts
                                                                                                                                                                              1577: 0x002C   IntNot                  
                                                                                                                                                                              1578: 0x007D   CvtIntToByt             
                                                                                                                                                                              1579: 0x001F   IntAnd                  
                                                                                                                                                                              1580: 0x8800   PushLocalI32            interrupts
                                                                                                                                                                              1581: 0x002D   IntOr                   
                                                                                                                                                                              1582: 0x000D   PushMe                  
                                                                                                                                                                              1583: 0x54F5   BranchSubrBack          1339

000594      End Sub                                                                                                                                                           1584: 0x0091   Return                  

000595      
000596      Public Sub SetEnableInterrupts(interrupts As Byte)                                                                                                                1585: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0

000597          write(CTRL_REG4, (read(CTRL_REG4) & ~interrupts) | interrupts) // clear interrupts,  enable/disable interrupts                                                1586: 0x802D   PushConstU10            45 (0x002D)
                                                                                                                                                                              1587: 0x802D   PushConstU10            45 (0x002D)
                                                                                                                                                                              1588: 0x000D   PushMe                  
                                                                                                                                                                              1589: 0x551D   BranchSubrBack          1305
                                                                                                                                                                              1590: 0x8800   PushLocalI32            interrupts
                                                                                                                                                                              1591: 0x002C   IntNot                  
                                                                                                                                                                              1592: 0x007D   CvtIntToByt             
                                                                                                                                                                              1593: 0x001F   IntAnd                  
                                                                                                                                                                              1594: 0x8800   PushLocalI32            interrupts
                                                                                                                                                                              1595: 0x002D   IntOr                   
                                                                                                                                                                              1596: 0x000D   PushMe                  
                                                                                                                                                                              1597: 0x5503   BranchSubrBack          1339

000598      End Sub                                                                                                                                                           1598: 0x0091   Return                  

000599      
000600      Public Sub SetInterruptsINT(interrupts As Byte)                                                                                                                   1599: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0

000601          'route interrupt to INT1 pin (ff sets all interrupts to INT1 , 00 to INT2)
000602          write(CTRL_REG5, (read(CTRL_REG5) & ~interrupts) | interrupts) // clear interrupts, set interrupts to INT1 (rest to INT2)                                     1600: 0x802E   PushConstU10            46 (0x002E)
                                                                                                                                                                              1601: 0x802E   PushConstU10            46 (0x002E)
                                                                                                                                                                              1602: 0x000D   PushMe                  
                                                                                                                                                                              1603: 0x552B   BranchSubrBack          1305
                                                                                                                                                                              1604: 0x8800   PushLocalI32            interrupts
                                                                                                                                                                              1605: 0x002C   IntNot                  
                                                                                                                                                                              1606: 0x007D   CvtIntToByt             
                                                                                                                                                                              1607: 0x001F   IntAnd                  
                                                                                                                                                                              1608: 0x8800   PushLocalI32            interrupts
                                                                                                                                                                              1609: 0x002D   IntOr                   
                                                                                                                                                                              1610: 0x000D   PushMe                  
                                                                                                                                                                              1611: 0x5511   BranchSubrBack          1339

000603      End Sub                                                                                                                                                           1612: 0x0091   Return                  

000604      
000605      Public Sub SetTransientCFG(transient As Byte)                                                                                                                     1613: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0

000606          'options are TELE | ZTEFE | YTEFE | XTEFE | HPF_BYP (latch enable, Z,Y,X enable, Filter disable)
000607          write(TRANSIENT_CFG, transient) // set transients config, High Pass Filter (bit 0) enabled by default                                                         1614: 0x801D   PushConstU10            29 (0x001D)
                                                                                                                                                                              1615: 0x8800   PushLocalI32            transient
                                                                                                                                                                              1616: 0x000D   PushMe                  
                                                                                                                                                                              1617: 0x5517   BranchSubrBack          1339

000608      End Sub                                                                                                                                                           1618: 0x0091   Return                  

000609      
000610      Public Sub SetTransientThreshold(threshold As Float)                                                                                                              1619: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0
                                                                                                                                                                              1620: 0xE020   AllocateStackSpace      ValTypeSize=1, RefTypeSize=0

000611          'A 7-bit unsigned number, with 0.063 g/LSB. The maximum threshold is ±8g (irrispective of Range setting)
000612          Dim thresholdByte As Byte = map_range(threshold, 0, 8.0, 0, 0x7f)                                                                                             1621: 0x8800   PushLocalI32            threshold
                                                                                                                                                                              1622: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1623: 0xEA08   PushConstFlt            8.0
                                                                                                                                                                              1624: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1625: 0x807F   PushConstU10            127 (0x007F)
                                                                                                                                                                              1626: 0x000D   PushMe                  
                                                                                                                                                                              1627: 0x5726   BranchSubrBack          822
                                                                                                                                                                              1628: 0x9001   PopLocalI32             thresholdByte

000613          If thresholdByte <= 0x7f Then                                                                                                                                 1629: 0x8801   PushLocalI32            thresholdByte
                                                                                                                                                                              1630: 0x807F   PushConstU10            127 (0x007F)
                                                                                                                                                                              1631: 0x3004   BranchGT                1636

000614              write(TRANSIENT_THS, thresholdByte)                                                                                                                       1632: 0x801F   PushConstU10            31 (0x001F)
                                                                                                                                                                              1633: 0x8801   PushLocalI32            thresholdByte
                                                                                                                                                                              1634: 0x000D   PushMe                  
                                                                                                                                                                              1635: 0x5529   BranchSubrBack          1339

000615          End If
000616      End Sub                                                                                                                                                           1636: 0x0091   Return                  

000617      
000618      Public Sub SetTransientCount(count As Byte)                                                                                                                       1637: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0

000619          'Set Duration in counts (if set to 0, causes interrupt immediately, once threshold exceeded)
000620          'The TRANSIENT_COUNT sets the minimum number of debounce counts continuously matching the condition where the
000621          'unsigned value of high - pass filtered data Is greater than the user - specified value of TRANSIENT_THS.
000622          write(TRANSIENT_COUNT, count)                                                                                                                                 1638: 0x8020   PushConstU10            32 (0x0020)
                                                                                                                                                                              1639: 0x8800   PushLocalI32            count
                                                                                                                                                                              1640: 0x000D   PushMe                  
                                                                                                                                                                              1641: 0x552F   BranchSubrBack          1339

000623      End Sub                                                                                                                                                           1642: 0x0091   Return                  

000624      
000625      Public Sub SetTransientDuration(duration As Float)                                                                                                                1643: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0
                                                                                                                                                                              1644: 0xE040   AllocateStackSpace      ValTypeSize=2, RefTypeSize=0

000626          'Set Duration in ms (if set to 0, causes interrupt immediately, once threshold exceeded)
000627          'The TRANSIENT_COUNT sets the minimum number of debounce counts continuously matching the condition where the
000628          'unsigned value of high - pass filtered data Is greater than the user - specified value of TRANSIENT_THS.
000629          'The duration in ms depends on the frequency, ie 50 Hz = 20ms per count, so 100ms = 5 counts
000630          'But is effected by mode also.... see table 66 p44 of DS
000631          Dim msPerCount As Float = GetmsPerCount()                                                                                                                     1645: 0x000D   PushMe                  
                                                                                                                                                                              1646: 0x5709   BranchSubrBack          870
                                                                                                                                                                              1647: 0x9001   PopLocalI32             msPerCount

000632          Dim count As Byte = (duration / msPerCount).ToByte                                                                                                            1648: 0x8800   PushLocalI32            duration
                                                                                                                                                                              1649: 0x8801   PushLocalI32            msPerCount
                                                                                                                                                                              1650: 0x003B   FltDiv                  
                                                                                                                                                                              1651: 0x007B   CvtFltToInt             
                                                                                                                                                                              1652: 0x007D   CvtIntToByt             
                                                                                                                                                                              1653: 0x9002   PopLocalI32             count

000633          write(TRANSIENT_COUNT, count)                                                                                                                                 1654: 0x8020   PushConstU10            32 (0x0020)
                                                                                                                                                                              1655: 0x8802   PushLocalI32            count
                                                                                                                                                                              1656: 0x000D   PushMe                  
                                                                                                                                                                              1657: 0x553F   BranchSubrBack          1339

000634      End Sub                                                                                                                                                           1658: 0x0091   Return                  

000635      
000636      Public Sub EnablePL(enable As Boolean)                                                                                                                            1659: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0

000637          If enable Then                                                                                                                                                1660: 0x8800   PushLocalI32            enable
                                                                                                                                                                              1661: 0x3C0B   BranchFalse             1673

000638              write(PL_CFG, (read(PL_CFG) & ~PL_EN_MASK) | PL_EN_MASK) // Enable P/L (debounce enabled by default)                                                      1662: 0x8011   PushConstU10            17 (0x0011)
                                                                                                                                                                              1663: 0x8011   PushConstU10            17 (0x0011)
                                                                                                                                                                              1664: 0x000D   PushMe                  
                                                                                                                                                                              1665: 0x5569   BranchSubrBack          1305
                                                                                                                                                                              1666: 0x80BF   PushConstU10            191 (0x00BF)
                                                                                                                                                                              1667: 0x001F   IntAnd                  
                                                                                                                                                                              1668: 0x8040   PushConstU10            64 (0x0040)
                                                                                                                                                                              1669: 0x002D   IntOr                   
                                                                                                                                                                              1670: 0x000D   PushMe                  
                                                                                                                                                                              1671: 0x554D   BranchSubrBack          1339

                                                                                                                                                                              1672: 0x4008   Branch                  1681
000639          Else                                                                                                                                                          

000640              write(PL_CFG, (read(PL_CFG) & ~PL_EN_MASK)) // Disable P/L (debounce enabled by default)                                                                  1673: 0x8011   PushConstU10            17 (0x0011)
                                                                                                                                                                              1674: 0x8011   PushConstU10            17 (0x0011)
                                                                                                                                                                              1675: 0x000D   PushMe                  
                                                                                                                                                                              1676: 0x5574   BranchSubrBack          1305
                                                                                                                                                                              1677: 0x80BF   PushConstU10            191 (0x00BF)
                                                                                                                                                                              1678: 0x001F   IntAnd                  
                                                                                                                                                                              1679: 0x000D   PushMe                  
                                                                                                                                                                              1680: 0x5556   BranchSubrBack          1339

000641          End If
000642      End Sub                                                                                                                                                           1681: 0x0091   Return                  

000643      
000644      Public Sub EnablePLDebounce(enable As Boolean)                                                                                                                    1682: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0

000645          '0 Decrements debounce whenever the condition of interest is no longer valid.
000646          '1 Clears the counter whenever the condition of interest is no longer valid. (default)
000647          If enable Then                                                                                                                                                1683: 0x8800   PushLocalI32            enable
                                                                                                                                                                              1684: 0x3C0B   BranchFalse             1696

000648              write(PL_CFG, (read(PL_CFG) & ~DBCNTM_MASK) | DBCNTM_MASK) // Enable P/L (debounce enabled by default)                                                    1685: 0x8011   PushConstU10            17 (0x0011)
                                                                                                                                                                              1686: 0x8011   PushConstU10            17 (0x0011)
                                                                                                                                                                              1687: 0x000D   PushMe                  
                                                                                                                                                                              1688: 0x5580   BranchSubrBack          1305
                                                                                                                                                                              1689: 0x807F   PushConstU10            127 (0x007F)
                                                                                                                                                                              1690: 0x001F   IntAnd                  
                                                                                                                                                                              1691: 0x8080   PushConstU10            128 (0x0080)
                                                                                                                                                                              1692: 0x002D   IntOr                   
                                                                                                                                                                              1693: 0x000D   PushMe                  
                                                                                                                                                                              1694: 0x5564   BranchSubrBack          1339

                                                                                                                                                                              1695: 0x4008   Branch                  1704
000649          Else                                                                                                                                                          

000650              write(PL_CFG, (read(PL_CFG) & ~DBCNTM_MASK)) // Disable P/L (debounce enabled by default)                                                                 1696: 0x8011   PushConstU10            17 (0x0011)
                                                                                                                                                                              1697: 0x8011   PushConstU10            17 (0x0011)
                                                                                                                                                                              1698: 0x000D   PushMe                  
                                                                                                                                                                              1699: 0x558B   BranchSubrBack          1305
                                                                                                                                                                              1700: 0x807F   PushConstU10            127 (0x007F)
                                                                                                                                                                              1701: 0x001F   IntAnd                  
                                                                                                                                                                              1702: 0x000D   PushMe                  
                                                                                                                                                                              1703: 0x556D   BranchSubrBack          1339

000651          End If
000652      End Sub                                                                                                                                                           1704: 0x0091   Return                  

000653      
000654      Public Sub SetPLZLOCK(zlock As Byte)                                                                                                                              1705: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0

000655          'The Z-Lock angle compensation bits allows you to adjust the Z-lockout region from 14° up to 43°.
000656          'ZLOCK (bits 0,1,2) 0 = 14° (min), 0x04 = 29° (default) x07 = 43° (max)
000657          'Z-lock angle threshold(1)
000658          'Step size is 4°
000659          'Range is from 14° to 43°
000660          If zlock <= 0x07 Then                                                                                                                                         1706: 0x8800   PushLocalI32            zlock
                                                                                                                                                                              1707: 0x8007   PushConstU10            7 (0x0007)
                                                                                                                                                                              1708: 0x300A   BranchGT                1719

000661              write(PL_BF_ZCOMP, (read(PL_BF_ZCOMP) & ~ZLOCK_MASK) | zlock)                                                                                             1709: 0x8013   PushConstU10            19 (0x0013)
                                                                                                                                                                              1710: 0x8013   PushConstU10            19 (0x0013)
                                                                                                                                                                              1711: 0x000D   PushMe                  
                                                                                                                                                                              1712: 0x5598   BranchSubrBack          1305
                                                                                                                                                                              1713: 0x80F8   PushConstU10            248 (0x00F8)
                                                                                                                                                                              1714: 0x001F   IntAnd                  
                                                                                                                                                                              1715: 0x8800   PushLocalI32            zlock
                                                                                                                                                                              1716: 0x002D   IntOr                   
                                                                                                                                                                              1717: 0x000D   PushMe                  
                                                                                                                                                                              1718: 0x557C   BranchSubrBack          1339

000662          End If
000663      End Sub                                                                                                                                                           1719: 0x0091   Return                  

000664      
000665      Public Sub SetPLZLOCKDegrees(zlock As Float)                                                                                                                      1720: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0
                                                                                                                                                                              1721: 0xE020   AllocateStackSpace      ValTypeSize=1, RefTypeSize=0

000666          'The Z-Lock angle compensation bits allows you to adjust the Z-lockout region from 14° up to 43°.
000667          'ZLOCK (bits 0,1,2) 0 = 14° (min), 0x04 = 29° (default) x07 = 43° (max)
000668          'Z-lock angle threshold(1)
000669          'Step size is 4°
000670          'Range is from 14° to 43°
000671          Dim zlockByte As Byte = map_range(zlock, 14.0, 43.0, 0, 0x07)                                                                                                 1722: 0x8800   PushLocalI32            zlock
                                                                                                                                                                              1723: 0xEA0E   PushConstFlt            14.0
                                                                                                                                                                              1724: 0xEA2B   PushConstFlt            43.0
                                                                                                                                                                              1725: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1726: 0x8007   PushConstU10            7 (0x0007)
                                                                                                                                                                              1727: 0x000D   PushMe                  
                                                                                                                                                                              1728: 0x578B   BranchSubrBack          822
                                                                                                                                                                              1729: 0x9001   PopLocalI32             zlockByte

000672          If zlockByte <= 0x07 Then                                                                                                                                     1730: 0x8801   PushLocalI32            zlockByte
                                                                                                                                                                              1731: 0x8007   PushConstU10            7 (0x0007)
                                                                                                                                                                              1732: 0x300A   BranchGT                1743

000673              write(PL_BF_ZCOMP, (read(PL_BF_ZCOMP) & ~ZLOCK_MASK) | zlockByte)                                                                                         1733: 0x8013   PushConstU10            19 (0x0013)
                                                                                                                                                                              1734: 0x8013   PushConstU10            19 (0x0013)
                                                                                                                                                                              1735: 0x000D   PushMe                  
                                                                                                                                                                              1736: 0x55B0   BranchSubrBack          1305
                                                                                                                                                                              1737: 0x80F8   PushConstU10            248 (0x00F8)
                                                                                                                                                                              1738: 0x001F   IntAnd                  
                                                                                                                                                                              1739: 0x8801   PushLocalI32            zlockByte
                                                                                                                                                                              1740: 0x002D   IntOr                   
                                                                                                                                                                              1741: 0x000D   PushMe                  
                                                                                                                                                                              1742: 0x5594   BranchSubrBack          1339

000674          End If
000675      End Sub                                                                                                                                                           1743: 0x0091   Return                  

000676      
000677      Public Sub SetPLBFThreshold(threshold As Float)                                                                                                                   1744: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0
                                                                                                                                                                              1745: 0xE020   AllocateStackSpace      ValTypeSize=1, RefTypeSize=0

000678          'B/F = bits 6,7 see table 44 for setting (suggest leave at default 75°)
000679          'Back/Front trip angle threshold(1)
000680          'Step size = 5°
000681          'Range = ±(65° to 80°)
000682          Dim thresholdByte As Byte = map_range(threshold, 65.0, 80.0, 0, 0x04)                                                                                         1746: 0x8800   PushLocalI32            threshold
                                                                                                                                                                              1747: 0xEA41   PushConstFlt            65.0
                                                                                                                                                                              1748: 0xEA50   PushConstFlt            80.0
                                                                                                                                                                              1749: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1750: 0x8004   PushConstU10            4 (0x0004)
                                                                                                                                                                              1751: 0x000D   PushMe                  
                                                                                                                                                                              1752: 0x57A3   BranchSubrBack          822
                                                                                                                                                                              1753: 0x9001   PopLocalI32             thresholdByte

000683          If thresholdByte <= 0x04 Then                                                                                                                                 1754: 0x8801   PushLocalI32            thresholdByte
                                                                                                                                                                              1755: 0x8004   PushConstU10            4 (0x0004)
                                                                                                                                                                              1756: 0x300C   BranchGT                1769

000684              write(PL_BF_ZCOMP, (read(PL_BF_ZCOMP) & ~BKFR_MASK) | (thresholdByte << 6))                                                                               1757: 0x8013   PushConstU10            19 (0x0013)
                                                                                                                                                                              1758: 0x8013   PushConstU10            19 (0x0013)
                                                                                                                                                                              1759: 0x000D   PushMe                  
                                                                                                                                                                              1760: 0x55C8   BranchSubrBack          1305
                                                                                                                                                                              1761: 0x803F   PushConstU10            63 (0x003F)
                                                                                                                                                                              1762: 0x001F   IntAnd                  
                                                                                                                                                                              1763: 0x8801   PushLocalI32            thresholdByte
                                                                                                                                                                              1764: 0x8006   PushConstU10            6 (0x0006)
                                                                                                                                                                              1765: 0x002E   IntShl                  
                                                                                                                                                                              1766: 0x002D   IntOr                   
                                                                                                                                                                              1767: 0x000D   PushMe                  
                                                                                                                                                                              1768: 0x55AE   BranchSubrBack          1339

000685          End If
000686      End Sub                                                                                                                                                           1769: 0x0091   Return                  

000687      
000688      Public Sub SetPLThreshold(threshold As Float)                                                                                                                     1770: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0
                                                                                                                                                                              1771: 0xE020   AllocateStackSpace      ValTypeSize=1, RefTypeSize=0

000689          '(bits 3,4,5,6,7)
000690          'Portrait/Landscape trip threshold angle (from 15° to 75°) in 5 deg steps
000691          'See Table 47, “Threshold angle thresholds look-up table,” on
000692          'page 36 of DS for the values with the corresponding approximate threshold angle.
000693          '0x10 = 45° default
000694          Dim thresholdByte As Byte = map_range(threshold, 15.0, 75.0, 0x07, 0x19)                                                                                      1772: 0x8800   PushLocalI32            threshold
                                                                                                                                                                              1773: 0xEA0F   PushConstFlt            15.0
                                                                                                                                                                              1774: 0xEA4B   PushConstFlt            75.0
                                                                                                                                                                              1775: 0x8007   PushConstU10            7 (0x0007)
                                                                                                                                                                              1776: 0x8019   PushConstU10            25 (0x0019)
                                                                                                                                                                              1777: 0x000D   PushMe                  
                                                                                                                                                                              1778: 0x57BD   BranchSubrBack          822
                                                                                                                                                                              1779: 0x9001   PopLocalI32             thresholdByte

000695          If thresholdByte >= 0x07 And thresholdByte <= 0x19 Then                                                                                                       1780: 0x8801   PushLocalI32            thresholdByte
                                                                                                                                                                              1781: 0x8007   PushConstU10            7 (0x0007)
                                                                                                                                                                              1782: 0x0023   IntCmpGE                
                                                                                                                                                                              1783: 0x8801   PushLocalI32            thresholdByte
                                                                                                                                                                              1784: 0x8019   PushConstU10            25 (0x0019)
                                                                                                                                                                              1785: 0x0025   IntCmpLE                
                                                                                                                                                                              1786: 0x001F   IntAnd                  
                                                                                                                                                                              1787: 0x3C0C   BranchFalse             1800

000696              write(PL_THS, (read(PL_THS) & ~P_L_THS_MASK) | (thresholdByte << 4))                                                                                      1788: 0x8014   PushConstU10            20 (0x0014)
                                                                                                                                                                              1789: 0x8014   PushConstU10            20 (0x0014)
                                                                                                                                                                              1790: 0x000D   PushMe                  
                                                                                                                                                                              1791: 0x55E7   BranchSubrBack          1305
                                                                                                                                                                              1792: 0x8007   PushConstU10            7 (0x0007)
                                                                                                                                                                              1793: 0x001F   IntAnd                  
                                                                                                                                                                              1794: 0x8801   PushLocalI32            thresholdByte
                                                                                                                                                                              1795: 0x8004   PushConstU10            4 (0x0004)
                                                                                                                                                                              1796: 0x002E   IntShl                  
                                                                                                                                                                              1797: 0x002D   IntOr                   
                                                                                                                                                                              1798: 0x000D   PushMe                  
                                                                                                                                                                              1799: 0x55CD   BranchSubrBack          1339

000697          End If
000698      End Sub                                                                                                                                                           1800: 0x0091   Return                  

000699      
000700      Public Sub SetPLHysteresis(hysteresis As Float)                                                                                                                   1801: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0
                                                                                                                                                                              1802: 0xE020   AllocateStackSpace      ValTypeSize=1, RefTypeSize=0

000701          '(bits 0,1,2)
000702          'This angle is added to the threshold angle, for a smoother transition
000703          'from portrait to landscape and landscape to portrait.
000704          'This angle ranges from 0° to ±24°.
000705          '±14° (default)
000706          Dim hysteresisByte As Byte = map_range(hysteresis, 0, 24.0, 0, 0x07)                                                                                          1803: 0x8800   PushLocalI32            hysteresis
                                                                                                                                                                              1804: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1805: 0xEA18   PushConstFlt            24.0
                                                                                                                                                                              1806: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1807: 0x8007   PushConstU10            7 (0x0007)
                                                                                                                                                                              1808: 0x000D   PushMe                  
                                                                                                                                                                              1809: 0x57DC   BranchSubrBack          822
                                                                                                                                                                              1810: 0x9001   PopLocalI32             hysteresisByte

000707          If hysteresisByte <= 0x07 Then                                                                                                                                1811: 0x8801   PushLocalI32            hysteresisByte
                                                                                                                                                                              1812: 0x8007   PushConstU10            7 (0x0007)
                                                                                                                                                                              1813: 0x300A   BranchGT                1824

000708              write(PL_THS, (read(PL_THS) & ~HYS_MASK) | hysteresisByte)                                                                                                1814: 0x8014   PushConstU10            20 (0x0014)
                                                                                                                                                                              1815: 0x8014   PushConstU10            20 (0x0014)
                                                                                                                                                                              1816: 0x000D   PushMe                  
                                                                                                                                                                              1817: 0x5601   BranchSubrBack          1305
                                                                                                                                                                              1818: 0x80F8   PushConstU10            248 (0x00F8)
                                                                                                                                                                              1819: 0x001F   IntAnd                  
                                                                                                                                                                              1820: 0x8801   PushLocalI32            hysteresisByte
                                                                                                                                                                              1821: 0x002D   IntOr                   
                                                                                                                                                                              1822: 0x000D   PushMe                  
                                                                                                                                                                              1823: 0x55E5   BranchSubrBack          1339

000709          End If
000710      End Sub                                                                                                                                                           1824: 0x0091   Return                  

000711      
000712      Public Sub SetPLCount(count As Byte)                                                                                                                              1825: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0

000713          'The debounce counter weighting (time step) changes, based on the ODR and the
000714          'Oversampling mode. Table 40 explains the time step value for all sample rates and all
000715          'Oversampling modes.
000716          write(PL_COUNT, count) // debounce counter 0x10 = 320ms (at 50 hz)                                                                                            1826: 0x8012   PushConstU10            18 (0x0012)
                                                                                                                                                                              1827: 0x8800   PushLocalI32            count
                                                                                                                                                                              1828: 0x000D   PushMe                  
                                                                                                                                                                              1829: 0x55EB   BranchSubrBack          1339

000717      End Sub                                                                                                                                                           1830: 0x0091   Return                  

000718      
000719      Public Sub SetPLDuration(duration As Float)                                                                                                                       1831: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0
                                                                                                                                                                              1832: 0xE040   AllocateStackSpace      ValTypeSize=2, RefTypeSize=0

000720          'Set Duration in ms (if set to 0, causes interrupt immediately, once threshold exceeded)
000721          'The Portrait/Landscape Debounce register sets the debounce count for the orientation state transition. The minimum debounce
000722          'latency is determined by the data rate (which is set by the product of the selected system ODR and PL_COUNT registers).
000723          'The duration in ms depends on the frequency, ie 50 Hz = 20ms per count, so 100ms = 5 counts
000724          'But is effected by mode also.... see table 40 p34 of DS
000725          Dim msPerCount As Float = GetmsPerCount()                                                                                                                     1833: 0x000D   PushMe                  
                                                                                                                                                                              1834: 0x57C5   BranchSubrBack          870
                                                                                                                                                                              1835: 0x9001   PopLocalI32             msPerCount

000726          Dim count As Byte = (duration / msPerCount).ToByte                                                                                                            1836: 0x8800   PushLocalI32            duration
                                                                                                                                                                              1837: 0x8801   PushLocalI32            msPerCount
                                                                                                                                                                              1838: 0x003B   FltDiv                  
                                                                                                                                                                              1839: 0x007B   CvtFltToInt             
                                                                                                                                                                              1840: 0x007D   CvtIntToByt             
                                                                                                                                                                              1841: 0x9002   PopLocalI32             count

000727          write(PL_COUNT, count)                                                                                                                                        1842: 0x8012   PushConstU10            18 (0x0012)
                                                                                                                                                                              1843: 0x8802   PushLocalI32            count
                                                                                                                                                                              1844: 0x000D   PushMe                  
                                                                                                                                                                              1845: 0x55FB   BranchSubrBack          1339

000728      End Sub                                                                                                                                                           1846: 0x0091   Return                  

000729      
000730      Public Sub calibrate()                                                                                                                                            1847: 0x1800   EntryPoint              ValTypParams=0, RefTypParams=0
                                                                                                                                                                              1848: 0xE043   AllocateStackSpace      ValTypeSize=2, RefTypeSize=3

000731          'Calibration routine, don't know if this works or not!
000732          Dim accel_bias As ListOfInteger = New ListOfInteger                                                                                                           1849: 0x800E   PushConstU10            14 (0x000E)
                                                                                                                                                                              1850: 0x0010   ClassNew                
                                                                                                                                                                              1851: 0x9400   PopLocalRef             accel_bias

000733          accel_bias.Add(0)                                                                                                                                             1852: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1853: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1854: 0x00A3   ListAdd                 

000734          accel_bias.Add(0)                                                                                                                                             1855: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1856: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1857: 0x00A3   ListAdd                 

000735          accel_bias.Add(0)                                                                                                                                             1858: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1859: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1860: 0x00A3   ListAdd                 

000736          Dim fcount As Integer
000737          Dim temp As ListOfShort = New ListOfShort                                                                                                                     1861: 0x800D   PushConstU10            13 (0x000D)
                                                                                                                                                                              1862: 0x0010   ClassNew                
                                                                                                                                                                              1863: 0x9401   PopLocalRef             temp

000738          
000739          // Clear all interrupts by reading the data output and F_STATUS registers
000740          temp = readAccelData()                                                                                                                                        1864: 0x000D   PushMe                  
                                                                                                                                                                              1865: 0x56FD   BranchSubrBack          1101
                                                                                                                                                                              1866: 0x9401   PopLocalRef             temp

000741          read(F_STATUS)                                                                                                                                                1867: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1868: 0x000D   PushMe                  
                                                                                                                                                                              1869: 0x5635   BranchSubrBack          1305
                                                                                                                                                                              1870: 0xE420   FreeStackSpace          ValTypeSize=1, RefTypeSize=0

000742          
000743          Standby() // Must be in standby to change registers                                                                                                           1871: 0x000D   PushMe                  
                                                                                                                                                                              1872: 0x565A   BranchSubrBack          1271

000744          
000745          SetWakeModeFrequency(AODR_100HZ) // select 100 Hz ODR                                                                                                         1873: 0x8018   PushConstU10            24 (0x0018)
                                                                                                                                                                              1874: 0x000D   PushMe                  
                                                                                                                                                                              1875: 0x55E3   BranchSubrBack          1393

000746          fcount = 100 // sample for 1 second                                                                                                                           1876: 0x8064   PushConstU10            100 (0x0064)
                                                                                                                                                                              1877: 0x9000   PopLocalI32             fcount

000747          SetRange(FULL_SCALE_2G) // select 2 g full scale                                                                                                              1878: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1879: 0x000D   PushMe                  
                                                                                                                                                                              1880: 0x55FC   BranchSubrBack          1373

000748          Dim accelsensitivity As Short = 1024 // 1024 LSB/g                                                                                                            1881: 0xE90A   PushConstBit            1<<10  (0x00000400 Or 1024)
                                                                                                                                                                              1882: 0x9001   PopLocalI32             accelsensitivity

000749          
000750          Active() // Set to active to start collecting data                                                                                                            1883: 0x000D   PushMe                  
                                                                                                                                                                              1884: 0x565C   BranchSubrBack          1281

000751          
                                                                                                                                                                              1885: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1886: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1887: 0x0004   DupVal2                 
                                                                                                                                                                              1888: 0x0031   IntSub                  
                                                                                                                                                                              1889: 0x0002   ExchangeVal             
                                                                                                                                                                              1890: 0x8800   PushLocalI32            fcount
000752          For ii As Integer = 0 To fcount                                                                                                                               1891: 0x4827   BranchForNextInt        1931

000753              temp = readAccelData()                                                                                                                                    1892: 0x000D   PushMe                  
                                                                                                                                                                              1893: 0x5719   BranchSubrBack          1101
                                                                                                                                                                              1894: 0x9401   PopLocalRef             temp

000754              
000755              accel_bias(0) += temp(0)                                                                                                                                  1895: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1896: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1897: 0x00B5   ListItemPut             
                                                                                                                                                                              1898: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1899: 0x8C01   PushLocalRef            temp
                                                                                                                                                                              1900: 0x00B4   ListItemGet             
                                                                                                                                                                              1901: 0x001E   IntAdd                  
                                                                                                                                                                              1902: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1903: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1904: 0x00B5   ListItemPut             

000756              accel_bias(1) += temp(1)                                                                                                                                  1905: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1906: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1907: 0x00B5   ListItemPut             
                                                                                                                                                                              1908: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1909: 0x8C01   PushLocalRef            temp
                                                                                                                                                                              1910: 0x00B4   ListItemGet             
                                                                                                                                                                              1911: 0x001E   IntAdd                  
                                                                                                                                                                              1912: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1913: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1914: 0x00B5   ListItemPut             

000757              accel_bias(2) += temp(2)                                                                                                                                  1915: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              1916: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1917: 0x00B5   ListItemPut             
                                                                                                                                                                              1918: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              1919: 0x8C01   PushLocalRef            temp
                                                                                                                                                                              1920: 0x00B4   ListItemGet             
                                                                                                                                                                              1921: 0x001E   IntAdd                  
                                                                                                                                                                              1922: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              1923: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1924: 0x00B5   ListItemPut             

000758              
000759              Thread.Sleep(15000) // wait for a new data reading (100 Hz)                                                                                               1925: 0x0110   PushConstI32            15000 (0x00003A98)
                                                                                                                                                                              1926: 0x3A98                           
                                                                                                                                                                              1927: 0x0000                           
                                                                                                                                                                              1928: 0x00D5   ThreadSleep             
                                                                                                                                                                              1929: 0xE420   FreeStackSpace          ValTypeSize=1, RefTypeSize=0

                                                                                                                                                                              1930: 0x5028   BranchBack              1891
000760          Next                                                                                                                                                          1931: 0xE460   FreeStackSpace          ValTypeSize=3, RefTypeSize=0

000761          
000762          accel_bias(0) = accel_bias(0) / fcount // get average values                                                                                                  1932: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1933: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1934: 0x00B4   ListItemGet             
                                                                                                                                                                              1935: 0x8800   PushLocalI32            fcount
                                                                                                                                                                              1936: 0x0078   CvtIntToFlt1            
                                                                                                                                                                              1937: 0x007E   CvtIntToFlt             
                                                                                                                                                                              1938: 0x003B   FltDiv                  
                                                                                                                                                                              1939: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1940: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1941: 0x00B5   ListItemPut             

000763          accel_bias(1) = accel_bias(1) / fcount                                                                                                                        1942: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1943: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1944: 0x00B4   ListItemGet             
                                                                                                                                                                              1945: 0x8800   PushLocalI32            fcount
                                                                                                                                                                              1946: 0x0078   CvtIntToFlt1            
                                                                                                                                                                              1947: 0x007E   CvtIntToFlt             
                                                                                                                                                                              1948: 0x003B   FltDiv                  
                                                                                                                                                                              1949: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1950: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1951: 0x00B5   ListItemPut             

000764          accel_bias(2) = accel_bias(2) / fcount                                                                                                                        1952: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              1953: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1954: 0x00B4   ListItemGet             
                                                                                                                                                                              1955: 0x8800   PushLocalI32            fcount
                                                                                                                                                                              1956: 0x0078   CvtIntToFlt1            
                                                                                                                                                                              1957: 0x007E   CvtIntToFlt             
                                                                                                                                                                              1958: 0x003B   FltDiv                  
                                                                                                                                                                              1959: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              1960: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1961: 0x00B5   ListItemPut             

000765          
000766          If (accel_bias(2) > 0) Then                                                                                                                                   1962: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              1963: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1964: 0x00B4   ListItemGet             
                                                                                                                                                                              1965: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1966: 0x2C09   BranchLE                1976

000767              accel_bias(2) -= accelsensitivity // Remove gravity from the z-axis accelerometer bias calculation                                                        1967: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              1968: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1969: 0x00B5   ListItemPut             
                                                                                                                                                                              1970: 0x8801   PushLocalI32            accelsensitivity
                                                                                                                                                                              1971: 0x0031   IntSub                  
                                                                                                                                                                              1972: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              1973: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1974: 0x00B5   ListItemPut             

                                                                                                                                                                              1975: 0x4008   Branch                  1984
000768          Else                                                                                                                                                          

000769              accel_bias(2) += accelsensitivity                                                                                                                         1976: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              1977: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1978: 0x00B5   ListItemPut             
                                                                                                                                                                              1979: 0x8801   PushLocalI32            accelsensitivity
                                                                                                                                                                              1980: 0x001E   IntAdd                  
                                                                                                                                                                              1981: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              1982: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1983: 0x00B5   ListItemPut             

000770          End If
000771          
000772          Dim rawData As ListOfByte = New ListOfByte                                                                                                                    1984: 0x800C   PushConstU10            12 (0x000C)
                                                                                                                                                                              1985: 0x0010   ClassNew                
                                                                                                                                                                              1986: 0x9402   PopLocalRef             rawData

000773          rawData.Add((-accel_bias(0) / 2).ToByte& 0xff) // get average values                                                                                          1987: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1988: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1989: 0x00B4   ListItemGet             
                                                                                                                                                                              1990: 0x002B   IntNeg                  
                                                                                                                                                                              1991: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              1992: 0x0078   CvtIntToFlt1            
                                                                                                                                                                              1993: 0x007E   CvtIntToFlt             
                                                                                                                                                                              1994: 0x003B   FltDiv                  
                                                                                                                                                                              1995: 0x007B   CvtFltToInt             
                                                                                                                                                                              1996: 0x007D   CvtIntToByt             
                                                                                                                                                                              1997: 0x80FF   PushConstU10            255 (0x00FF)
                                                                                                                                                                              1998: 0x001F   IntAnd                  
                                                                                                                                                                              1999: 0x8C02   PushLocalRef            rawData
                                                                                                                                                                              2000: 0x00A3   ListAdd                 

000774          rawData.Add((-accel_bias(1) / 2).ToByte& 0xff) // get average values                                                                                          2001: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              2002: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              2003: 0x00B4   ListItemGet             
                                                                                                                                                                              2004: 0x002B   IntNeg                  
                                                                                                                                                                              2005: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              2006: 0x0078   CvtIntToFlt1            
                                                                                                                                                                              2007: 0x007E   CvtIntToFlt             
                                                                                                                                                                              2008: 0x003B   FltDiv                  
                                                                                                                                                                              2009: 0x007B   CvtFltToInt             
                                                                                                                                                                              2010: 0x007D   CvtIntToByt             
                                                                                                                                                                              2011: 0x80FF   PushConstU10            255 (0x00FF)
                                                                                                                                                                              2012: 0x001F   IntAnd                  
                                                                                                                                                                              2013: 0x8C02   PushLocalRef            rawData
                                                                                                                                                                              2014: 0x00A3   ListAdd                 

000775          rawData.Add((-accel_bias(2) / 2).ToByte& 0xff) // get average values                                                                                          2015: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              2016: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              2017: 0x00B4   ListItemGet             
                                                                                                                                                                              2018: 0x002B   IntNeg                  
                                                                                                                                                                              2019: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              2020: 0x0078   CvtIntToFlt1            
                                                                                                                                                                              2021: 0x007E   CvtIntToFlt             
                                                                                                                                                                              2022: 0x003B   FltDiv                  
                                                                                                                                                                              2023: 0x007B   CvtFltToInt             
                                                                                                                                                                              2024: 0x007D   CvtIntToByt             
                                                                                                                                                                              2025: 0x80FF   PushConstU10            255 (0x00FF)
                                                                                                                                                                              2026: 0x001F   IntAnd                  
                                                                                                                                                                              2027: 0x8C02   PushLocalRef            rawData
                                                                                                                                                                              2028: 0x00A3   ListAdd                 

000776          
000777          Standby() // Must be in standby to change registers                                                                                                           2029: 0x000D   PushMe                  
                                                                                                                                                                              2030: 0x56F8   BranchSubrBack          1271

000778          
000779          write(OFF_X, rawData(0)) // X-axis compensation                                                                                                               2031: 0x802F   PushConstU10            47 (0x002F)
                                                                                                                                                                              2032: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              2033: 0x8C02   PushLocalRef            rawData
                                                                                                                                                                              2034: 0x00B4   ListItemGet             
                                                                                                                                                                              2035: 0x000D   PushMe                  
                                                                                                                                                                              2036: 0x56BA   BranchSubrBack          1339

000780          write(OFF_Y, rawData(1)) // Y-axis compensation                                                                                                               2037: 0x8030   PushConstU10            48 (0x0030)
                                                                                                                                                                              2038: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              2039: 0x8C02   PushLocalRef            rawData
                                                                                                                                                                              2040: 0x00B4   ListItemGet             
                                                                                                                                                                              2041: 0x000D   PushMe                  
                                                                                                                                                                              2042: 0x56C0   BranchSubrBack          1339

000781          write(OFF_Z, rawData(2)) // z-axis compensation                                                                                                               2043: 0x8031   PushConstU10            49 (0x0031)
                                                                                                                                                                              2044: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              2045: 0x8C02   PushLocalRef            rawData
                                                                                                                                                                              2046: 0x00B4   ListItemGet             
                                                                                                                                                                              2047: 0x000D   PushMe                  
                                                                                                                                                                              2048: 0x56C6   BranchSubrBack          1339

000782          
000783          Active() // Set to active to start reading                                                                                                                    2049: 0x000D   PushMe                  
                                                                                                                                                                              2050: 0x5702   BranchSubrBack          1281

000784      End Sub                                                                                                                                                           2051: 0x0091   Return                  

000785      
000786      'ConfigureShockInterrupt - configures device to interrupt on shock (currently will interupt on any axis, x,y,z axis configuration can be added later)
000787      '
000788      'threshold As Float - trigger threshold (0.0 Gs ~ 8 Gs), 0.063mg steps
000789      'Duration As Float - Duration for threshold to be present to active interrupt (0 ms (immediate) to 5100ms), 20ms steps @ 50Hz
000790      Public Function ConfigureShockInterrupt(threshold As Float, duration As Float) As Boolean                                                                         2052: 0x1820   EntryPoint              ValTypParams=2, RefTypParams=0
                                                                                                                                                                              2053: 0xE020   AllocateStackSpace      ValTypeSize=1, RefTypeSize=0

000791          Dim result As Boolean = False
000792          'threshold in g 0 - 8.0
000793          'duration in ms
000794          
000795          If ((threshold >= LOW_TRIGGER_THRESHOLD And threshold <= HIGH_TRIGGER_THRESHOLD)) And ((duration >= LOW_DURATION_MS And duration <= HIGH_DURATION_MS)) Then   2054: 0x8800   PushLocalI32            threshold
                                                                                                                                                                              2055: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              2056: 0x003A   FltCmp                  
                                                                                                                                                                              2057: 0x0023   IntCmpGE                
                                                                                                                                                                              2058: 0x8800   PushLocalI32            threshold
                                                                                                                                                                              2059: 0xEA08   PushConstFlt            8.0
                                                                                                                                                                              2060: 0x003A   FltCmp                  
                                                                                                                                                                              2061: 0x0025   IntCmpLE                
                                                                                                                                                                              2062: 0x001F   IntAnd                  
                                                                                                                                                                              2063: 0x8801   PushLocalI32            duration
                                                                                                                                                                              2064: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              2065: 0x003A   FltCmp                  
                                                                                                                                                                              2066: 0x0023   IntCmpGE                
                                                                                                                                                                              2067: 0x8801   PushLocalI32            duration
                                                                                                                                                                              2068: 0x0110   PushConstI32            1168072704 (0x459F6000)
                                                                                                                                                                              2069: 0x6000                           
                                                                                                                                                                              2070: 0x459F                           
                                                                                                                                                                              2071: 0x003A   FltCmp                  
                                                                                                                                                                              2072: 0x0025   IntCmpLE                
                                                                                                                                                                              2073: 0x001F   IntAnd                  
                                                                                                                                                                              2074: 0x001F   IntAnd                  
                                                                                                                                                                              2075: 0x3C2E   BranchFalse             2122

000796              
000797              'Put device in standby mode (can only write registers in Standby mode)
000798              Standby()                                                                                                                                                 2076: 0x000D   PushMe                  
                                                                                                                                                                              2077: 0x5727   BranchSubrBack          1271

000799              
000800              'Setup the 3 data rate bits, from DR 0 to 7
000801              SetWakeModeFrequency(AODR_50HZ) // set 50 Hz Wake Mode frequency                                                                                          2078: 0x8020   PushConstU10            32 (0x0020)
                                                                                                                                                                              2079: 0x000D   PushMe                  
                                                                                                                                                                              2080: 0x56B0   BranchSubrBack          1393

000802              'Setup the 2 data rate bits, from SDR 0 to 4
000803              SetSleepModeFrequency(SODR_12_5HZ) // set sleep mode frequency to 12.5 Hz                                                                                 2081: 0x8040   PushConstU10            64 (0x0040)
                                                                                                                                                                              2082: 0x000D   PushMe                  
                                                                                                                                                                              2083: 0x5677   BranchSubrBack          1453

000804              'set duration (in ms) before device auto sleeps (set wake mode frequency first)
000805              SetSleepModeDuration(2000)                                                                                                                                2084: 0x0110   PushConstI32            2000 (0x000007D0)
                                                                                                                                                                              2085: 0x07D0                           
                                                                                                                                                                              2086: 0x0000                           
                                                                                                                                                                              2087: 0x007E   CvtIntToFlt             
                                                                                                                                                                              2088: 0x000D   PushMe                  
                                                                                                                                                                              2089: 0x5667   BranchSubrBack          1475

000806              'Low Power Mode (sleep mode on)
000807              SetSleepMode(SLPE_MASK) // clear bit 3, enable sleep mode                                                                                                 2090: 0x8004   PushConstU10            4 (0x0004)
                                                                                                                                                                              2091: 0x000D   PushMe                  
                                                                                                                                                                              2092: 0x5694   BranchSubrBack          1433

000808              'set Awake resolution
000809              SetWakeModeResolution(MOD_LOW_POWER) // clear bits 0 and 1, sent wake low power mode                                                                      2093: 0x8003   PushConstU10            3 (0x0003)
                                                                                                                                                                              2094: 0x000D   PushMe                  
                                                                                                                                                                              2095: 0x56AB   BranchSubrBack          1413

000810              'set Sleep resolution
000811              SetSleepModeResolution(SMOD_LOW_POWER) // clear bits 4 and 5, set sleep mode low power                                                                    2096: 0x8018   PushConstU10            24 (0x0018)
                                                                                                                                                                              2097: 0x000D   PushMe                  
                                                                                                                                                                              2098: 0x5624   BranchSubrBack          1551

000812              'Wakeup if transient interrupt, push/pull, active low (set in New config)
000813              'set sleep mode interrupt scheme
000814              SetSleepModeInterrupts(WAKE_TRANS) // clear bit 6, set Wake on TRANS Interrupt                                                                            2099: 0x8040   PushConstU10            64 (0x0040)
                                                                                                                                                                              2100: 0x000D   PushMe                  
                                                                                                                                                                              2101: 0x5613   BranchSubrBack          1571

000815              'enable transient interrupts
000816              SetEnableInterrupts(INT_EN_TRANS) // clear bit 5, set TRANS Interrupt                                                                                     2102: 0x8020   PushConstU10            32 (0x0020)
                                                                                                                                                                              2103: 0x000D   PushMe                  
                                                                                                                                                                              2104: 0x5608   BranchSubrBack          1585

000817              'route interrupt to INT1 pin (ff sets all interrupts to INT1 , 00 to INT2)
000818              SetInterruptsINT(INT_CFG_TRANS) // clear bit 5, set TRANS Interrupt to INT1                                                                               2105: 0x8020   PushConstU10            32 (0x0020)
                                                                                                                                                                              2106: 0x000D   PushMe                  
                                                                                                                                                                              2107: 0x55FD   BranchSubrBack          1599

000819              'latch events and enable on all axis (now only Z axis)
000820              SetTransientCFG(TELE | ZTEFE) // transients latched (TELE), Z enabled. High Pass Filter (bit 0) enabled by default                                        2108: 0x8018   PushConstU10            24 (0x0018)
                                                                                                                                                                              2109: 0x000D   PushMe                  
                                                                                                                                                                              2110: 0x55F2   BranchSubrBack          1613

000821              'Set Threshold 0.0 ~ 23.622 Gs Bit 8 of TRANSIENT_THS sets debounce mode (0 default)
000822              SetTransientThreshold(threshold) //A 7-bit unsigned number, with 0.063 g/LSB. The maximum threshold is ±8g (irrispective of Range setting).               2111: 0x8800   PushLocalI32            threshold
                                                                                                                                                                              2112: 0x000D   PushMe                  
                                                                                                                                                                              2113: 0x55EF   BranchSubrBack          1619

000823              'Set Duration (in ms if set to 0, causes interrupt immediately, once threshold exceeded
000824              SetTransientDuration(duration)                                                                                                                            2114: 0x8801   PushLocalI32            duration
                                                                                                                                                                              2115: 0x000D   PushMe                  
                                                                                                                                                                              2116: 0x55DA   BranchSubrBack          1643

000825              
000826              'Put device in active mode
000827              Active()                                                                                                                                                  2117: 0x000D   PushMe                  
                                                                                                                                                                              2118: 0x5746   BranchSubrBack          1281

000828              result = True                                                                                                                                             2119: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              2120: 0x9002   PopLocalI32             result

                                                                                                                                                                              2121: 0x4002   Branch                  2124
000829          Else                                                                                                                                                          

000830              'incorrect range, return error
000831              result = False                                                                                                                                            2122: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              2123: 0x9002   PopLocalI32             result

000832          End If
000833          Return result                                                                                                                                                 2124: 0x8802   PushLocalI32            result
                                                                                                                                                                              2125: 0x0092   ReturnValType           

000834      End Function                                                                                                                                                      2126: 0x0093   Return0                 

000835      
000836      'ConfigureOrientationInterrupt - configures device to interrupt on orientation change
000837      Public Function ConfigureOrientationInterrupt(threshold As Float, duration As Float) As Boolean                                                                   2127: 0x1820   EntryPoint              ValTypParams=2, RefTypParams=0
                                                                                                                                                                              2128: 0xE020   AllocateStackSpace      ValTypeSize=1, RefTypeSize=0

000838          Dim result As Boolean = False
000839          'threshold in degrees 45 degrees default
000840          'duration in ms
000841          
000842          If (duration >= LOW_DURATION_MS And duration <= HIGH_DURATION_MS) Then                                                                                        2129: 0x8801   PushLocalI32            duration
                                                                                                                                                                              2130: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              2131: 0x003A   FltCmp                  
                                                                                                                                                                              2132: 0x0023   IntCmpGE                
                                                                                                                                                                              2133: 0x8801   PushLocalI32            duration
                                                                                                                                                                              2134: 0x0110   PushConstI32            1168072704 (0x459F6000)
                                                                                                                                                                              2135: 0x6000                           
                                                                                                                                                                              2136: 0x459F                           
                                                                                                                                                                              2137: 0x003A   FltCmp                  
                                                                                                                                                                              2138: 0x0025   IntCmpLE                
                                                                                                                                                                              2139: 0x001F   IntAnd                  
                                                                                                                                                                              2140: 0x3C2B   BranchFalse             2184

000843              
000844              Standby()                                                                                                                                                 2141: 0x000D   PushMe                  
                                                                                                                                                                              2142: 0x5768   BranchSubrBack          1271

000845              
000846              'Setup the 3 data rate bits, from DR 0 to 7
000847              SetWakeModeFrequency(AODR_50HZ) // set 50 Hz Wake Mode                                                                                                    2143: 0x8020   PushConstU10            32 (0x0020)
                                                                                                                                                                              2144: 0x000D   PushMe                  
                                                                                                                                                                              2145: 0x56F1   BranchSubrBack          1393

000848              'Low Power Mode (sleep mode on)
000849              SetSleepMode(SLPE_MASK) // clear bit 3, enable sleep mode                                                                                                 2146: 0x8004   PushConstU10            4 (0x0004)
                                                                                                                                                                              2147: 0x000D   PushMe                  
                                                                                                                                                                              2148: 0x56CC   BranchSubrBack          1433

000850              'set Awake resolution
000851              SetWakeModeResolution(MOD_LOW_POWER) // clear bits 0 and 1, sent wake low power mode                                                                      2149: 0x8003   PushConstU10            3 (0x0003)
                                                                                                                                                                              2150: 0x000D   PushMe                  
                                                                                                                                                                              2151: 0x56E3   BranchSubrBack          1413

000852              'set Sleep resolution
000853              SetSleepModeResolution(SMOD_LOW_POWER) // clear bits 4 and 5, set sleep mode low power                                                                    2152: 0x8018   PushConstU10            24 (0x0018)
                                                                                                                                                                              2153: 0x000D   PushMe                  
                                                                                                                                                                              2154: 0x565C   BranchSubrBack          1551

000854              'Wakeup if orientation interrupt, push/pull, active low (set in New config)
000855              'set sleep mode interrupt scheme
000856              SetSleepModeInterrupts(WAKE_LNDPRT) // clear bit 5, set Wake on LP Interrupt                                                                              2155: 0x8020   PushConstU10            32 (0x0020)
                                                                                                                                                                              2156: 0x000D   PushMe                  
                                                                                                                                                                              2157: 0x564B   BranchSubrBack          1571

000857              'enable orientation interrupts
000858              SetEnableInterrupts(INT_EN_LNDPRT) // clear bit 4, set LP Interrupt                                                                                       2158: 0x8010   PushConstU10            16 (0x0010)
                                                                                                                                                                              2159: 0x000D   PushMe                  
                                                                                                                                                                              2160: 0x5640   BranchSubrBack          1585

000859              'route interrupt to INT1 pin (ff sets all interrupts to INT1 , 00 to INT2)
000860              SetInterruptsINT(INT_CFG_LNDPRT) // clear bit 4, set LP Interrupt to INT1                                                                                 2161: 0x8010   PushConstU10            16 (0x0010)
                                                                                                                                                                              2162: 0x000D   PushMe                  
                                                                                                                                                                              2163: 0x5635   BranchSubrBack          1599

000861              // Set up portrait/landscape registers - 4 steps:
000862              // 1. Enable P/L
000863              // 2. Set the back/front angle trigger points (z-lock)
000864              // 3. Set the threshold/hysteresis angle
000865              // 4. Set the debouce rate
000866              // For more info check out this app note: http://cache.freescale.com/files/sensors/doc/app_note/AN4068.pdf
000867              EnablePL(True) 'Enable P/L (debounce enabled by default)                                                                                                  2164: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              2165: 0x000D   PushMe                  
                                                                                                                                                                              2166: 0x55FC   BranchSubrBack          1659

000868              EnablePLDebounce(True) 'set debounce to mode 1 (default)                                                                                                  2167: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              2168: 0x000D   PushMe                  
                                                                                                                                                                              2169: 0x55E8   BranchSubrBack          1682

000869              SetPLZLOCKDegrees(43) 'set to 43 degrees: ZLOCK Treshold (bits 0,1,2) 0 = 14° (min), 0x04 = 29° (default) x07 = 43° (max)                                 2170: 0xEA2B   PushConstFlt            43.0
                                                                                                                                                                              2171: 0x000D   PushMe                  
                                                                                                                                                                              2172: 0x55C5   BranchSubrBack          1720

000870              //SetPLZLOCK(0x07)    'same as above, but set directly
000871              SetPLBFThreshold(threshold) 'BF deg threshold (45 default)                                                                                                2173: 0x8800   PushLocalI32            threshold
                                                                                                                                                                              2174: 0x000D   PushMe                  
                                                                                                                                                                              2175: 0x55B0   BranchSubrBack          1744

000872              //SetPLHysteresis(14)     '14deg hyst (14 default)
000873              //SetPLCount(0x05)          'debounce counter 0x05 = 100ms (at 50 hz in Low Power mode)
000874              SetPLDuration(duration) 'debounce counter 0x10 = 320ms (at 50 hz LP mode) if set to 0 causes interrupt immediately, once threshold exceeded               2176: 0x8801   PushLocalI32            duration
                                                                                                                                                                              2177: 0x000D   PushMe                  
                                                                                                                                                                              2178: 0x555C   BranchSubrBack          1831

000875              //SetPLCount(0x10)
000876              
000877              Active()                                                                                                                                                  2179: 0x000D   PushMe                  
                                                                                                                                                                              2180: 0x5784   BranchSubrBack          1281

000878              result = True                                                                                                                                             2181: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              2182: 0x9002   PopLocalI32             result

                                                                                                                                                                              2183: 0x4002   Branch                  2186
000879          Else                                                                                                                                                          

000880              'incorrect range, return error
000881              result = False                                                                                                                                            2184: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              2185: 0x9002   PopLocalI32             result

000882          End If
000883          Return result                                                                                                                                                 2186: 0x8802   PushLocalI32            result
                                                                                                                                                                              2187: 0x0092   ReturnValType           

000884      End Function                                                                                                                                                      2188: 0x0093   Return0                 

000885  End Class                                                                                                                                                             786:  0x0097   ReturnMe                


****** BLOCKS and VARIABLES for MMA8652
    Block Class (Line 3:885)
        MMA8652         Me              (ReadOnly, Offset=0)
        Object          MyBase          (ReadOnly, Offset=0)
        Byte            I2C_ADDR        (Literal=29)
        Integer         I2C_SPEED       (Literal=400000)
        Byte            CTRL_ID_DEFAULT (Literal=29)
        Byte            STATUS          (Literal=0)
        Byte            F_STATUS        (Literal=0)
        Byte            OUT_X_MSB       (Literal=1)
        Byte            OUT_X_LSB       (Literal=2)
        Byte            OUT_Y_MSB       (Literal=3)
        Byte            OUT_Y_LSB       (Literal=4)
        Byte            OUT_Z_MSB       (Literal=5)
        Byte            OUT_Z_LSB       (Literal=6)
        Byte            F_SETUP         (Literal=9)
        Byte            TRIG_CFG        (Literal=10)
        Byte            SYSMOD          (Literal=11)
        Byte            INT_SOURCE      (Literal=12)
        Byte            WHO_AM_I        (Literal=13)
        Byte            XYZ_DATA_CFG    (Literal=14)
        Byte            HP_FILTER_CUTOFF(Literal=15)
        Byte            PL_STATUS       (Literal=16)
        Byte            PL_CFG          (Literal=17)
        Byte            PL_COUNT        (Literal=18)
        Byte            PL_BF_ZCOMP     (Literal=19)
        Byte            PL_THS          (Literal=20)
        Byte            FF_MT_CFG       (Literal=21)
        Byte            FF_MT_SRC       (Literal=22)
        Byte            FF_MT_THS       (Literal=23)
        Byte            FF_MT_COUNT     (Literal=24)
        Byte            TRANSIENT_CFG   (Literal=29)
        Byte            TRANSIENT_SRC   (Literal=30)
        Byte            TRANSIENT_THS   (Literal=31)
        Byte            TRANSIENT_COUNT (Literal=32)
        Byte            PULSE_CFG       (Literal=33)
        Byte            PULSE_SRC       (Literal=34)
        Byte            PULSE_THSX      (Literal=35)
        Byte            PULSE_THSY      (Literal=36)
        Byte            PULSE_THSZ      (Literal=37)
        Byte            PULSE_TMLT      (Literal=38)
        Byte            PULSE_LTCY      (Literal=39)
        Byte            PULSE_WIND      (Literal=40)
        Byte            ASLP_COUNT      (Literal=41)
        Byte            CTRL_REG1       (Literal=42)
        Byte            CTRL_REG2       (Literal=43)
        Byte            CTRL_REG3       (Literal=44)
        Byte            CTRL_REG4       (Literal=45)
        Byte            CTRL_REG5       (Literal=46)
        Byte            OFF_X           (Literal=47)
        Byte            OFF_Y           (Literal=48)
        Byte            OFF_Z           (Literal=49)
        Byte            POSITION_DEFAULT(Literal=2)
        Byte            DELAY_DEFAULT   (Literal=200)
        Byte            STATUS_ZYXDR    (Literal=8)
        Byte            BUF_SIZE        (Literal=6)
        Byte            SRC_ASLP_MASK   (Literal=128)
        Byte            SRC_FIFO_MASK   (Literal=64)
        Byte            SRC_TRANS_MASK  (Literal=32)
        Byte            SRC_LNDPRT_MASK (Literal=16)
        Byte            SRC_PULSE_MASK  (Literal=8)
        Byte            SRC_FF_MT_MASK  (Literal=4)
        Byte            SRC_DRDY_MASK   (Literal=1)
        Byte            ST_MASK         (Literal=128)
        Byte            RST_MASK        (Literal=64)
        Byte            SMODS1_MASK     (Literal=16)
        Byte            SMODS0_MASK     (Literal=8)
        Byte            SLPE_MASK       (Literal=4)
        Byte            MODS1_MASK      (Literal=2)
        Byte            MODS0_MASK      (Literal=1)
        Byte            SMODS_MASK      (Literal=24)
        Byte            MODS_MASK       (Literal=3)
        Byte            DBCNTM_MASK     (Literal=128)
        Byte            PL_EN_MASK      (Literal=64)
        Byte            FS1_MASK        (Literal=2)
        Byte            FS0_MASK        (Literal=1)
        Byte            FS_MASK         (Literal=3)
        Byte            ASLP_RATE1_MASK (Literal=128)
        Byte            ASLP_RATE0_MASK (Literal=64)
        Byte            DR2_MASK        (Literal=32)
        Byte            DR1_MASK        (Literal=16)
        Byte            DR0_MASK        (Literal=8)
        Byte            LNOISE_MASK     (Literal=4)
        Byte            FREAD_MASK      (Literal=2)
        Byte            ACTIVE_MASK     (Literal=1)
        Byte            ASLP_RATE_MASK  (Literal=192)
        Byte            DR_MASK         (Literal=56)
        Byte            FGERR_MASK      (Literal=128)
        Byte            FGT_4_MASK      (Literal=64)
        Byte            FGT_3_MASK      (Literal=32)
        Byte            FGT_2_MASK      (Literal=16)
        Byte            FGT_1_MASK      (Literal=8)
        Byte            FGT_0_MASK      (Literal=4)
        Byte            FGT_MASK        (Literal=124)
        Byte            SYSMOD1_MASK    (Literal=2)
        Byte            SYSMOD0_MASK    (Literal=1)
        Byte            SYSMOD_MASK     (Literal=3)
        Byte            BKFR1           (Literal=128)
        Byte            BKFR0           (Literal=64)
        Byte            ZLOCK2          (Literal=4)
        Byte            ZLOCK1          (Literal=2)
        Byte            ZLOCK0          (Literal=1)
        Byte            BKFR1_MASK      (Literal=128)
        Byte            BKFR0_MASK      (Literal=64)
        Byte            ZLOCK2_MASK     (Literal=4)
        Byte            ZLOCK1_MASK     (Literal=2)
        Byte            ZLOCK0_MASK     (Literal=1)
        Byte            BKFR_MASK       (Literal=192)
        Byte            ZLOCK_MASK      (Literal=7)
        Byte            P_L_THS4        (Literal=128)
        Byte            P_L_THS3        (Literal=64)
        Byte            P_L_THS2        (Literal=32)
        Byte            P_L_THS1        (Literal=16)
        Byte            P_L_THS0        (Literal=8)
        Byte            HYS2            (Literal=4)
        Byte            HYS1            (Literal=2)
        Byte            HYS0            (Literal=1)
        Byte            P_L_THS4_MASK   (Literal=128)
        Byte            P_L_THS3_MASK   (Literal=64)
        Byte            P_L_THS2_MASK   (Literal=32)
        Byte            P_L_THS1_MASK   (Literal=16)
        Byte            P_L_THS0_MASK   (Literal=8)
        Byte            HYS2_MASK       (Literal=4)
        Byte            HYS1_MASK       (Literal=2)
        Byte            HYS0_MASK       (Literal=1)
        Byte            P_L_THS_MASK    (Literal=248)
        Byte            HYS_MASK        (Literal=7)
        Byte            FIFO_GATE_MASK  (Literal=128)
        Byte            WAKE_TRANS_MASK (Literal=64)
        Byte            WAKE_LNDPRT_MASK(Literal=32)
        Byte            WAKE_PULSE_MASK (Literal=16)
        Byte            WAKE_FF_MT_MASK (Literal=8)
        Byte            IPOL_MASK       (Literal=2)
        Byte            PP_OD_MASK      (Literal=1)
        Byte            WAKE_CLEAR_MASK (Literal=60)
        Byte            INT_EN_ASLP_MASK(Literal=128)
        Byte            INT_EN_FIFO_MASK(Literal=64)
        Byte            INT_EN_TRANS_MAS(Literal=32)
        Byte            INT_EN_LNDPRT_MA(Literal=16)
        Byte            INT_EN_PULSE_MAS(Literal=8)
        Byte            INT_EN_FF_MT_MAS(Literal=4)
        Byte            INT_EN_DRDY_MASK(Literal=1)
        Byte            INT_CLEAR_MASK  (Literal=253)
        Byte            INT_CFG_ASLP_MAS(Literal=128)
        Byte            INT_CFG_FIFO_MAS(Literal=64)
        Byte            INT_CFG_TRANS_MA(Literal=32)
        Byte            INT_CFG_LNDPRT_M(Literal=16)
        Byte            INT_CFG_PULSE_MA(Literal=8)
        Byte            INT_CFG_FF_MT_MA(Literal=4)
        Byte            INT_CFG_DRDY_MAS(Literal=1)
        Byte            INT_CFG_CLEAR_MA(Literal=253)
        Byte            TEA_MASK        (Literal=64)
        Byte            ZTRANSE_MASK    (Literal=32)
        Byte            Z_TRANS_POL_MASK(Literal=16)
        Byte            YTRANSE_MASK    (Literal=8)
        Byte            Y_TRANS_POL_MASK(Literal=4)
        Byte            XTRANSE_MASK    (Literal=2)
        Byte            X_TRANS_POL_MASK(Literal=1)
        Byte            TELE_MASK       (Literal=16)
        Byte            ZTEFE_MASK      (Literal=8)
        Byte            YTEFE_MASK      (Literal=4)
        Byte            XTEFE_MASK      (Literal=2)
        Byte            HPF_BYP_MASK    (Literal=1)
        Byte            FULL_SCALE_2G   (Literal=0)
        Byte            FULL_SCALE_4G   (Literal=1)
        Byte            FULL_SCALE_8G   (Literal=2)
        Byte            AODR_800HZ      (Literal=0)
        Byte            AODR_400HZ      (Literal=8)
        Byte            AODR_200HZ      (Literal=16)
        Byte            AODR_100HZ      (Literal=24)
        Byte            AODR_50HZ       (Literal=32)
        Byte            AODR_12_5HZ     (Literal=40)
        Byte            AODR_6_25HZ     (Literal=48)
        Byte            AODR_1_56HZ     (Literal=56)
        Byte            SODR_50HZ       (Literal=0)
        Byte            SODR_12_5HZ     (Literal=64)
        Byte            SODR_6_25HZ     (Literal=128)
        Byte            SODR_1_56HZ     (Literal=192)
        Byte            SMOD_NORMAL     (Literal=0)
        Byte            SMOD_LOW_NOISE  (Literal=8)
        Byte            SMOD_HIGH_RES   (Literal=16)
        Byte            SMOD_LOW_POWER  (Literal=24)
        Byte            MOD_NORMAL      (Literal=0)
        Byte            MOD_LOW_NOISE   (Literal=1)
        Byte            MOD_HIGH_RES    (Literal=2)
        Byte            MOD_LOW_POWER   (Literal=3)
        Byte            SYSMOD_STANDBY  (Literal=0)
        Byte            SYSMOD_WAKE     (Literal=2)
        Byte            SYSMOD_SLEEP    (Literal=1)
        Byte            FIFO_GATE       (Literal=128)
        Byte            WAKE_TRANS      (Literal=64)
        Byte            WAKE_LNDPRT     (Literal=32)
        Byte            WAKE_PULSE      (Literal=16)
        Byte            WAKE_FF_MT      (Literal=8)
        Byte            IPOL            (Literal=2)
        Byte            PP_OD           (Literal=1)
        Byte            INT_EN_ASLP     (Literal=128)
        Byte            INT_EN_FIFO     (Literal=64)
        Byte            INT_EN_TRANS    (Literal=32)
        Byte            INT_EN_LNDPRT   (Literal=16)
        Byte            INT_EN_PULSE    (Literal=8)
        Byte            INT_EN_FF_MT    (Literal=4)
        Byte            INT_EN_DRDY     (Literal=1)
        Byte            NEWLP           (Literal=128)
        Byte            LO              (Literal=64)
        Byte            LAPO1           (Literal=4)
        Byte            LAPO0           (Literal=2)
        Byte            BAFRO           (Literal=1)
        Byte            TEA             (Literal=64)
        Byte            ZTRANSE         (Literal=32)
        Byte            Z_TRANS_POL     (Literal=16)
        Byte            YTRANSE         (Literal=8)
        Byte            Y_TRANS_POL     (Literal=4)
        Byte            XTRANSE         (Literal=2)
        Byte            X_TRANS_POL     (Literal=1)
        Byte            INT_CFG_ASLP    (Literal=128)
        Byte            INT_CFG_FIFO    (Literal=64)
        Byte            INT_CFG_TRANS   (Literal=32)
        Byte            INT_CFG_LNDPRT  (Literal=16)
        Byte            INT_CFG_PULSE   (Literal=8)
        Byte            INT_CFG_FF_MT   (Literal=4)
        Byte            INT_CFG_DRDY    (Literal=1)
        Byte            TELE            (Literal=16)
        Byte            ZTEFE           (Literal=8)
        Byte            YTEFE           (Literal=4)
        Byte            XTEFE           (Literal=2)
        Byte            HPF_BYP         (Literal=1)
        Byte            SRC_ASLP        (Literal=128)
        Byte            SRC_FIFO        (Literal=64)
        Byte            SRC_TRANS       (Literal=32)
        Byte            SRC_LNDPRT      (Literal=16)
        Byte            SRC_PULSE       (Literal=8)
        Byte            SRC_FF_MT       (Literal=4)
        Byte            SRC_DRDY        (Literal=1)
        Float           LOW_TRIGGER_THRE(Literal=0)
        Float           HIGH_TRIGGER_THR(Literal=8)
        Float           TRANSIENT_THRESH(Literal=0.063)
        Float           LOW_DURATION_MS (Literal=0)
        Float           HIGH_DURATION_MS(Literal=5100)
        Float           DURATION_RESOLUT(Literal=20)
        I2c             gAccelerometer  (MemberRefTypVariableOffset=0)
        Boolean         online          (MemberValTypVariableOffset=4)
        Block Sub New (Line 292:302)
            Block If Then  (Line 294:301)
            End Block
        End Block
        Block Function map_range (Line 304:309)
            Float           old_range       (LocalValTypVariableOffset=5)
            Float           new_range       (LocalValTypVariableOffset=6)
            Float           var             (LocalValTypVariableOffset=0)
            Float           old_min         (LocalValTypVariableOffset=1)
            Float           old_max         (LocalValTypVariableOffset=2)
            Byte            new_min         (LocalValTypVariableOffset=3)
            Byte            new_max         (LocalValTypVariableOffset=4)
        End Block
        Block Function map_range (Line 311:316)
            Float           old_range       (LocalValTypVariableOffset=5)
            Float           new_range       (LocalValTypVariableOffset=6)
            Float           var             (LocalValTypVariableOffset=0)
            Byte            old_min         (LocalValTypVariableOffset=1)
            Byte            old_max         (LocalValTypVariableOffset=2)
            Float           new_min         (LocalValTypVariableOffset=3)
            Float           new_max         (LocalValTypVariableOffset=4)
        End Block
        Block Function GetmsPerCount (Line 318:381)
            Byte            frequency       (LocalValTypVariableOffset=0)
            Byte            mode            (LocalValTypVariableOffset=1)
            Float           ms              (LocalValTypVariableOffset=2)
        End Block
        Block Function GetmsFromFrequency (Line 383:408)
            Byte            frequency       (LocalValTypVariableOffset=0)
            Float           ms              (LocalValTypVariableOffset=1)
        End Block
        Block Function readAccelData (Line 410:420)
            ListOfByte      rawData         (LocalRefTypVariableOffset=0)
            ListOfShort     destination     (LocalRefTypVariableOffset=1)
            Block If Then  (Line 414:418)
            End Block
        End Block
        Block Function readAccelData2sCompliment (Line 422:438)
            ListOfShort     destination     (LocalRefTypVariableOffset=0)
            Block If Then  (Line 425:436)
                Block If Then  (Line 427:429)
                End Block
                Block If Then  (Line 430:432)
                End Block
                Block If Then  (Line 433:435)
                End Block
            End Block
        End Block
        Block Function readIntSource (Line 441:443)
        End Block
        Block Function readPLStatus (Line 446:448)
        End Block
        Block Function readPulseSource (Line 451:453)
        End Block
        Block Function readTransientSource (Line 456:458)
        End Block
        Block Function readFreeFallSource (Line 461:463)
        End Block
        Block Function whoAmI (Line 466:468)
        End Block
        Block Sub Standby (Line 470:473)
        End Block
        Block Sub Active (Line 475:478)
        End Block
        Block Sub SetRegister (Line 480:484)
            ListOfByte      data            (LocalRefTypVariableOffset=0)
            Byte            reg             (LocalValTypVariableOffset=0)
        End Block
        Block Function read (Line 486:495)
            Byte            result          (LocalValTypVariableOffset=1)
            ListOfByte      value           (LocalRefTypVariableOffset=0)
            Byte            address         (LocalValTypVariableOffset=0)
            Block If Then  (Line 491:493)
            End Block
        End Block
        Block Function read (Line 497:502)
            ListOfByte      value           (LocalRefTypVariableOffset=0)
            Byte            address         (LocalValTypVariableOffset=0)
            Byte            length          (LocalValTypVariableOffset=1)
        End Block
        Block Sub write (Line 504:510)
            ListOfByte      data            (LocalRefTypVariableOffset=0)
            Byte            address         (LocalValTypVariableOffset=0)
            Byte            value           (LocalValTypVariableOffset=1)
        End Block
        Block Sub reset (Line 512:517)
            Block While  (Line 514:516)
            End Block
        End Block
        Block Sub SetRange (Line 519:521)
            Byte            range           (LocalValTypVariableOffset=0)
        End Block
        Block Function GetRange (Line 523:525)
        End Block
        Block Sub SetWakeModeFrequency (Line 527:529)
            Byte            frequency       (LocalValTypVariableOffset=0)
        End Block
        Block Function GetWakeModeFrequency (Line 531:533)
        End Block
        Block Sub SetWakeModeResolution (Line 535:537)
            Byte            resolution      (LocalValTypVariableOffset=0)
        End Block
        Block Function GetWakeModeResolution (Line 539:541)
        End Block
        Block Sub SetSleepMode (Line 543:545)
            Byte            mode            (LocalValTypVariableOffset=0)
        End Block
        Block Function GetSleepMode (Line 547:549)
        End Block
        Block Sub SetSleepModeFrequency (Line 551:553)
            Byte            frequency       (LocalValTypVariableOffset=0)
        End Block
        Block Function GetSleepModeleepModeFrequency (Line 555:557)
        End Block
        Block Sub SetSleepModeDuration (Line 559:568)
            Byte            durationByte    (LocalValTypVariableOffset=1)
            Float           duration        (LocalValTypVariableOffset=0)
            Block If Then  (Line 562:564)
            End Block
            Block Else (Line 564:566)
            End Block
        End Block
        Block Function GetSleepModeleepModeDuration (Line 570:572)
        End Block
        Block Function GetSleepModeleepModeDurationms (Line 574:582)
            Byte            durationByte    (LocalValTypVariableOffset=0)
            Block If Then  (Line 577:579)
            End Block
            Block Else (Line 579:581)
            End Block
        End Block
        Block Sub SetSleepModeResolution (Line 584:586)
            Byte            resolution      (LocalValTypVariableOffset=0)
        End Block
        Block Function GetSleepModeResolution (Line 588:590)
        End Block
        Block Sub SetSleepModeInterrupts (Line 592:594)
            Byte            interrupts      (LocalValTypVariableOffset=0)
        End Block
        Block Sub SetEnableInterrupts (Line 596:598)
            Byte            interrupts      (LocalValTypVariableOffset=0)
        End Block
        Block Sub SetInterruptsINT (Line 600:603)
            Byte            interrupts      (LocalValTypVariableOffset=0)
        End Block
        Block Sub SetTransientCFG (Line 605:608)
            Byte            transient       (LocalValTypVariableOffset=0)
        End Block
        Block Sub SetTransientThreshold (Line 610:616)
            Byte            thresholdByte   (LocalValTypVariableOffset=1)
            Float           threshold       (LocalValTypVariableOffset=0)
            Block If Then  (Line 613:615)
            End Block
        End Block
        Block Sub SetTransientCount (Line 618:623)
            Byte            count           (LocalValTypVariableOffset=0)
        End Block
        Block Sub SetTransientDuration (Line 625:634)
            Float           msPerCount      (LocalValTypVariableOffset=1)
            Byte            count           (LocalValTypVariableOffset=2)
            Float           duration        (LocalValTypVariableOffset=0)
        End Block
        Block Sub EnablePL (Line 636:642)
            Boolean         enable          (LocalValTypVariableOffset=0)
            Block If Then  (Line 637:639)
            End Block
            Block Else (Line 639:641)
            End Block
        End Block
        Block Sub EnablePLDebounce (Line 644:652)
            Boolean         enable          (LocalValTypVariableOffset=0)
            Block If Then  (Line 647:649)
            End Block
            Block Else (Line 649:651)
            End Block
        End Block
        Block Sub SetPLZLOCK (Line 654:663)
            Byte            zlock           (LocalValTypVariableOffset=0)
            Block If Then  (Line 660:662)
            End Block
        End Block
        Block Sub SetPLZLOCKDegrees (Line 665:675)
            Byte            zlockByte       (LocalValTypVariableOffset=1)
            Float           zlock           (LocalValTypVariableOffset=0)
            Block If Then  (Line 672:674)
            End Block
        End Block
        Block Sub SetPLBFThreshold (Line 677:686)
            Byte            thresholdByte   (LocalValTypVariableOffset=1)
            Float           threshold       (LocalValTypVariableOffset=0)
            Block If Then  (Line 683:685)
            End Block
        End Block
        Block Sub SetPLThreshold (Line 688:698)
            Byte            thresholdByte   (LocalValTypVariableOffset=1)
            Float           threshold       (LocalValTypVariableOffset=0)
            Block If Then  (Line 695:697)
            End Block
        End Block
        Block Sub SetPLHysteresis (Line 700:710)
            Byte            hysteresisByte  (LocalValTypVariableOffset=1)
            Float           hysteresis      (LocalValTypVariableOffset=0)
            Block If Then  (Line 707:709)
            End Block
        End Block
        Block Sub SetPLCount (Line 712:717)
            Byte            count           (LocalValTypVariableOffset=0)
        End Block
        Block Sub SetPLDuration (Line 719:728)
            Float           msPerCount      (LocalValTypVariableOffset=1)
            Byte            count           (LocalValTypVariableOffset=2)
            Float           duration        (LocalValTypVariableOffset=0)
        End Block
        Block Sub calibrate (Line 730:784)
            ListOfInteger   accel_bias      (LocalRefTypVariableOffset=0)
            Integer         fcount          (LocalValTypVariableOffset=0)
            ListOfShort     temp            (LocalRefTypVariableOffset=1)
            Short           accelsensitivity(LocalValTypVariableOffset=1)
            ListOfByte      rawData         (LocalRefTypVariableOffset=2)
            Block For  (Line 752:760)
                Integer         ii              (LocalValTypVariableOffset=2)
            End Block
            Block If Then  (Line 766:768)
            End Block
            Block Else (Line 768:770)
            End Block
        End Block
        Block Function ConfigureShockInterrupt (Line 790:834)
            Boolean         result          (LocalValTypVariableOffset=2)
            Float           threshold       (LocalValTypVariableOffset=0)
            Float           duration        (LocalValTypVariableOffset=1)
            Block If Then  (Line 795:829)
            End Block
            Block Else (Line 829:832)
            End Block
        End Block
        Block Function ConfigureOrientationInterrupt (Line 837:884)
            Boolean         result          (LocalValTypVariableOffset=2)
            Float           threshold       (LocalValTypVariableOffset=0)
            Float           duration        (LocalValTypVariableOffset=1)
            Block If Then  (Line 842:879)
            End Block
            Block Else (Line 879:882)
            End Block
        End Block
        Total Size of Member data including base classes = 8.
    End Block




****** GLOBAL_VARIABLES **********************************************
Sub_Topic_Knock_Enable, Class=String, Offset=0, SourceClass=Main
accel, Class=MMA8652, Offset=4, SourceClass=Main
mcUIDString, Class=String, Offset=8, SourceClass=MQTT
Number, Class=Integer, Offset=12, IsReadoly, SourceClass=Intrinsic
Data, Class=Integer, Offset=16, IsReadoly, SourceClass=Intrinsic
ProgramCounter, Class=Integer, Offset=20, IsReadoly, SourceClass=Intrinsic
data, Class=dataType, Offset=28, SourceClass=Main
Publish_data, Class=Boolean, Offset=24, SourceClass=Main
TimeSinceKnockTriggered, Class=Integer, Offset=32, SourceClass=Main
TimeSinceDoorClosed, Class=Integer, Offset=36, SourceClass=Main


****** LITERALS ***********************************************
     1 String "True"
     4 String "False"
     7 String "\r\n"
     9 String "V1.01"
    12 String "MCThings/Publish"
    18 String "MCThings/"
    22 String "X8"
    24 String "/EnableDoorKnock"
    30 String "Status"
    33 String "Booted: V1.01"
    38 String "Accel Sensor Online"
    44 String "KnockEnable"
    48 String "Accel Sensor Offline"
    55 String "Orientation"
    59 String "Front Facing"
    64 String "Back Facing"
    68 String "Doorknock"
    72 String "Door"
    75 String "Publish"
    78 String " :Boolean Conversion failed"
    86 String " :Unknown Command"
    92 String "Uptime"
    95 String "BatteryVoltage"
   100 String "Temperature"
   104 String "OnLine"
   107 String "/"
