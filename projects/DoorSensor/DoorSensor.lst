****** BUILD Of 'DoorSensor' (2016-09-02 11:47:38 AM)


****** EVENT HANDLERS
                                                                                                                                                                              0:    0x0072   Address Priority 0 Event.   Code for 'Boot' starts at 114.
                                                                                                                                                                              1:    0x00A2   Address Priority 1 Event.   Code for 'NewGateway' starts at 162.
                                                                                                                                                                              2:    0x00A9   Address Priority 2 Event.   Code for 'AccelerometerInt1' starts at 169.
                                                                                                                                                                              3:    0x0101   Address Priority 3 Event.   Code for 'ReedSwitchChanged' starts at 257.
                                                                                                                                                                              4:    0x0125   Address Priority 4 Event.   Code for 'SubscriptionDelivery' starts at 293.
                                                                                                                                                                              5:    0x014F   Address Priority 5 Event.   Code for 'Publish' starts at 335.
                                                                                                                                                                              6:    0x0000   Address Priority 6 Event.   No Event defined.
                                                                                                                                                                              7:    0x0000   Address Priority 7 Event.   No Event defined.
                                                                                                                                                                              8:    0x0000   Address Priority 8 Event.   No Event defined.
                                                                                                                                                                              9:    0x0000   Address Priority 9 Event.   No Event defined.
                                                                                                                                                                              10:   0x0000   Address Priority 10 Event.  No Event defined.
                                                                                                                                                                              11:   0x0000   Address Priority 11 Event.  No Event defined.
                                                                                                                                                                              12:   0x0000   Address Priority 12 Event.  No Event defined.
                                                                                                                                                                              13:   0x0000   Address Priority 13 Event.  No Event defined.
                                                                                                                                                                              14:   0x0000   Address Priority 14 Event.  No Event defined.
                                                                                                                                                                              15:   0x0000   Address Priority 15 Event.  No Event defined.
                                                                                                                                                                              16:   0x0000   Address Priority 16 Event.  No Event defined.
                                                                                                                                                                              17:   0x0000   Address Priority 17 Event.  No Event defined.
                                                                                                                                                                              18:   0x0000   Address Priority 18 Event.  No Event defined.
                                                                                                                                                                              19:   0x0000   Address Priority 19 Event.  No Event defined.
                                                                                                                                                                              20:   0x0000   Address Priority 20 Event.  No Event defined.
                                                                                                                                                                              21:   0x0000   Address Priority 21 Event.  No Event defined.
                                                                                                                                                                              22:   0x0000   Address Priority 22 Event.  No Event defined.
                                                                                                                                                                              23:   0x0000   Address Priority 23 Event.  No Event defined.
                                                                                                                                                                              24:   0x0000   Address Priority 24 Event.  No Event defined.
                                                                                                                                                                              25:   0x0000   Address Priority 25 Event.  No Event defined.
                                                                                                                                                                              26:   0x0000   Address Priority 26 Event.  No Event defined.
                                                                                                                                                                              27:   0x0000   Address Priority 27 Event.  No Event defined.
                                                                                                                                                                              28:   0x0000   Address Priority 28 Event.  No Event defined.
                                                                                                                                                                              29:   0x0000   Address Priority 29 Event.  No Event defined.
                                                                                                                                                                              30:   0x0000   Address Priority 30 Event.  No Event defined.
                                                                                                                                                                              31:   0x0000   Address Priority 31 Event.  No Event defined.

****** RUNTIME INFORMATION
                                                                                                                                                                              32:   0x07D3   ScriptSizeLS (Size of the code in 2-byte instructions = 2003)
                                                                                                                                                                              33:   0x0000   CodeSizeMS (Size of the code in 2-byte instructions = 2003)
                                                                                                                                                                              34:   0x0020   CodeSizeInBlocks = 32
                                                                                                                                                                              35:   0x0003   StringSizeInBlocks = 3
                                                                                                                                                                              36:   0x0000   Reserved
                                                                                                                                                                              37:   0x0000   Reserved
                                                                                                                                                                              38:   0x235A   Compile Date and Time 2016-09-02 11:47:38
                                                                                                                                                                              39:   0x1F5C   Compile Date and Time 2016-09-02 11:47:38
                                                                                                                                                                              40:   0x0000   Reserved
                                                                                                                                                                              41:   0x0000   Reserved
                                                                                                                                                                              42:   0x0000   Reserved
                                                                                                                                                                              43:   0x0000   Reserved
                                                                                                                                                                              44:   0x0000   Reserved
                                                                                                                                                                              45:   0x0000   PinMode Pin0=NotUsed  Pin1=NotUsed
                                                                                                                                                                              46:   0x0000   PinMode Pin2=NotUsed  Pin3=NotUsed
                                                                                                                                                                              47:   0x0000   PinMode Pin4=NotUsed  Pin5=NotUsed
                                                                                                                                                                              48:   0x0000   PinMode Pin6=NotUsed  Pin7=NotUsed
                                                                                                                                                                              49:   0x0000   PinMode Pin8=NotUsed   Pin9=NotUsed
                                                                                                                                                                              50:   0x0000   PinMode Pin10=NotUsed   Pin11=NotUsed
                                                                                                                                                                              51:   0x0000   PinMode Pin12=NotUsed   Pin13=NotUsed
                                                                                                                                                                              52:   0x0000   PinMode Pin14=NotUsed   Pin15=NotUsed
                                                                                                                                                                              53:   0x0000   PinMode Pin16=NotUsed   Pin17=NotUsed
                                                                                                                                                                              54:   0x0000   PinMode Pin18=NotUsed   Pin19=NotUsed
                                                                                                                                                                              55:   0x0000   PinMode Pin20=NotUsed   Pin21=NotUsed
                                                                                                                                                                              56:   0x0000   PinMode Pin22=NotUsed   Pin23=NotUsed
                                                                                                                                                                              57:   0x0000   Reserved
                                                                                                                                                                              58:   0x0000   Reserved
                                                                                                                                                                              59:   0x0000   Reserved
                                                                                                                                                                              60:   0x0000   Reserved
                                                                                                                                                                              61:   0x1800   IdleThread EntryPoint ValTypParams=0, RefTypParams=0
                                                                                                                                                                              62:   0x0015   SystemIdle
                                                                                                                                                                              63:   0x5002   BranchBack 62

****** CLASS INFORMATION
                                                                                                                                                                              64:   0x0049   Class Descriptor for class 'Global'. Next Descriptor at 73.
                                                                                                                                                                              65:   0x0000   Base Class 'Object' Value represent a pointer if >= 64 (0x40) or ClassType if < 64 (0).
                                                                                                                                                                              66:   0x0000   Offset of RefObject data.(0).
                                                                                                                                                                              67:   0x0008   Size of RefObject data.(8).
                                                                                                                                                                              68:   0x0024   Size of all data.(36).
                                                                                                                                                                              69:   0x6C47   Part of the class name 'Global'.
                                                                                                                                                                              70:   0x626F   Part of the class name 'Global'.
                                                                                                                                                                              71:   0x6C61   Part of the class name 'Global'.
                                                                                                                                                                              72:   0x0000   Part of the class name 'Global'.
                                                                                                                                                                              73:   0x0051   Class Descriptor for class 'Main'. Next Descriptor at 81.
                                                                                                                                                                              74:   0x0000   Base Class 'Object' Value represent a pointer if >= 64 (0x40) or ClassType if < 64 (0).
                                                                                                                                                                              75:   0x0000   Offset of RefObject data.(0).
                                                                                                                                                                              76:   0x0000   Size of RefObject data.(0).
                                                                                                                                                                              77:   0x0000   Size of all data.(0).
                                                                                                                                                                              78:   0x614D   Part of the class name 'Main'.
                                                                                                                                                                              79:   0x6E69   Part of the class name 'Main'.
                                                                                                                                                                              80:   0x0000   Part of the class name 'Main'.
                                                                                                                                                                              81:   0x005C   Class Descriptor for class 'TempSensor'. Next Descriptor at 92.
                                                                                                                                                                              82:   0x0000   Base Class 'Object' Value represent a pointer if >= 64 (0x40) or ClassType if < 64 (0).
                                                                                                                                                                              83:   0x0000   Offset of RefObject data.(0).
                                                                                                                                                                              84:   0x0000   Size of RefObject data.(0).
                                                                                                                                                                              85:   0x0000   Size of all data.(0).
                                                                                                                                                                              86:   0x6554   Part of the class name 'TempSensor'.
                                                                                                                                                                              87:   0x706D   Part of the class name 'TempSensor'.
                                                                                                                                                                              88:   0x6553   Part of the class name 'TempSensor'.
                                                                                                                                                                              89:   0x736E   Part of the class name 'TempSensor'.
                                                                                                                                                                              90:   0x726F   Part of the class name 'TempSensor'.
                                                                                                                                                                              91:   0x0000   Part of the class name 'TempSensor'.
                                                                                                                                                                              92:   0x0064   Class Descriptor for class 'MQTT'. Next Descriptor at 100.
                                                                                                                                                                              93:   0x0000   Base Class 'Object' Value represent a pointer if >= 64 (0x40) or ClassType if < 64 (0).
                                                                                                                                                                              94:   0x0000   Offset of RefObject data.(0).
                                                                                                                                                                              95:   0x0000   Size of RefObject data.(0).
                                                                                                                                                                              96:   0x0000   Size of all data.(0).
                                                                                                                                                                              97:   0x514D   Part of the class name 'MQTT'.
                                                                                                                                                                              98:   0x5454   Part of the class name 'MQTT'.
                                                                                                                                                                              99:   0x0000   Part of the class name 'MQTT'.
                                                                                                                                                                              100:  0x006D   Class Descriptor for class 'MMA8652'. Next Descriptor at 109.
                                                                                                                                                                              101:  0x0000   Base Class 'Object' Value represent a pointer if >= 64 (0x40) or ClassType if < 64 (0).
                                                                                                                                                                              102:  0x0000   Offset of RefObject data.(0).
                                                                                                                                                                              103:  0x0004   Size of RefObject data.(4).
                                                                                                                                                                              104:  0x0008   Size of all data.(8).
                                                                                                                                                                              105:  0x4D4D   Part of the class name 'MMA8652'.
                                                                                                                                                                              106:  0x3841   Part of the class name 'MMA8652'.
                                                                                                                                                                              107:  0x3536   Part of the class name 'MMA8652'.
                                                                                                                                                                              108:  0x0032   Part of the class name 'MMA8652'.
                                                                                                                                                                              109:  0x0000   End Of Class Data.

****** APPLIACTION STATEMENTS
*************************************************************************************************************

000003  Class Main                                                                                                                                                            110:  0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000004      
000005      Shared data As dataType
000006      Const Sub_Topic As String = "MCThings/Publish"
000007      Shared Publish_data As Boolean
000008      Shared accel As MMA8652
000009      Shared TimeSinceKnockTriggered As Integer
000010      Shared TimeSinceDoorClosed As Integer
000011      
                                                                                                                                                                              112:  0x0001                           EventType=Boot
                                                                                                                                                                              113:  0x0700                           EventCategory=Interrupt
000012      Shared Event Boot()                                                                                                                                               114:  0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000013          Publish_data = True                                                                                                                                           115:  0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              116:  0x000C   PushGlobal              
                                                                                                                                                                              117:  0xC814   PopFieldU8              Publish_data

000014          TimeSinceKnockTriggered = 0                                                                                                                                   118:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              119:  0x000C   PushGlobal              
                                                                                                                                                                              120:  0xD01C   PopFieldI32             TimeSinceKnockTriggered

000015          TimeSinceDoorClosed = 0                                                                                                                                       121:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              122:  0x000C   PushGlobal              
                                                                                                                                                                              123:  0xD020   PopFieldI32             TimeSinceDoorClosed

000016          MQTT.Subscribe(Sub_Topic)                                                                                                                                     124:  0x8409   PushLiteral             9
                                                                                                                                                                              125:  0x000E   PushNothing             
                                                                                                                                                                              126:  0x1E3F   BranchSubr              702

000017          //MQTT.Publish("Door", False)
000018          MQTT.Publish("Status", "Booted")                                                                                                                              127:  0x840F   PushLiteral             15
                                                                                                                                                                              128:  0x8412   PushLiteral             18
                                                                                                                                                                              129:  0x000E   PushNothing             
                                                                                                                                                                              130:  0x1D97   BranchSubr              538

000019          accel = New MMA8652                                                                                                                                           131:  0x8064   PushConstU10            100 (0x0064)
                                                                                                                                                                              132:  0x0010   ClassNew                
                                                                                                                                                                              133:  0x1E3C   BranchSubr              706
                                                                                                                                                                              134:  0x1E3D   BranchSubr              708
                                                                                                                                                                              135:  0x000C   PushGlobal              
                                                                                                                                                                              136:  0xD400   PopFieldRef             accel

000020          If accel.online Then                                                                                                                                          137:  0x000C   PushGlobal              
                                                                                                                                                                              138:  0xC400   PushFieldRef            accel
                                                                                                                                                                              139:  0xB804   PushFieldU8             online
                                                                                                                                                                              140:  0x3C0E   BranchFalse             155

000021              MQTT.Publish("Status", "Accel Sensor Online")                                                                                                             141:  0x840F   PushLiteral             15
                                                                                                                                                                              142:  0x8415   PushLiteral             21
                                                                                                                                                                              143:  0x000E   PushNothing             
                                                                                                                                                                              144:  0x1D89   BranchSubr              538

000022              accel.ConfigureShockInterrupt(0.8, 20) //default 0.8, 0                                                                                                   145:  0x0110   PushConstI32            1061997773 (0x3F4CCCCD)
                                                                                                                                                                              146:  0xCCCD                           
                                                                                                                                                                              147:  0x3F4C                           
                                                                                                                                                                              148:  0xEA14   PushConstFlt            20.0
                                                                                                                                                                              149:  0x000C   PushGlobal              
                                                                                                                                                                              150:  0xC400   PushFieldRef            accel
                                                                                                                                                                              151:  0x5800   JumpSubr                1875
                                                                                                                                                                              152:  0x0753                           
                                                                                                                                                                              153:  0xE420   FreeStackSpace          ValTypeSize=1, RefTypeSize=0

000023              'accel.ConfigureOrientationInterrupt(2.4, 500)
                                                                                                                                                                              154:  0x4004   Branch                  159
000024          Else                                                                                                                                                          

000025              MQTT.Publish("Status", "Accel Sensor  Offline")                                                                                                           155:  0x840F   PushLiteral             15
                                                                                                                                                                              156:  0x841B   PushLiteral             27
                                                                                                                                                                              157:  0x000E   PushNothing             
                                                                                                                                                                              158:  0x1D7B   BranchSubr              538

000026          End If
000027      End Event                                                                                                                                                         159:  0x0091   Return                  

000028      
                                                                                                                                                                              160:  0x0005                           EventType=NewGateway
                                                                                                                                                                              161:  0x0700                           EventCategory=Interrupt
000029      Shared Event NewGateway()                                                                                                                                         162:  0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000030          MQTT.Subscribe(Sub_Topic)                                                                                                                                     163:  0x8409   PushLiteral             9
                                                                                                                                                                              164:  0x000E   PushNothing             
                                                                                                                                                                              165:  0x1E18   BranchSubr              702

000031      End Event                                                                                                                                                         166:  0x0091   Return                  

000032      
                                                                                                                                                                              167:  0x0212                           EventType=AccelerometerInt1
                                                                                                                                                                              168:  0x0700                           EventCategory=Interrupt
000033      Shared Event AccelerometerInt1()                                                                                                                                  169:  0x1800   EntryPoint              ValTypParams=0, RefTypParams=0
                                                                                                                                                                              170:  0xE020   AllocateStackSpace      ValTypeSize=1, RefTypeSize=0

000034          Dim int_source As Byte = accel.readIntSource()                                                                                                                171:  0x000C   PushGlobal              
                                                                                                                                                                              172:  0xC400   PushFieldRef            accel
                                                                                                                                                                              173:  0x1FD6   BranchSubr              1156
                                                                                                                                                                              174:  0x9000   PopLocalI32             int_source

000035          If (int_source & MMA8652.SRC_LNDPRT) = MMA8652.SRC_LNDPRT Then                                                                                                175:  0x8800   PushLocalI32            int_source
                                                                                                                                                                              176:  0x8010   PushConstU10            16 (0x0010)
                                                                                                                                                                              177:  0x001F   IntAnd                  
                                                                                                                                                                              178:  0x8010   PushConstU10            16 (0x0010)
                                                                                                                                                                              179:  0x2414   BranchNE                200

000036              'PL interrupt occured
000037              //LedRed = True
000038              If (accel.readPLStatus() & MMA8652.BAFRO) = MMA8652.BAFRO Then                                                                                            180:  0x000C   PushGlobal              
                                                                                                                                                                              181:  0xC400   PushFieldRef            accel
                                                                                                                                                                              182:  0x1FD3   BranchSubr              1162
                                                                                                                                                                              183:  0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              184:  0x001F   IntAnd                  
                                                                                                                                                                              185:  0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              186:  0x2407   BranchNE                194

000039                  'front facing
000040                  LedRed = True                                                                                                                                         187:  0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              188:  0x0809   PopAndSetDigitalPin     Pin9

000041                  MQTT.Publish("Orientation", "Front Facing")                                                                                                           189:  0x8422   PushLiteral             34
                                                                                                                                                                              190:  0x8426   PushLiteral             38
                                                                                                                                                                              191:  0x000E   PushNothing             
                                                                                                                                                                              192:  0x1D59   BranchSubr              538

                                                                                                                                                                              193:  0x4006   Branch                  200
000042              Else                                                                                                                                                      

000043                  'back facing
000044                  LedRed = False                                                                                                                                        194:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              195:  0x0809   PopAndSetDigitalPin     Pin9

000045                  MQTT.Publish("Orientation", "Back Facing")                                                                                                            196:  0x8422   PushLiteral             34
                                                                                                                                                                              197:  0x842B   PushLiteral             43
                                                                                                                                                                              198:  0x000E   PushNothing             
                                                                                                                                                                              199:  0x1D52   BranchSubr              538

000046              End If
000047              //LedRed = False
000048          End If
000049          If (int_source & MMA8652.SRC_TRANS) = MMA8652.SRC_TRANS Then                                                                                                  200:  0x8800   PushLocalI32            int_source
                                                                                                                                                                              201:  0x8020   PushConstU10            32 (0x0020)
                                                                                                                                                                              202:  0x001F   IntAnd                  
                                                                                                                                                                              203:  0x8020   PushConstU10            32 (0x0020)
                                                                                                                                                                              204:  0x2431   BranchNE                254

000050              'Transient interrupt occured
000051              If (accel.readTransientSource() & MMA8652.TEA) = MMA8652.TEA Then                                                                                         205:  0x000C   PushGlobal              
                                                                                                                                                                              206:  0xC400   PushFieldRef            accel
                                                                                                                                                                              207:  0x1FC6   BranchSubr              1174
                                                                                                                                                                              208:  0x8040   PushConstU10            64 (0x0040)
                                                                                                                                                                              209:  0x001F   IntAnd                  
                                                                                                                                                                              210:  0x8040   PushConstU10            64 (0x0040)
                                                                                                                                                                              211:  0x242A   BranchNE                254

000052                  'Any Transient Occured
000053                  LedGreen = True                                                                                                                                       212:  0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              213:  0x080A   PopAndSetDigitalPin     Pin10

000054                  If ReedSwitch = False Then //If door is closed                                                                                                        214:  0x0C0C   GetAndPushDigitalPin    Pin12
                                                                                                                                                                              215:  0x3824   BranchTrue              252

000055                      //if more than 10 seconds since Knock last triggered, and more than 5 seconds since door closed
000056                      If (Device.Uptime() - TimeSinceKnockTriggered > 10) And (Device.Uptime() - TimeSinceDoorClosed > 5) Then                                          216:  0x00F9   DeviceUptime            
                                                                                                                                                                              217:  0x000C   PushGlobal              
                                                                                                                                                                              218:  0xC01C   PushFieldI32            TimeSinceKnockTriggered
                                                                                                                                                                              219:  0x0031   IntSub                  
                                                                                                                                                                              220:  0x800A   PushConstU10            10 (0x000A)
                                                                                                                                                                              221:  0x0022   IntCmpGT                
                                                                                                                                                                              222:  0x00F9   DeviceUptime            
                                                                                                                                                                              223:  0x000C   PushGlobal              
                                                                                                                                                                              224:  0xC020   PushFieldI32            TimeSinceDoorClosed
                                                                                                                                                                              225:  0x0031   IntSub                  
                                                                                                                                                                              226:  0x8005   PushConstU10            5 (0x0005)
                                                                                                                                                                              227:  0x0022   IntCmpGT                
                                                                                                                                                                              228:  0x001F   IntAnd                  
                                                                                                                                                                              229:  0x3C16   BranchFalse             252
                                                                                                                                                                              230:  0xE020   AllocateStackSpace      ValTypeSize=1, RefTypeSize=0

000057                          Dim timeSinceLastTransient As Integer = Device.GetTimeSpan()                                                                                  231:  0x00FB   DeviceGetTimeSpan       
                                                                                                                                                                              232:  0x9001   PopLocalI32             timeSinceLastTransient

000058                          'If at least two transients within 0.5 seconds
000059                          If timeSinceLastTransient < 500000 And timeSinceLastTransient > 0 Then                                                                        233:  0x8801   PushLocalI32            timeSinceLastTransient
                                                                                                                                                                              234:  0x0110   PushConstI32            500000 (0x0007A120)
                                                                                                                                                                              235:  0xA120                           
                                                                                                                                                                              236:  0x0007                           
                                                                                                                                                                              237:  0x0024   IntCmpLT                
                                                                                                                                                                              238:  0x8801   PushLocalI32            timeSinceLastTransient
                                                                                                                                                                              239:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              240:  0x0022   IntCmpGT                
                                                                                                                                                                              241:  0x001F   IntAnd                  
                                                                                                                                                                              242:  0x3C08   BranchFalse             251

000060                              TimeSinceKnockTriggered = Device.Uptime()                                                                                                 243:  0x00F9   DeviceUptime            
                                                                                                                                                                              244:  0x000C   PushGlobal              
                                                                                                                                                                              245:  0xD01C   PopFieldI32             TimeSinceKnockTriggered

000061                              MQTT.Publish("Doorknock", True)                                                                                                           246:  0x842F   PushLiteral             47
                                                                                                                                                                              247:  0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              248:  0x1401   Box                     BoxBoolean
                                                                                                                                                                              249:  0x000E   PushNothing             
                                                                                                                                                                              250:  0x1D3F   BranchSubr              570

000062                          End If
                                                                                                                                                                              251:  0xE420   FreeStackSpace          ValTypeSize=1, RefTypeSize=0
000063                      End If                                                                                                                                            

000064                  End If
000065                  LedGreen = False                                                                                                                                      252:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              253:  0x080A   PopAndSetDigitalPin     Pin10

000066              End If 
000067          End If
000068      End Event                                                                                                                                                         254:  0x0091   Return                  

000069      
                                                                                                                                                                              255:  0x030C                           EventType=ReedSwitchChanged
                                                                                                                                                                              256:  0x0700                           EventCategory=Interrupt
000070      Shared Event ReedSwitchChanged()                                                                                                                                  257:  0x1800   EntryPoint              ValTypParams=0, RefTypParams=0
                                                                                                                                                                              258:  0xE020   AllocateStackSpace      ValTypeSize=1, RefTypeSize=0

000071          Thread.Sleep(500000)                                                                                                                                          259:  0x0110   PushConstI32            500000 (0x0007A120)
                                                                                                                                                                              260:  0xA120                           
                                                                                                                                                                              261:  0x0007                           
                                                                                                                                                                              262:  0x00D5   ThreadSleep             
                                                                                                                                                                              263:  0xE420   FreeStackSpace          ValTypeSize=1, RefTypeSize=0

000072          Thread.ClearHardwareEvent()                                                                                                                                   264:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              265:  0x00FA   SetCleartHardwareEvent  

000073          LedGreen = True                                                                                                                                               266:  0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              267:  0x080A   PopAndSetDigitalPin     Pin10

000074          Dim Door_Status As Boolean = ReedSwitch                                                                                                                       268:  0x0C0C   GetAndPushDigitalPin    Pin12
                                                                                                                                                                              269:  0x9000   PopLocalI32             Door_Status

000075          If Door_Status = False Then                                                                                                                                   270:  0x8800   PushLocalI32            Door_Status
                                                                                                                                                                              271:  0x3803   BranchTrue              275

000076              TimeSinceDoorClosed = Device.Uptime()                                                                                                                     272:  0x00F9   DeviceUptime            
                                                                                                                                                                              273:  0x000C   PushGlobal              
                                                                                                                                                                              274:  0xD020   PopFieldI32             TimeSinceDoorClosed

000077          End If
000078          If Publish_data Then                                                                                                                                          275:  0x000C   PushGlobal              
                                                                                                                                                                              276:  0xB814   PushFieldU8             Publish_data
                                                                                                                                                                              277:  0x3C05   BranchFalse             283

000079              MQTT.Publish("Door", Door_Status)                                                                                                                         278:  0x8433   PushLiteral             51
                                                                                                                                                                              279:  0x8800   PushLocalI32            Door_Status
                                                                                                                                                                              280:  0x1401   Box                     BoxBoolean
                                                                                                                                                                              281:  0x000E   PushNothing             
                                                                                                                                                                              282:  0x1D1F   BranchSubr              570

000080          End If
000081          MQTT.BeaconPublish(dataType.DOOR, Door_Status)                                                                                                                283:  0x800B   PushConstU10            11 (0x000B)
                                                                                                                                                                              284:  0x8800   PushLocalI32            Door_Status
                                                                                                                                                                              285:  0x1401   Box                     BoxBoolean
                                                                                                                                                                              286:  0x000E   PushNothing             
                                                                                                                                                                              287:  0x1D4B   BranchSubr              619

000082          LedGreen = False                                                                                                                                              288:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              289:  0x080A   PopAndSetDigitalPin     Pin10

000083      End Event                                                                                                                                                         290:  0x0091   Return                  

000084      
                                                                                                                                                                              291:  0x0003                           EventType=SubscriptionDelivery
                                                                                                                                                                              292:  0x0700                           EventCategory=Interrupt
000085      Shared Event SubscriptionDelivery()                                                                                                                               293:  0x1800   EntryPoint              ValTypParams=0, RefTypParams=0
                                                                                                                                                                              294:  0xE001   AllocateStackSpace      ValTypeSize=0, RefTypeSize=1

000086          Dim msg As Message = Lplan.GetDelivery()                                                                                                                      295:  0x00FE   LplanGetDelivery        
                                                                                                                                                                              296:  0x9400   PopLocalRef             msg

000087          If msg.Topic= Sub_Topic Then                                                                                                                                  297:  0x8C00   PushLocalRef            msg
                                                                                                                                                                              298:  0xC400   PushFieldRef            Offset=0
                                                                                                                                                                              299:  0x8409   PushLiteral             9
                                                                                                                                                                              300:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              301:  0x0058   StrCmpEQ                
                                                                                                                                                                              302:  0x3C1D   BranchFalse             332
                                                                                                                                                                              303:  0xE021   AllocateStackSpace      ValTypeSize=1, RefTypeSize=1

000088              'Dim payload As ListOfByte = msg.PayLoad
000089              Dim tmp As Boolean = True 'payload.ExtractFloat(0)                                                                                                        304:  0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              305:  0x9000   PopLocalI32             tmp

000090              Dim tmp_str As String = msg.PayLoad.ToString()                                                                                                            306:  0x8C00   PushLocalRef            msg
                                                                                                                                                                              307:  0xC404   PushFieldRef            Offset=4
                                                                                                                                                                              308:  0x006B   StrFromListOfByte       
                                                                                                                                                                              309:  0x9401   PopLocalRef             tmp_str

000091              
000092              If Boolean.TryConvert(tmp_str, tmp) Then                                                                                                                  310:  0x8C01   PushLocalRef            tmp_str
                                                                                                                                                                              311:  0x8800   PushLocalI32            tmp
                                                                                                                                                                              312:  0x008A   TryCvtStrToBoo          
                                                                                                                                                                              313:  0x9000   PopLocalI32             tmp
                                                                                                                                                                              314:  0x3C0A   BranchFalse             325

000093                  Publish_data = tmp                                                                                                                                    315:  0x8800   PushLocalI32            tmp
                                                                                                                                                                              316:  0x000C   PushGlobal              
                                                                                                                                                                              317:  0xC814   PopFieldU8              Publish_data

000094                  MQTT.Publish("Publish", Publish_data)                                                                                                                 318:  0x8436   PushLiteral             54
                                                                                                                                                                              319:  0x000C   PushGlobal              
                                                                                                                                                                              320:  0xB814   PushFieldU8             Publish_data
                                                                                                                                                                              321:  0x1401   Box                     BoxBoolean
                                                                                                                                                                              322:  0x000E   PushNothing             
                                                                                                                                                                              323:  0x1CF6   BranchSubr              570

                                                                                                                                                                              324:  0x4006   Branch                  331
000095              Else                                                                                                                                                      

000096                  MQTT.Publish("Publish", tmp_str + " :Boolean Conversion failed")                                                                                      325:  0x8436   PushLiteral             54
                                                                                                                                                                              326:  0x8C01   PushLocalRef            tmp_str
                                                                                                                                                                              327:  0x8439   PushLiteral             57
                                                                                                                                                                              328:  0x0056   StrAdd                  
                                                                                                                                                                              329:  0x000E   PushNothing             
                                                                                                                                                                              330:  0x1CCF   BranchSubr              538

000097              End If   
                                                                                                                                                                              331:  0xE421   FreeStackSpace          ValTypeSize=1, RefTypeSize=1
000098          End If                                                                                                                                                        

000099      End Event                                                                                                                                                         332:  0x0091   Return                  

000100      
                                                                                                                                                                              333:  0x000A                           TimeValue=10
                                                                                                                                                                              334:  0x0300                           EventCategory=TimeInSeconds
000101      Shared Event Publish() RaiseEvent Every 10 Seconds //1 Minutes                                                                                                    335:  0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000102          LedGreen = True                                                                                                                                               336:  0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              337:  0x080A   PopAndSetDigitalPin     Pin10

000103          //Dim Test As Byte = accel.whoAmI()
000104          //MQTT.Publish("Test", Test)
000105          Select data                                                                                                                                                   338:  0x000C   PushGlobal              
                                                                                                                                                                              339:  0xC018   PushFieldI32            data
                                                                                                                                                                              340:  0x0122   CaseComputed            
                                                                                                                                                                              341:  0x0002                           CaseCommonClass=Byte
                                                                                                                                                                              342:  0x0004                           NumberOfCaseEntries=4
                                                                                                                                                                              343:  0x0062                           CaseElseBranch=442
                                                                                                                                                                              344:  0x0002                           CaseValue=2
                                                                                                                                                                              345:  0x0008                           CaseBranch=352
                                                                                                                                                                              346:  0x0003                           CaseValue=3
                                                                                                                                                                              347:  0x0022                           CaseBranch=378
                                                                                                                                                                              348:  0x0004                           CaseValue=4
                                                                                                                                                                              349:  0x0037                           CaseBranch=399
                                                                                                                                                                              350:  0x000B                           CaseValue=11
                                                                                                                                                                              351:  0x004D                           CaseBranch=421

000106              Case dataType.UPTIME                                                                                                                                      352:  0xE020   AllocateStackSpace      ValTypeSize=1, RefTypeSize=0

000107                  Dim Uptime As Integer = Device.Uptime()                                                                                                               353:  0x00F9   DeviceUptime            
                                                                                                                                                                              354:  0x9000   PopLocalI32             Uptime

000108                  If Publish_data Then                                                                                                                                  355:  0x000C   PushGlobal              
                                                                                                                                                                              356:  0xB814   PushFieldU8             Publish_data
                                                                                                                                                                              357:  0x3C05   BranchFalse             363

000109                      MQTT.Publish("Uptime", Uptime)                                                                                                                    358:  0x8441   PushLiteral             65
                                                                                                                                                                              359:  0x8800   PushLocalI32            Uptime
                                                                                                                                                                              360:  0x1404   Box                     BoxInteger
                                                                                                                                                                              361:  0x000E   PushNothing             
                                                                                                                                                                              362:  0x1CCF   BranchSubr              570

000110                  End If
000111                  If Uptime < Short.MaxValue Then                                                                                                                       363:  0x8800   PushLocalI32            Uptime
                                                                                                                                                                              364:  0x0110   PushConstI32            32767 (0x00007FFF)
                                                                                                                                                                              365:  0x7FFF                           
                                                                                                                                                                              366:  0x0000                           
                                                                                                                                                                              367:  0x3405   BranchGE                373

000112                      MQTT.BeaconPublish(dataType.UPTIME, Uptime)                                                                                                       368:  0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              369:  0x8800   PushLocalI32            Uptime
                                                                                                                                                                              370:  0x1404   Box                     BoxInteger
                                                                                                                                                                              371:  0x000E   PushNothing             
                                                                                                                                                                              372:  0x1CF6   BranchSubr              619

000113                  End If
000114                  data = dataType.BATTVOLTAGE                                                                                                                           373:  0x8003   PushConstU10            3 (0x0003)
                                                                                                                                                                              374:  0x000C   PushGlobal              
                                                                                                                                                                              375:  0xD018   PopFieldI32             data

                                                                                                                                                                              376:  0xE420   FreeStackSpace          ValTypeSize=1, RefTypeSize=0
                                                                                                                                                                              377:  0x4047   Branch                  449
000115              Case dataType.BATTVOLTAGE                                                                                                                                 378:  0xE020   AllocateStackSpace      ValTypeSize=1, RefTypeSize=0

000116                  Dim BattVolt As Integer = Device.BatteryVoltage()                                                                                                     379:  0x00ED   DeviceBatteryVoltage    
                                                                                                                                                                              380:  0x9000   PopLocalI32             BattVolt

000117                  If Publish_data Then                                                                                                                                  381:  0x000C   PushGlobal              
                                                                                                                                                                              382:  0xB814   PushFieldU8             Publish_data
                                                                                                                                                                              383:  0x3C05   BranchFalse             389

000118                      MQTT.Publish("BatteryVoltage", BattVolt)                                                                                                          384:  0x8444   PushLiteral             68
                                                                                                                                                                              385:  0x8800   PushLocalI32            BattVolt
                                                                                                                                                                              386:  0x1404   Box                     BoxInteger
                                                                                                                                                                              387:  0x000E   PushNothing             
                                                                                                                                                                              388:  0x1CB5   BranchSubr              570

000119                  End If
000120                  MQTT.BeaconPublish(dataType.BATTVOLTAGE, BattVolt)                                                                                                    389:  0x8003   PushConstU10            3 (0x0003)
                                                                                                                                                                              390:  0x8800   PushLocalI32            BattVolt
                                                                                                                                                                              391:  0x1404   Box                     BoxInteger
                                                                                                                                                                              392:  0x000E   PushNothing             
                                                                                                                                                                              393:  0x1CE1   BranchSubr              619

000121                  data = dataType.TEMPERATURE                                                                                                                           394:  0x8004   PushConstU10            4 (0x0004)
                                                                                                                                                                              395:  0x000C   PushGlobal              
                                                                                                                                                                              396:  0xD018   PopFieldI32             data

                                                                                                                                                                              397:  0xE420   FreeStackSpace          ValTypeSize=1, RefTypeSize=0
                                                                                                                                                                              398:  0x4032   Branch                  449
000122              Case dataType.TEMPERATURE                                                                                                                                 399:  0xE020   AllocateStackSpace      ValTypeSize=1, RefTypeSize=0

000123                  Dim TempC As Float = TempSensor.GetTemp                                                                                                               400:  0x000E   PushNothing             
                                                                                                                                                                              401:  0x1C34   BranchSubr              454
                                                                                                                                                                              402:  0x9000   PopLocalI32             TempC

000124                  If Publish_data Then                                                                                                                                  403:  0x000C   PushGlobal              
                                                                                                                                                                              404:  0xB814   PushFieldU8             Publish_data
                                                                                                                                                                              405:  0x3C05   BranchFalse             411

000125                      MQTT.Publish("Temperature", TempC)                                                                                                                406:  0x8449   PushLiteral             73
                                                                                                                                                                              407:  0x8800   PushLocalI32            TempC
                                                                                                                                                                              408:  0x1406   Box                     BoxFloat
                                                                                                                                                                              409:  0x000E   PushNothing             
                                                                                                                                                                              410:  0x1C9F   BranchSubr              570

000126                  End If
000127                  MQTT.BeaconPublish(dataType.TEMPERATURE, TempC)                                                                                                       411:  0x8004   PushConstU10            4 (0x0004)
                                                                                                                                                                              412:  0x8800   PushLocalI32            TempC
                                                                                                                                                                              413:  0x1406   Box                     BoxFloat
                                                                                                                                                                              414:  0x000E   PushNothing             
                                                                                                                                                                              415:  0x1CCB   BranchSubr              619

000128                  data = dataType.DOOR                                                                                                                                  416:  0x800B   PushConstU10            11 (0x000B)
                                                                                                                                                                              417:  0x000C   PushGlobal              
                                                                                                                                                                              418:  0xD018   PopFieldI32             data

                                                                                                                                                                              419:  0xE420   FreeStackSpace          ValTypeSize=1, RefTypeSize=0
                                                                                                                                                                              420:  0x401C   Branch                  449
000129              Case dataType.DOOR                                                                                                                                        421:  0xE020   AllocateStackSpace      ValTypeSize=1, RefTypeSize=0

000130                  Dim Door_Status As Boolean = ReedSwitch                                                                                                               422:  0x0C0C   GetAndPushDigitalPin    Pin12
                                                                                                                                                                              423:  0x9000   PopLocalI32             Door_Status

000131                  If Publish_data Then                                                                                                                                  424:  0x000C   PushGlobal              
                                                                                                                                                                              425:  0xB814   PushFieldU8             Publish_data
                                                                                                                                                                              426:  0x3C05   BranchFalse             432

000132                      MQTT.Publish("Door", Door_Status) //True = OPEN False = CLOSED                                                                                    427:  0x8433   PushLiteral             51
                                                                                                                                                                              428:  0x8800   PushLocalI32            Door_Status
                                                                                                                                                                              429:  0x1401   Box                     BoxBoolean
                                                                                                                                                                              430:  0x000E   PushNothing             
                                                                                                                                                                              431:  0x1C8A   BranchSubr              570

000133                  End If
000134                  MQTT.BeaconPublish(dataType.DOOR, Door_Status)                                                                                                        432:  0x800B   PushConstU10            11 (0x000B)
                                                                                                                                                                              433:  0x8800   PushLocalI32            Door_Status
                                                                                                                                                                              434:  0x1401   Box                     BoxBoolean
                                                                                                                                                                              435:  0x000E   PushNothing             
                                                                                                                                                                              436:  0x1CB6   BranchSubr              619

000135                  data = dataType.UPTIME                                                                                                                                437:  0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              438:  0x000C   PushGlobal              
                                                                                                                                                                              439:  0xD018   PopFieldI32             data

                                                                                                                                                                              440:  0xE420   FreeStackSpace          ValTypeSize=1, RefTypeSize=0
                                                                                                                                                                              441:  0x4007   Branch                  449
000136              Case Else                                                                                                                                                 

000137                  MQTT.Publish("Status", "OnLine")                                                                                                                      442:  0x840F   PushLiteral             15
                                                                                                                                                                              443:  0x844D   PushLiteral             77
                                                                                                                                                                              444:  0x000E   PushNothing             
                                                                                                                                                                              445:  0x1C5C   BranchSubr              538

000138                  data = dataType.UPTIME                                                                                                                                446:  0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              447:  0x000C   PushGlobal              
                                                                                                                                                                              448:  0xD018   PopFieldI32             data

000139          End Select
000140          LedGreen = False                                                                                                                                              449:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              450:  0x080A   PopAndSetDigitalPin     Pin10

000141      End Event                                                                                                                                                         451:  0x0091   Return                  

000142  End Class                                                                                                                                                             111:  0x0097   ReturnMe                


****** BLOCKS and VARIABLES for Main
    Block Class (Line 3:142)
        Main            Me              (ReadOnly, Offset=0)
        Object          MyBase          (ReadOnly, Offset=0)
        dataType        data            (SharedValTypVariableOffset=24)
        String          Sub_Topic       (Literal="MCThings/Publish")
        Boolean         Publish_data    (SharedValTypVariableOffset=20)
        MMA8652         accel           (SharedRefTypVariableOffset=0)
        Integer         TimeSinceKnockTr(SharedValTypVariableOffset=28)
        Integer         TimeSinceDoorClo(SharedValTypVariableOffset=32)
        Block Event Boot (Line 12:27)
            Block If Then  (Line 20:24)
            End Block
            Block Else (Line 24:26)
            End Block
        End Block
        Block Event NewGateway (Line 29:31)
        End Block
        Block Event AccelerometerInt1 (Line 33:68)
            Byte            int_source      (LocalValTypVariableOffset=0)
            Block If Then  (Line 35:48)
                Block If Then  (Line 38:42)
                End Block
                Block Else (Line 42:46)
                End Block
            End Block
            Block If Then  (Line 49:67)
                Block If Then  (Line 51:66)
                    Block If Then  (Line 54:64)
                        Block If Then  (Line 56:63)
                            Integer         timeSinceLastTra(LocalValTypVariableOffset=1)
                            Block If Then  (Line 59:62)
                            End Block
                        End Block
                    End Block
                End Block
            End Block
        End Block
        Block Event ReedSwitchChanged (Line 70:83)
            Boolean         Door_Status     (LocalValTypVariableOffset=0)
            Block If Then  (Line 75:77)
            End Block
            Block If Then  (Line 78:80)
            End Block
        End Block
        Block Event SubscriptionDelivery (Line 85:99)
            Message         msg             (LocalRefTypVariableOffset=0)
            Block If Then  (Line 87:98)
                Boolean         tmp             (LocalValTypVariableOffset=0)
                String          tmp_str         (LocalRefTypVariableOffset=1)
                Block If Then  (Line 92:95)
                End Block
                Block Else (Line 95:97)
                End Block
            End Block
        End Block
        Block Event Publish (Line 101:141)
        End Block
        Total Size of Member data including base classes = 0.
    End Block


*************************************************************************************************************

000001  Class TempSensor                                                                                                                                                      452:  0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000002      // Function returns the temperature in degree celcius or 
000003      // Float.NaN if something is wrong
000004      Shared Function GetTemp() As Float                                                                                                                                454:  0x1800   EntryPoint              ValTypParams=0, RefTypParams=0
                                                                                                                                                                              455:  0xE022   AllocateStackSpace      ValTypeSize=1, RefTypeSize=2

000005          // Define the properties of the I2C peripheral and device address
000006          Dim sensor As I2c
000007          sensor = I2c.Create(250000, Pin.SCL, Pin.SDA, 0x48)                                                                                                           456:  0x0110   PushConstI32            250000 (0x0003D090)
                                                                                                                                                                              457:  0xD090                           
                                                                                                                                                                              458:  0x0003                           
                                                                                                                                                                              459:  0x800D   PushConstU10            13 (0x000D)
                                                                                                                                                                              460:  0x800E   PushConstU10            14 (0x000E)
                                                                                                                                                                              461:  0x8048   PushConstU10            72 (0x0048)
                                                                                                                                                                              462:  0x803B   PushConstU10            59 (0x003B)
                                                                                                                                                                              463:  0x0010   ClassNew                
                                                                                                                                                                              464:  0x9400   PopLocalRef             sensor

000008          
000009          // Power up the sensor and give it some time to settle
000010          Device.EnableTempSensor()                                                                                                                                     465:  0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              466:  0x00F0   DeviceEnableTemp        

000011          Thread.Sleep(40000) // See page 13 of the datasheet                                                                                                           467:  0x0110   PushConstI32            40000 (0x00009C40)
                                                                                                                                                                              468:  0x9C40                           
                                                                                                                                                                              469:  0x0000                           
                                                                                                                                                                              470:  0x00D5   ThreadSleep             
                                                                                                                                                                              471:  0xE420   FreeStackSpace          ValTypeSize=1, RefTypeSize=0

000012          
000013          // Read the sensor (only 2 bytes to read
000014          Dim res As ListOfByte = sensor.Read(2)                                                                                                                        472:  0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              473:  0x8C00   PushLocalRef            sensor
                                                                                                                                                                              474:  0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              475:  0x00E0   I2cDeviceRead           
                                                                                                                                                                              476:  0x9401   PopLocalRef             res

000015          
000016          // See Tmp102 documentation how to interpret the data (page 8)
000017          Dim temp As Float = Float.NaN                                                                                                                                 477:  0x0110   PushConstI32            -4194304 (0xFFC00000)
                                                                                                                                                                              478:  0x0000                           
                                                                                                                                                                              479:  0xFFC0                           
                                                                                                                                                                              480:  0x9000   PopLocalI32             temp

000018          If res <> Nothing Then                                                                                                                                        481:  0x8C01   PushLocalRef            res
                                                                                                                                                                              482:  0x000E   PushNothing             
                                                                                                                                                                              483:  0x000B   RefCmpNE                
                                                                                                                                                                              484:  0x3C16   BranchFalse             507
                                                                                                                                                                              485:  0xE020   AllocateStackSpace      ValTypeSize=1, RefTypeSize=0

000019              // Shift the partial part to the right nibble
000020              Dim part As Float = res(1) >> 4                                                                                                                           486:  0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              487:  0x8C01   PushLocalRef            res
                                                                                                                                                                              488:  0x00B4   ListItemGet             
                                                                                                                                                                              489:  0x8004   PushConstU10            4 (0x0004)
                                                                                                                                                                              490:  0x002F   IntShr                  
                                                                                                                                                                              491:  0x007E   CvtIntToFlt             
                                                                                                                                                                              492:  0x9001   PopLocalI32             part

000021              // Temperature partial is 1/16*n where n is between 0 and 15            
000022              part = part / 16                                                                                                                                          493:  0x8801   PushLocalI32            part
                                                                                                                                                                              494:  0xEA10   PushConstFlt            16.0
                                                                                                                                                                              495:  0x003B   FltDiv                  
                                                                                                                                                                              496:  0x9001   PopLocalI32             part

000023              // Sign extend the byte to an integer
000024              temp = res(0).SignExtend() + part                                                                                                                         497:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              498:  0x8C01   PushLocalRef            res
                                                                                                                                                                              499:  0x00B4   ListItemGet             
                                                                                                                                                                              500:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              501:  0x0005   SignExtend              
                                                                                                                                                                              502:  0x8801   PushLocalI32            part
                                                                                                                                                                              503:  0x0078   CvtIntToFlt1            
                                                                                                                                                                              504:  0x0039   FltAdd                  
                                                                                                                                                                              505:  0x9000   PopLocalI32             temp

                                                                                                                                                                              506:  0xE420   FreeStackSpace          ValTypeSize=1, RefTypeSize=0
000025          End If                                                                                                                                                        

000026          
000027          // power off
000028          Device.DisableTempSensor()                                                                                                                                    507:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              508:  0x00F0   DeviceEnableTemp        

000029          Return temp                                                                                                                                                   509:  0x8800   PushLocalI32            temp
                                                                                                                                                                              510:  0x0092   ReturnValType           

000030      End Function                                                                                                                                                      511:  0x0093   Return0                 

000031      
000032      Shared Function GetDieTemp() As Float                                                                                                                             512:  0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000033          // Just get the temperature and return
000034          Return Device.TempDie                                                                                                                                         513:  0x00F7   DeviceTempDie           
                                                                                                                                                                              514:  0x0092   ReturnValType           

000035      End Function                                                                                                                                                      515:  0x0093   Return0                 

000036      
000037      Shared Function ToFarenheit(celcius As Float) As Float                                                                                                            516:  0x1810   EntryPoint              ValTypParams=1, RefTypParams=0

000038          Return (celcius * 9) / 5 + 32                                                                                                                                 517:  0x8800   PushLocalI32            celcius
                                                                                                                                                                              518:  0xEA09   PushConstFlt            9.0
                                                                                                                                                                              519:  0x003C   FltMul                  
                                                                                                                                                                              520:  0xEA05   PushConstFlt            5.0
                                                                                                                                                                              521:  0x003B   FltDiv                  
                                                                                                                                                                              522:  0xEA20   PushConstFlt            32.0
                                                                                                                                                                              523:  0x0039   FltAdd                  
                                                                                                                                                                              524:  0x0092   ReturnValType           

000039      End Function                                                                                                                                                      525:  0x0093   Return0                 

000040      
000041      Shared Function ToCelcius(farenheit As Float) As Float                                                                                                            526:  0x1810   EntryPoint              ValTypParams=1, RefTypParams=0

000042          Return (farenheit - 32) * 5 / 9                                                                                                                               527:  0x8800   PushLocalI32            farenheit
                                                                                                                                                                              528:  0xEA20   PushConstFlt            32.0
                                                                                                                                                                              529:  0x003F   FltSub                  
                                                                                                                                                                              530:  0xEA05   PushConstFlt            5.0
                                                                                                                                                                              531:  0x003C   FltMul                  
                                                                                                                                                                              532:  0xEA09   PushConstFlt            9.0
                                                                                                                                                                              533:  0x003B   FltDiv                  
                                                                                                                                                                              534:  0x0092   ReturnValType           

000043      End Function                                                                                                                                                      535:  0x0093   Return0                 

000044      
000045  End Class                                                                                                                                                             453:  0x0097   ReturnMe                


****** BLOCKS and VARIABLES for TempSensor
    Block Class (Line 1:45)
        TempSensor      Me              (ReadOnly, Offset=0)
        Object          MyBase          (ReadOnly, Offset=0)
        Block Function GetTemp (Line 4:30)
            I2c             sensor          (LocalRefTypVariableOffset=0)
            ListOfByte      res             (LocalRefTypVariableOffset=1)
            Float           temp            (LocalValTypVariableOffset=0)
            Block If Then  (Line 18:25)
                Float           part            (LocalValTypVariableOffset=1)
            End Block
        End Block
        Block Function GetDieTemp (Line 32:35)
        End Block
        Block Function ToFarenheit (Line 37:39)
            Float           celcius         (LocalValTypVariableOffset=0)
        End Block
        Block Function ToCelcius (Line 41:43)
            Float           farenheit       (LocalValTypVariableOffset=0)
        End Block
        Total Size of Member data including base classes = 0.
    End Block


*************************************************************************************************************

000003  Enum dataType As Byte
000004      NONE = 0
000005      VERSION = 1 //default beacon data for MQTT
000006      UPTIME = 2
000007      BATTVOLTAGE = 3
000008      TEMPERATURE = 4
000009      TEMPERATURE2 = 5
000010      HUMIDITY = 6
000011      DEWPOINT = 7
000012      PRESSURE = 8
000013      ALTITUDE = 9
000014      MOTION = 10
000015      DOOR = 11
000016      KNOCK = 12
000017  End Enum

****** BLOCKS and VARIABLES for dataType
    Block Struct (Line 3:17)
        dataType        NONE            (Literal=0)
        dataType        VERSION         (Literal=1)
        dataType        UPTIME          (Literal=2)
        dataType        BATTVOLTAGE     (Literal=3)
        dataType        TEMPERATURE     (Literal=4)
        dataType        TEMPERATURE2    (Literal=5)
        dataType        HUMIDITY        (Literal=6)
        dataType        DEWPOINT        (Literal=7)
        dataType        PRESSURE        (Literal=8)
        dataType        ALTITUDE        (Literal=9)
        dataType        MOTION          (Literal=10)
        dataType        DOOR            (Literal=11)
        dataType        KNOCK           (Literal=12)
        Total Size of Member data including base classes = 0.
    End Block


*************************************************************************************************************

000019  Class MQTT                                                                                                                                                            536:  0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000020      Shared mcUIDString As String
000021      
000022      Shared Sub Publish(topic As String, value As String)                                                                                                              538:  0x1802   EntryPoint              ValTypParams=0, RefTypParams=2
                                                                                                                                                                              539:  0xE001   AllocateStackSpace      ValTypeSize=0, RefTypeSize=1

000023          If mcUIDString = Nothing Then                                                                                                                                 540:  0x000C   PushGlobal              
                                                                                                                                                                              541:  0xC404   PushFieldRef            mcUIDString
                                                                                                                                                                              542:  0x000E   PushNothing             
                                                                                                                                                                              543:  0x000A   RefCmpEQ                
                                                                                                                                                                              544:  0x3C06   BranchFalse             551

000024              mcUIDString = Device.mcUID().ToString("X8")                                                                                                               545:  0x8450   PushLiteral             80
                                                                                                                                                                              546:  0x00F8   DeviceUID               
                                                                                                                                                                              547:  0x8004   PushConstU10            4 (0x0004)
                                                                                                                                                                              548:  0x0069   StrFormat               
                                                                                                                                                                              549:  0x000C   PushGlobal              
                                                                                                                                                                              550:  0xD404   PopFieldRef             mcUIDString

000025          End If
000026          Dim text_string As ListOfByte = New ListOfByte()                                                                                                              551:  0x800C   PushConstU10            12 (0x000C)
                                                                                                                                                                              552:  0x0010   ClassNew                
                                                                                                                                                                              553:  0x9402   PopLocalRef             text_string

000027          text_string.Add(value)                                                                                                                                        554:  0x8C01   PushLocalRef            value
                                                                                                                                                                              555:  0x8C02   PushLocalRef            text_string
                                                                                                                                                                              556:  0x00A6   ListAddString           

000028          Lplan.Publish("MCThings/" + mcUIDString + "/" + topic, text_string)                                                                                           557:  0x8452   PushLiteral             82
                                                                                                                                                                              558:  0x000C   PushGlobal              
                                                                                                                                                                              559:  0xC404   PushFieldRef            mcUIDString
                                                                                                                                                                              560:  0x0056   StrAdd                  
                                                                                                                                                                              561:  0x8456   PushLiteral             86
                                                                                                                                                                              562:  0x0056   StrAdd                  
                                                                                                                                                                              563:  0x8C00   PushLocalRef            topic
                                                                                                                                                                              564:  0x0056   StrAdd                  
                                                                                                                                                                              565:  0x8C02   PushLocalRef            text_string
                                                                                                                                                                              566:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              567:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              568:  0x0101   LplanPublish            

000029      End Sub                                                                                                                                                           569:  0x0091   Return                  

000030      
000031      Shared Sub Publish(topic As String, value As Object)                                                                                                              570:  0x1802   EntryPoint              ValTypParams=0, RefTypParams=2
                                                                                                                                                                              571:  0xE002   AllocateStackSpace      ValTypeSize=0, RefTypeSize=2

000032          Dim text As String = value.ToString()                                                                                                                         572:  0x8C01   PushLocalRef            value
                                                                                                                                                                              573:  0x0081   CvtObjToStr             
                                                                                                                                                                              574:  0x9402   PopLocalRef             text

000033          If mcUIDString = Nothing Then                                                                                                                                 575:  0x000C   PushGlobal              
                                                                                                                                                                              576:  0xC404   PushFieldRef            mcUIDString
                                                                                                                                                                              577:  0x000E   PushNothing             
                                                                                                                                                                              578:  0x000A   RefCmpEQ                
                                                                                                                                                                              579:  0x3C06   BranchFalse             586

000034              mcUIDString = Device.mcUID().ToString("X8")                                                                                                               580:  0x8450   PushLiteral             80
                                                                                                                                                                              581:  0x00F8   DeviceUID               
                                                                                                                                                                              582:  0x8004   PushConstU10            4 (0x0004)
                                                                                                                                                                              583:  0x0069   StrFormat               
                                                                                                                                                                              584:  0x000C   PushGlobal              
                                                                                                                                                                              585:  0xD404   PopFieldRef             mcUIDString

000035          End If
000036          Dim text_string As ListOfByte = New ListOfByte()                                                                                                              586:  0x800C   PushConstU10            12 (0x000C)
                                                                                                                                                                              587:  0x0010   ClassNew                
                                                                                                                                                                              588:  0x9403   PopLocalRef             text_string

000037          text_string.Add(text)                                                                                                                                         589:  0x8C02   PushLocalRef            text
                                                                                                                                                                              590:  0x8C03   PushLocalRef            text_string
                                                                                                                                                                              591:  0x00A6   ListAddString           

000038          Lplan.Publish("MCThings/" + mcUIDString + "/" + topic, text_string)                                                                                           592:  0x8452   PushLiteral             82
                                                                                                                                                                              593:  0x000C   PushGlobal              
                                                                                                                                                                              594:  0xC404   PushFieldRef            mcUIDString
                                                                                                                                                                              595:  0x0056   StrAdd                  
                                                                                                                                                                              596:  0x8456   PushLiteral             86
                                                                                                                                                                              597:  0x0056   StrAdd                  
                                                                                                                                                                              598:  0x8C00   PushLocalRef            topic
                                                                                                                                                                              599:  0x0056   StrAdd                  
                                                                                                                                                                              600:  0x8C03   PushLocalRef            text_string
                                                                                                                                                                              601:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              602:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              603:  0x0101   LplanPublish            

000039      End Sub                                                                                                                                                           604:  0x0091   Return                  

000040      
000041      Shared Sub Publish_exact(topic As String, text As String)                                                                                                         605:  0x1802   EntryPoint              ValTypParams=0, RefTypParams=2
                                                                                                                                                                              606:  0xE001   AllocateStackSpace      ValTypeSize=0, RefTypeSize=1

000042          Dim text_String As ListOfByte = New ListOfByte()                                                                                                              607:  0x800C   PushConstU10            12 (0x000C)
                                                                                                                                                                              608:  0x0010   ClassNew                
                                                                                                                                                                              609:  0x9402   PopLocalRef             text_String

000043          text_String.Add(text)                                                                                                                                         610:  0x8C01   PushLocalRef            text
                                                                                                                                                                              611:  0x8C02   PushLocalRef            text_String
                                                                                                                                                                              612:  0x00A6   ListAddString           

000044          Lplan.Publish(topic, text_String)                                                                                                                             613:  0x8C00   PushLocalRef            topic
                                                                                                                                                                              614:  0x8C02   PushLocalRef            text_String
                                                                                                                                                                              615:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              616:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              617:  0x0101   LplanPublish            

000045      End Sub                                                                                                                                                           618:  0x0091   Return                  

000046      
000047      //**************************************************************************/
000048      //*!
000049      //    Encodes Float or Integer into 4 bytes of beacon data
000050      //    encoding is - byte 0 is data type (numeric value)
000051      //    Integer as Short (2 bytes) 
000052      //    Fraction as byte (1 byte)
000053      //*/
000054      //**************************************************************************/
000055      Shared Sub BeaconPublish(data_Type As Byte, value As Object)                                                                                                      619:  0x1811   EntryPoint              ValTypParams=1, RefTypParams=1
                                                                                                                                                                              620:  0xE041   AllocateStackSpace      ValTypeSize=2, RefTypeSize=1

000056          Dim fraction As Byte = 0
000057          Dim data As Short = 0
000058          If value Is Float Then                                                                                                                                        621:  0x8C00   PushLocalRef            value
                                                                                                                                                                              622:  0x8006   PushConstU10            6 (0x0006)
                                                                                                                                                                              623:  0x0006   ClassIs                 
                                                                                                                                                                              624:  0x3C12   BranchFalse             643

000059              data = value.Cast(Float).ToShort() //get integer part (16 bit only)                                                                                       625:  0x8006   PushConstU10            6 (0x0006)
                                                                                                                                                                              626:  0x8C00   PushLocalRef            value
                                                                                                                                                                              627:  0x0007   Cast                    
                                                                                                                                                                              628:  0x007B   CvtFltToInt             
                                                                                                                                                                              629:  0x007F   CvtIntToSho             
                                                                                                                                                                              630:  0x9002   PopLocalI32             data

000060              fraction = ((value.Cast(Float) - data) * 100.0).ToByte()                                                                                                  631:  0x8006   PushConstU10            6 (0x0006)
                                                                                                                                                                              632:  0x8C00   PushLocalRef            value
                                                                                                                                                                              633:  0x0007   Cast                    
                                                                                                                                                                              634:  0x8802   PushLocalI32            data
                                                                                                                                                                              635:  0x007E   CvtIntToFlt             
                                                                                                                                                                              636:  0x003F   FltSub                  
                                                                                                                                                                              637:  0xEA64   PushConstFlt            100.0
                                                                                                                                                                              638:  0x003C   FltMul                  
                                                                                                                                                                              639:  0x007B   CvtFltToInt             
                                                                                                                                                                              640:  0x007D   CvtIntToByt             
                                                                                                                                                                              641:  0x9001   PopLocalI32             fraction

                                                                                                                                                                              642:  0x4029   Branch                  684
000061          ElseIf value Is Integer Then                                                                                                                                  643:  0x8C00   PushLocalRef            value
                                                                                                                                                                              644:  0x8004   PushConstU10            4 (0x0004)
                                                                                                                                                                              645:  0x0006   ClassIs                 
                                                                                                                                                                              646:  0x3C06   BranchFalse             653

000062              data = value.Cast(Integer).ToShort() //get integer part (16 bit only)                                                                                     647:  0x8004   PushConstU10            4 (0x0004)
                                                                                                                                                                              648:  0x8C00   PushLocalRef            value
                                                                                                                                                                              649:  0x0007   Cast                    
                                                                                                                                                                              650:  0x007F   CvtIntToSho             
                                                                                                                                                                              651:  0x9002   PopLocalI32             data

                                                                                                                                                                              652:  0x401F   Branch                  684
000063          ElseIf value Is Short Then                                                                                                                                    653:  0x8C00   PushLocalRef            value
                                                                                                                                                                              654:  0x8003   PushConstU10            3 (0x0003)
                                                                                                                                                                              655:  0x0006   ClassIs                 
                                                                                                                                                                              656:  0x3C05   BranchFalse             662

000064              data = value.Cast(Short)                                                                                                                                  657:  0x8003   PushConstU10            3 (0x0003)
                                                                                                                                                                              658:  0x8C00   PushLocalRef            value
                                                                                                                                                                              659:  0x0007   Cast                    
                                                                                                                                                                              660:  0x9002   PopLocalI32             data

                                                                                                                                                                              661:  0x4016   Branch                  684
000065          ElseIf value Is Byte Then                                                                                                                                     662:  0x8C00   PushLocalRef            value
                                                                                                                                                                              663:  0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              664:  0x0006   ClassIs                 
                                                                                                                                                                              665:  0x3C05   BranchFalse             671

000066              data = value.Cast(Byte).ToShort() //get integer part (16 bit only)                                                                                        666:  0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              667:  0x8C00   PushLocalRef            value
                                                                                                                                                                              668:  0x0007   Cast                    
                                                                                                                                                                              669:  0x9002   PopLocalI32             data

                                                                                                                                                                              670:  0x400D   Branch                  684
000067          ElseIf value Is Boolean Then                                                                                                                                  671:  0x8C00   PushLocalRef            value
                                                                                                                                                                              672:  0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              673:  0x0006   ClassIs                 
                                                                                                                                                                              674:  0x3C09   BranchFalse             684
                                                                                                                                                                              675:  0xE020   AllocateStackSpace      ValTypeSize=1, RefTypeSize=0

000068              Dim on As Boolean = value.Cast(Boolean)                                                                                                                   676:  0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              677:  0x8C00   PushLocalRef            value
                                                                                                                                                                              678:  0x0007   Cast                    
                                                                                                                                                                              679:  0x9003   PopLocalI32             on

000069              If on Then                                                                                                                                                680:  0x8803   PushLocalI32            on
                                                                                                                                                                              681:  0x3C01   BranchFalse             683

000070                  data = 1                                                                                                                                              682:  0x6402   Const1toLocalI32        data

000071              End If
                                                                                                                                                                              683:  0xE420   FreeStackSpace          ValTypeSize=1, RefTypeSize=0
000072          End If                                                                                                                                                        

000073          Dim beaconData As ListOfByte = New ListOfByte()                                                                                                               684:  0x800C   PushConstU10            12 (0x000C)
                                                                                                                                                                              685:  0x0010   ClassNew                
                                                                                                                                                                              686:  0x9401   PopLocalRef             beaconData

000074          beaconData.Add(data_Type)                                                                                                                                     687:  0x8800   PushLocalI32            data_Type
                                                                                                                                                                              688:  0x8C01   PushLocalRef            beaconData
                                                                                                                                                                              689:  0x00A3   ListAdd                 

000075          beaconData.AddShort(data)                                                                                                                                     690:  0x8802   PushLocalI32            data
                                                                                                                                                                              691:  0x8C01   PushLocalRef            beaconData
                                                                                                                                                                              692:  0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              693:  0x00A7   ListAdd2Byte            

000076          beaconData.Add(fraction)                                                                                                                                      694:  0x8801   PushLocalI32            fraction
                                                                                                                                                                              695:  0x8C01   PushLocalRef            beaconData
                                                                                                                                                                              696:  0x00A3   ListAdd                 

000077          Lplan.SetBeaconData(beaconData)                                                                                                                               697:  0x8C01   PushLocalRef            beaconData
                                                                                                                                                                              698:  0x0016   PushConstMinus1         
                                                                                                                                                                              699:  0x0105   LplanSetBeacon          

000078          Lplan.SendBeacon()                                                                                                                                            700:  0x0104   LplanSendBeacon         

000079          //Lplan.BeaconNow () //does not seem to work
000080      End Sub                                                                                                                                                           701:  0x0091   Return                  

000081      
000082      Shared Sub Subscribe(topic As String)                                                                                                                             702:  0x1801   EntryPoint              ValTypParams=0, RefTypParams=1

000083          Lplan.Subscribe(topic)                                                                                                                                        703:  0x8C00   PushLocalRef            topic
                                                                                                                                                                              704:  0x0102   LplanSubscribe          

000084      End Sub                                                                                                                                                           705:  0x0091   Return                  

000085      
000086  End Class                                                                                                                                                             537:  0x0097   ReturnMe                


****** BLOCKS and VARIABLES for MQTT
    Block Class (Line 19:86)
        MQTT            Me              (ReadOnly, Offset=0)
        Object          MyBase          (ReadOnly, Offset=0)
        String          mcUIDString     (SharedRefTypVariableOffset=4)
        Block Sub Publish (Line 22:29)
            ListOfByte      text_string     (LocalRefTypVariableOffset=2)
            String          topic           (LocalRefTypVariableOffset=0)
            String          value           (LocalRefTypVariableOffset=1)
            Block If Then  (Line 23:25)
            End Block
        End Block
        Block Sub Publish (Line 31:39)
            String          text            (LocalRefTypVariableOffset=2)
            ListOfByte      text_string     (LocalRefTypVariableOffset=3)
            String          topic           (LocalRefTypVariableOffset=0)
            Object          value           (LocalRefTypVariableOffset=1)
            Block If Then  (Line 33:35)
            End Block
        End Block
        Block Sub Publish_exact (Line 41:45)
            ListOfByte      text_String     (LocalRefTypVariableOffset=2)
            String          topic           (LocalRefTypVariableOffset=0)
            String          text            (LocalRefTypVariableOffset=1)
        End Block
        Block Sub BeaconPublish (Line 55:80)
            Byte            fraction        (LocalValTypVariableOffset=1)
            Short           data            (LocalValTypVariableOffset=2)
            ListOfByte      beaconData      (LocalRefTypVariableOffset=1)
            Byte            data_Type       (LocalValTypVariableOffset=0)
            Object          value           (LocalRefTypVariableOffset=0)
            Block If Then  (Line 58:61)
            End Block
            Block ElseIf (Line 61:63)
            End Block
            Block ElseIf (Line 63:65)
            End Block
            Block ElseIf (Line 65:67)
            End Block
            Block ElseIf (Line 67:72)
                Boolean         on              (LocalValTypVariableOffset=3)
                Block If Then  (Line 69:71)
                End Block
            End Block
        End Block
        Block Sub Subscribe (Line 82:84)
            String          topic           (LocalRefTypVariableOffset=0)
        End Block
        Total Size of Member data including base classes = 0.
    End Block


*************************************************************************************************************

000003  Class MMA8652                                                                                                                                                         706:  0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000004      'Constants
000005      Const I2C_ADDR As Byte = 0x1d
000006      Const I2C_SPEED As Integer = 400000 //250000    
000007      Const CTRL_ID_DEFAULT As Byte = 0x1d //!<This is the factory pre-configured I2C address for an MMA8652
000008      
000009      'Registers From Library but without _REG
000010      Const STATUS As Byte = 0x00
000011      Const F_STATUS As Byte = 0x00
000012      Const OUT_X_MSB As Byte = 0x01
000013      Const OUT_X_LSB As Byte = 0x02
000014      Const OUT_Y_MSB As Byte = 0x03
000015      Const OUT_Y_LSB As Byte = 0x04
000016      Const OUT_Z_MSB As Byte = 0x05
000017      Const OUT_Z_LSB As Byte = 0x06
000018      Const F_SETUP As Byte = 0x09
000019      Const TRIG_CFG As Byte = 0x0a
000020      Const SYSMOD As Byte = 0x0b
000021      Const INT_SOURCE As Byte = 0x0c
000022      Const WHO_AM_I As Byte = 0x0d
000023      Const XYZ_DATA_CFG As Byte = 0x0e
000024      Const HP_FILTER_CUTOFF As Byte = 0x0f
000025      Const PL_STATUS As Byte = 0x10
000026      Const PL_CFG As Byte = 0x11
000027      Const PL_COUNT As Byte = 0x12
000028      Const PL_BF_ZCOMP As Byte = 0x13
000029      Const PL_THS As Byte = 0x14
000030      Const FF_MT_CFG As Byte = 0x15
000031      Const FF_MT_SRC As Byte = 0x16
000032      Const FF_MT_THS As Byte = 0x17
000033      Const FF_MT_COUNT As Byte = 0x18    
000034      Const TRANSIENT_CFG As Byte = 0x1d
000035      Const TRANSIENT_SRC As Byte = 0x1e
000036      Const TRANSIENT_THS As Byte = 0x1f
000037      Const TRANSIENT_COUNT As Byte = 0x20    
000038      Const PULSE_CFG As Byte = 0x21
000039      Const PULSE_SRC As Byte = 0x22
000040      Const PULSE_THSX As Byte = 0x23
000041      Const PULSE_THSY As Byte = 0x24
000042      Const PULSE_THSZ As Byte = 0x25
000043      Const PULSE_TMLT As Byte = 0x26
000044      Const PULSE_LTCY As Byte = 0x27
000045      Const PULSE_WIND As Byte = 0x28
000046      Const ASLP_COUNT As Byte = 0x29    
000047      Const CTRL_REG1 As Byte = 0x2a
000048      Const CTRL_REG2 As Byte = 0x2b
000049      Const CTRL_REG3 As Byte = 0x2c
000050      Const CTRL_REG4 As Byte = 0x2d
000051      Const CTRL_REG5 As Byte = 0x2e    
000052      Const OFF_X As Byte = 0x2f
000053      Const OFF_Y As Byte = 0x30
000054      Const OFF_Z As Byte = 0x31
000055      
000056      Const POSITION_DEFAULT As Byte = 2
000057      Const DELAY_DEFAULT As Byte = 200
000058      
000059      Const STATUS_ZYXDR As Byte = 0x08
000060      Const BUF_SIZE As Byte = 6
000061      
000062      'Masks
000063      Const SRC_ASLP_MASK As Byte = 0x80
000064      Const SRC_FIFO_MASK As Byte = 0x40 // MMA8652 only
000065      Const SRC_TRANS_MASK As Byte = 0x20
000066      Const SRC_LNDPRT_MASK As Byte = 0x10
000067      Const SRC_PULSE_MASK As Byte = 0x08
000068      Const SRC_FF_MT_MASK As Byte = 0x04
000069      Const SRC_DRDY_MASK As Byte = 0x01
000070      
000071      Const ST_MASK As Byte = 0x80
000072      Const RST_MASK As Byte = 0x40
000073      Const SMODS1_MASK As Byte = 0x10
000074      Const SMODS0_MASK As Byte = 0x08
000075      Const SLPE_MASK As Byte = 0x04
000076      Const MODS1_MASK As Byte = 0x02
000077      Const MODS0_MASK As Byte = 0x01
000078      Const SMODS_MASK As Byte = 0x18
000079      Const MODS_MASK As Byte = 0x03
000080      
000081      Const DBCNTM_MASK As Byte = 0x80
000082      Const PL_EN_MASK As Byte = 0x40
000083      
000084      Const FS1_MASK As Byte = 0x02
000085      Const FS0_MASK As Byte = 0x01
000086      Const FS_MASK As Byte = 0x03
000087      
000088      Const ASLP_RATE1_MASK As Byte = 0x80
000089      Const ASLP_RATE0_MASK As Byte = 0x40
000090      Const DR2_MASK As Byte = 0x20
000091      Const DR1_MASK As Byte = 0x10
000092      Const DR0_MASK As Byte = 0x08
000093      Const LNOISE_MASK As Byte = 0x04
000094      Const FREAD_MASK As Byte = 0x02
000095      Const ACTIVE_MASK As Byte = 0x01
000096      Const ASLP_RATE_MASK As Byte = 0xc0
000097      Const DR_MASK As Byte = 0x38
000098      
000099      Const FGERR_MASK As Byte = 0x80 
000100      Const FGT_4_MASK As Byte = 0x40 
000101      Const FGT_3_MASK As Byte = 0x20 
000102      Const FGT_2_MASK As Byte = 0x10 
000103      Const FGT_1_MASK As Byte = 0x08 
000104      Const FGT_0_MASK As Byte = 0x04 
000105      Const FGT_MASK As Byte = 0x7c 
000106      Const SYSMOD1_MASK As Byte = 0x02
000107      Const SYSMOD0_MASK As Byte = 0x01
000108      Const SYSMOD_MASK As Byte = 0x03
000109      
000110      // PL_BF_ZCOMP Back/Front and Z Compensation Register
000111      Const BKFR1 As Byte = 0x80
000112      Const BKFR0 As Byte = 0x40
000113      Const ZLOCK2 As Byte = 0x04
000114      Const ZLOCK1 As Byte = 0x02
000115      Const ZLOCK0 As Byte = 0x01
000116      
000117      Const BKFR1_MASK As Byte = 0x80
000118      Const BKFR0_MASK As Byte = 0x40
000119      Const ZLOCK2_MASK As Byte = 0x04
000120      Const ZLOCK1_MASK As Byte = 0x02
000121      Const ZLOCK0_MASK As Byte = 0x01
000122      Const BKFR_MASK As Byte = 0xc0
000123      Const ZLOCK_MASK As Byte = 0x07
000124      
000125      // PL_P_L_THS Portrait to Landscape Threshold Register
000126      Const P_L_THS4 As Byte = 0x80
000127      Const P_L_THS3 As Byte = 0x40
000128      Const P_L_THS2 As Byte = 0x20
000129      Const P_L_THS1 As Byte = 0x10
000130      Const P_L_THS0 As Byte = 0x08
000131      Const HYS2 As Byte = 0x04
000132      Const HYS1 As Byte = 0x02
000133      Const HYS0 As Byte = 0x01
000134      
000135      Const P_L_THS4_MASK As Byte = 0x80
000136      Const P_L_THS3_MASK As Byte = 0x40
000137      Const P_L_THS2_MASK As Byte = 0x20
000138      Const P_L_THS1_MASK As Byte = 0x10
000139      Const P_L_THS0_MASK As Byte = 0x08
000140      Const HYS2_MASK As Byte = 0x04
000141      Const HYS1_MASK As Byte = 0x02
000142      Const HYS0_MASK As Byte = 0x01
000143      Const P_L_THS_MASK As Byte = 0xf8
000144      Const HYS_MASK As Byte = 0x07
000145      
000146      // CTRL_REG3 Interrupt Control Register
000147      Const FIFO_GATE_MASK As Byte = 0x80 // MMA8652 only
000148      Const WAKE_TRANS_MASK As Byte = 0x40 // MMA8652 only
000149      Const WAKE_LNDPRT_MASK As Byte = 0x20
000150      Const WAKE_PULSE_MASK As Byte = 0x10 // MMA8652 only
000151      Const WAKE_FF_MT_MASK As Byte = 0x08
000152      Const IPOL_MASK As Byte = 0x02
000153      Const PP_OD_MASK As Byte = 0x01
000154      Const WAKE_CLEAR_MASK As Byte = 0x3c
000155      
000156      // CTRL_REG4 Interrupt Enable Register
000157      Const INT_EN_ASLP_MASK As Byte = 0x80
000158      Const INT_EN_FIFO_MASK As Byte = 0x40 // MMA8652 only
000159      Const INT_EN_TRANS_MASK As Byte = 0x20 // MMA8652 only
000160      Const INT_EN_LNDPRT_MASK As Byte = 0x10
000161      Const INT_EN_PULSE_MASK As Byte = 0x08 // MMA8652 only
000162      Const INT_EN_FF_MT_MASK As Byte = 0x04
000163      Const INT_EN_DRDY_MASK As Byte = 0x01
000164      Const INT_CLEAR_MASK As Byte = 0xfd
000165      
000166      // CTRL_REG5 Interrupt Configuration Register
000167      Const INT_CFG_ASLP_MASK As Byte = 0x80
000168      Const INT_CFG_FIFO_MASK As Byte = 0x40 // MMA8652 only
000169      Const INT_CFG_TRANS_MASK As Byte = 0x20 // MMA8652 only
000170      Const INT_CFG_LNDPRT_MASK As Byte = 0x10
000171      Const INT_CFG_PULSE_MASK As Byte = 0x08 // MMA8652 only
000172      Const INT_CFG_FF_MT_MASK As Byte = 0x04
000173      Const INT_CFG_DRDY_MASK As Byte = 0x01
000174      Const INT_CFG_CLEAR_MASK As Byte = 0xfd
000175      
000176      // TRANSIENT_SRC Transient Source Register
000177      Const TEA_MASK As Byte = 0x40
000178      Const ZTRANSE_MASK As Byte = 0x20
000179      Const Z_TRANS_POL_MASK As Byte = 0x10
000180      Const YTRANSE_MASK As Byte = 0x08
000181      Const Y_TRANS_POL_MASK As Byte = 0x04
000182      Const XTRANSE_MASK As Byte = 0x02
000183      Const X_TRANS_POL_MASK As Byte = 0x01
000184      
000185      // TRANSIENT_CFG Transient Configuration Register
000186      Const TELE_MASK As Byte = 0x10
000187      Const ZTEFE_MASK As Byte = 0x08
000188      Const YTEFE_MASK As Byte = 0x04
000189      Const XTEFE_MASK As Byte = 0x02
000190      Const HPF_BYP_MASK As Byte = 0x01
000191      
000192      'Values
000193      Const FULL_SCALE_2G As Byte = 0x00
000194      Const FULL_SCALE_4G As Byte = 0x01
000195      Const FULL_SCALE_8G As Byte = 0x02
000196      
000197      Const AODR_800HZ As Byte = 0x00, // 200 Hz
000198      Const AODR_400HZ As Byte = 0x08
000199      Const AODR_200HZ As Byte = 0x10
000200      Const AODR_100HZ As Byte = 0x18
000201      Const AODR_50HZ As Byte = 0x20
000202      Const AODR_12_5HZ As Byte = 0x28 // 12.5 Hz, etc.
000203      Const AODR_6_25HZ As Byte = 0x30
000204      Const AODR_1_56HZ As Byte = 0x38
000205      
000206      //Sleep modes
000207      Const SMOD_NORMAL As Byte = 0x00
000208      Const SMOD_LOW_NOISE As Byte = 0x08 //(SMODS0_MASK)
000209      Const SMOD_HIGH_RES As Byte = 0x10 //(SMODS1_MASK)
000210      Const SMOD_LOW_POWER As Byte = 0x18 //(SMODS1_MASK+SMODS0_MASK)
000211      
000212      //Wake modes
000213      Const MOD_NORMAL As Byte = 0x00
000214      Const MOD_LOW_NOISE As Byte = 0x01 //(MODS0_MASK)
000215      Const MOD_HIGH_RES As Byte = 0x02 //(MODS1_MASK)
000216      Const MOD_LOW_POWER As Byte = 0x03 //(MODS1_MASK+MODS0_MASK)
000217      
000218      Const SYSMOD_STANDBY As Byte = 0x00
000219      Const SYSMOD_WAKE As Byte = 0x02
000220      Const SYSMOD_SLEEP As Byte = 0x01
000221      
000222      Const FIFO_GATE As Byte = 0x80 // MMA8652 only
000223      Const WAKE_TRANS As Byte = 0x40 // MMA8652 only
000224      Const WAKE_LNDPRT As Byte = 0x20
000225      Const WAKE_PULSE As Byte = 0x10 // MMA8652 only
000226      Const WAKE_FF_MT As Byte = 0x08
000227      Const IPOL As Byte = 0x02
000228      Const PP_OD As Byte = 0x01
000229      
000230      Const INT_EN_ASLP As Byte = 0x80
000231      Const INT_EN_FIFO As Byte = 0x40 // MMA8652 only
000232      Const INT_EN_TRANS As Byte = 0x20 // MMA8652 only
000233      Const INT_EN_LNDPRT As Byte = 0x10
000234      Const INT_EN_PULSE As Byte = 0x08 // MMA8652 only
000235      Const INT_EN_FF_MT As Byte = 0x04
000236      Const INT_EN_DRDY As Byte = 0x01
000237      
000238      Const NEWLP As Byte = 0x80
000239      Const LO As Byte = 0x40
000240      Const LAPO1 As Byte = 0x04
000241      Const LAPO0 As Byte = 0x02
000242      Const BAFRO As Byte = 0x01
000243      
000244      Const TEA As Byte = 0x40
000245      Const ZTRANSE As Byte = 0x20
000246      Const Z_TRANS_POL As Byte = 0x10
000247      Const YTRANSE As Byte = 0x08
000248      Const Y_TRANS_POL As Byte = 0x04
000249      Const XTRANSE As Byte = 0x02
000250      Const X_TRANS_POL As Byte = 0x01
000251      
000252      Const INT_CFG_ASLP As Byte = 0x80
000253      Const INT_CFG_FIFO As Byte = 0x40 // MMA8652 only
000254      Const INT_CFG_TRANS As Byte = 0x20 // MMA8652 only
000255      Const INT_CFG_LNDPRT As Byte = 0x10
000256      Const INT_CFG_PULSE As Byte = 0x08 // MMA8652 only
000257      Const INT_CFG_FF_MT As Byte = 0x04
000258      Const INT_CFG_DRDY As Byte = 0x01
000259      
000260      Const TELE As Byte = 0x10
000261      Const ZTEFE As Byte = 0x08
000262      Const YTEFE As Byte = 0x04
000263      Const XTEFE As Byte = 0x02
000264      Const HPF_BYP As Byte = 0x01
000265      
000266      Const SRC_ASLP As Byte = 0x80
000267      Const SRC_FIFO As Byte = 0x40 // MMA8652 only
000268      Const SRC_TRANS As Byte = 0x20
000269      Const SRC_LNDPRT As Byte = 0x10
000270      Const SRC_PULSE As Byte = 0x08
000271      Const SRC_FF_MT As Byte = 0x04
000272      Const SRC_DRDY As Byte = 0x01
000273      
000274      Const LOW_TRIGGER_THRESHOLD As Float = 0.0
000275      Const HIGH_TRIGGER_THRESHOLD As Float = 8.0
000276      Const TRANSIENT_THRESHOLD_RESOLUTION As Float = 0.063
000277      
000278      Const LOW_DURATION_MS As Float = 0.0
000279      Const HIGH_DURATION_MS As Float = 5100.0
000280      Const DURATION_RESOLUTION As Float = 20.0
000281      
000282      Public gAccelerometer As I2c
000283      Public online As Boolean = False
000284      
000285      Public Sub New()                                                                                                                                                  708:  0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000286          gAccelerometer = I2c.Create(I2C_SPEED, Pin.SCL, Pin.SDA, I2C_ADDR)                                                                                            709:  0x0110   PushConstI32            400000 (0x00061A80)
                                                                                                                                                                              710:  0x1A80                           
                                                                                                                                                                              711:  0x0006                           
                                                                                                                                                                              712:  0x800D   PushConstU10            13 (0x000D)
                                                                                                                                                                              713:  0x800E   PushConstU10            14 (0x000E)
                                                                                                                                                                              714:  0x801D   PushConstU10            29 (0x001D)
                                                                                                                                                                              715:  0x803B   PushConstU10            59 (0x003B)
                                                                                                                                                                              716:  0x0010   ClassNew                
                                                                                                                                                                              717:  0xB400   PopMemberRef            gAccelerometer

000287          If whoAmI() = 0x4a Then                                                                                                                                       718:  0x000D   PushMe                  
                                                                                                                                                                              719:  0x1DD2   BranchSubr              1186
                                                                                                                                                                              720:  0x804A   PushConstU10            74 (0x004A)
                                                                                                                                                                              721:  0x2414   BranchNE                742

000288              online = True                                                                                                                                             722:  0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              723:  0xA804   PopMemberU8             online

000289              reset()                                                                                                                                                   724:  0x000D   PushMe                  
                                                                                                                                                                              725:  0x1E27   BranchSubr              1277

000290              // Set interrupt active low
000291              write(CTRL_REG3, read(CTRL_REG3) & ~IPOL_MASK) // clear bit 1 (active low)                                                                                726:  0x802C   PushConstU10            44 (0x002C)
                                                                                                                                                                              727:  0x802C   PushConstU10            44 (0x002C)
                                                                                                                                                                              728:  0x000D   PushMe                  
                                                                                                                                                                              729:  0x1DF0   BranchSubr              1226
                                                                                                                                                                              730:  0x80FD   PushConstU10            253 (0x00FD)
                                                                                                                                                                              731:  0x001F   IntAnd                  
                                                                                                                                                                              732:  0x000D   PushMe                  
                                                                                                                                                                              733:  0x1E0E   BranchSubr              1260

000292              // Set interrupt push/pull
000293              write(CTRL_REG3, read(CTRL_REG3) & ~PP_OD_MASK) // clear bit 0 (push-pull)                                                                                734:  0x802C   PushConstU10            44 (0x002C)
                                                                                                                                                                              735:  0x802C   PushConstU10            44 (0x002C)
                                                                                                                                                                              736:  0x000D   PushMe                  
                                                                                                                                                                              737:  0x1DE8   BranchSubr              1226
                                                                                                                                                                              738:  0x80FE   PushConstU10            254 (0x00FE)
                                                                                                                                                                              739:  0x001F   IntAnd                  
                                                                                                                                                                              740:  0x000D   PushMe                  
                                                                                                                                                                              741:  0x1E06   BranchSubr              1260

000294          End If
000295      End Sub                                                                                                                                                           742:  0x0097   ReturnMe                

000296      
000297      Public Function map_range(var As Float, old_min As Float, old_max As Float, new_min As Byte, new_max As Byte) As Byte                                             743:  0x1850   EntryPoint              ValTypParams=5, RefTypParams=0
                                                                                                                                                                              744:  0xE040   AllocateStackSpace      ValTypeSize=2, RefTypeSize=0

000298          'Convert floats to byte range
000299          Dim old_range As Float = old_max - old_min                                                                                                                    745:  0x8802   PushLocalI32            old_max
                                                                                                                                                                              746:  0x8801   PushLocalI32            old_min
                                                                                                                                                                              747:  0x003F   FltSub                  
                                                                                                                                                                              748:  0x9005   PopLocalI32             old_range

000300          Dim new_range As Float = new_max - new_min                                                                                                                    749:  0x8804   PushLocalI32            new_max
                                                                                                                                                                              750:  0x8803   PushLocalI32            new_min
                                                                                                                                                                              751:  0x0031   IntSub                  
                                                                                                                                                                              752:  0x007E   CvtIntToFlt             
                                                                                                                                                                              753:  0x9006   PopLocalI32             new_range

000301          Return ((((var - old_min) * new_range) / old_range) + new_min).ToByte                                                                                         754:  0x8800   PushLocalI32            var
                                                                                                                                                                              755:  0x8801   PushLocalI32            old_min
                                                                                                                                                                              756:  0x003F   FltSub                  
                                                                                                                                                                              757:  0x8806   PushLocalI32            new_range
                                                                                                                                                                              758:  0x003C   FltMul                  
                                                                                                                                                                              759:  0x8805   PushLocalI32            old_range
                                                                                                                                                                              760:  0x003B   FltDiv                  
                                                                                                                                                                              761:  0x8803   PushLocalI32            new_min
                                                                                                                                                                              762:  0x007E   CvtIntToFlt             
                                                                                                                                                                              763:  0x0039   FltAdd                  
                                                                                                                                                                              764:  0x007B   CvtFltToInt             
                                                                                                                                                                              765:  0x007D   CvtIntToByt             
                                                                                                                                                                              766:  0x0092   ReturnValType           

000302      End Function                                                                                                                                                      767:  0x0093   Return0                 

000303      
000304      Public Function map_range(var As Float, old_min As Byte, old_max As Byte, new_min As Float, new_max As Float) As Float                                            768:  0x1850   EntryPoint              ValTypParams=5, RefTypParams=0
                                                                                                                                                                              769:  0xE040   AllocateStackSpace      ValTypeSize=2, RefTypeSize=0

000305          'convert bytes to floats range
000306          Dim old_range As Float = old_max - old_min                                                                                                                    770:  0x8802   PushLocalI32            old_max
                                                                                                                                                                              771:  0x8801   PushLocalI32            old_min
                                                                                                                                                                              772:  0x0031   IntSub                  
                                                                                                                                                                              773:  0x007E   CvtIntToFlt             
                                                                                                                                                                              774:  0x9005   PopLocalI32             old_range

000307          Dim new_range As Float = new_max - new_min                                                                                                                    775:  0x8804   PushLocalI32            new_max
                                                                                                                                                                              776:  0x8803   PushLocalI32            new_min
                                                                                                                                                                              777:  0x003F   FltSub                  
                                                                                                                                                                              778:  0x9006   PopLocalI32             new_range

000308          Return ((((var - old_min) * new_range) / old_range) + new_min).ToFloat                                                                                        779:  0x8800   PushLocalI32            var
                                                                                                                                                                              780:  0x8801   PushLocalI32            old_min
                                                                                                                                                                              781:  0x007E   CvtIntToFlt             
                                                                                                                                                                              782:  0x003F   FltSub                  
                                                                                                                                                                              783:  0x8806   PushLocalI32            new_range
                                                                                                                                                                              784:  0x003C   FltMul                  
                                                                                                                                                                              785:  0x8805   PushLocalI32            old_range
                                                                                                                                                                              786:  0x003B   FltDiv                  
                                                                                                                                                                              787:  0x8803   PushLocalI32            new_min
                                                                                                                                                                              788:  0x0039   FltAdd                  
                                                                                                                                                                              789:  0x0092   ReturnValType           

000309      End Function                                                                                                                                                      790:  0x0093   Return0                 

000310      
000311      Public Function GetmsPerCount() As Float                                                                                                                          791:  0x1800   EntryPoint              ValTypParams=0, RefTypParams=0
                                                                                                                                                                              792:  0xE060   AllocateStackSpace      ValTypeSize=3, RefTypeSize=0

000312          //read frequency and mode to determine milliseconds per count for debounce (see table 40 p34 in DS)
000313          Dim frequency As Byte = GetWakeModeFrequency()                                                                                                                793:  0x000D   PushMe                  
                                                                                                                                                                              794:  0x1E13   BranchSubr              1326
                                                                                                                                                                              795:  0x9000   PopLocalI32             frequency

000314          Dim mode As Byte = GetWakeModeResolution()                                                                                                                    796:  0x000D   PushMe                  
                                                                                                                                                                              797:  0x1E24   BranchSubr              1346
                                                                                                                                                                              798:  0x9001   PopLocalI32             mode

000315          Dim ms As Float = 1.25                                                                                                                                        799:  0x0110   PushConstI32            1067450368 (0x3FA00000)
                                                                                                                                                                              800:  0x0000                           
                                                                                                                                                                              801:  0x3FA0                           
                                                                                                                                                                              802:  0x9002   PopLocalI32             ms

000316          
000317          Select mode                                                                                                                                                   803:  0x8801   PushLocalI32            mode
                                                                                                                                                                              804:  0x0122   CaseComputed            
                                                                                                                                                                              805:  0x0002                           CaseCommonClass=Byte
                                                                                                                                                                              806:  0x0004                           NumberOfCaseEntries=4
                                                                                                                                                                              807:  0x0092                           CaseElseBranch=954
                                                                                                                                                                              808:  0x0000                           CaseValue=0
                                                                                                                                                                              809:  0x0008                           CaseBranch=816
                                                                                                                                                                              810:  0x0001                           CaseValue=1
                                                                                                                                                                              811:  0x0028                           CaseBranch=848
                                                                                                                                                                              812:  0x0002                           CaseValue=2
                                                                                                                                                                              813:  0x004D                           CaseBranch=885
                                                                                                                                                                              814:  0x0003                           CaseValue=3
                                                                                                                                                                              815:  0x005E                           CaseBranch=902

000318              Case MOD_NORMAL
000319                  Select frequency                                                                                                                                      816:  0x8800   PushLocalI32            frequency
                                                                                                                                                                              817:  0x0122   CaseComputed            
                                                                                                                                                                              818:  0x0002                           CaseCommonClass=Byte
                                                                                                                                                                              819:  0x0004                           NumberOfCaseEntries=4
                                                                                                                                                                              820:  0x0018                           CaseElseBranch=845
                                                                                                                                                                              821:  0x0000                           CaseValue=0
                                                                                                                                                                              822:  0x0008                           CaseBranch=829
                                                                                                                                                                              823:  0x0008                           CaseValue=8
                                                                                                                                                                              824:  0x000D                           CaseBranch=834
                                                                                                                                                                              825:  0x0010                           CaseValue=16
                                                                                                                                                                              826:  0x0012                           CaseBranch=839
                                                                                                                                                                              827:  0x0018                           CaseValue=24
                                                                                                                                                                              828:  0x0015                           CaseBranch=842

000320                      Case AODR_800HZ
000321                          ms = 1.25                                                                                                                                     829:  0x0110   PushConstI32            1067450368 (0x3FA00000)
                                                                                                                                                                              830:  0x0000                           
                                                                                                                                                                              831:  0x3FA0                           
                                                                                                                                                                              832:  0x9002   PopLocalI32             ms

                                                                                                                                                                              833:  0x400D   Branch                  847
000322                      Case AODR_400HZ                                                                                                                                   

000323                          ms = 2.5                                                                                                                                      834:  0x0110   PushConstI32            1075838976 (0x40200000)
                                                                                                                                                                              835:  0x0000                           
                                                                                                                                                                              836:  0x4020                           
                                                                                                                                                                              837:  0x9002   PopLocalI32             ms

                                                                                                                                                                              838:  0x4008   Branch                  847
000324                      Case AODR_200HZ                                                                                                                                   

000325                          ms = 5.0                                                                                                                                      839:  0xEA05   PushConstFlt            5.0
                                                                                                                                                                              840:  0x9002   PopLocalI32             ms

                                                                                                                                                                              841:  0x4005   Branch                  847
000326                      Case AODR_100HZ                                                                                                                                   

000327                          ms = 10.0                                                                                                                                     842:  0xEA0A   PushConstFlt            10.0
                                                                                                                                                                              843:  0x9002   PopLocalI32             ms

                                                                                                                                                                              844:  0x4002   Branch                  847
000328                      Case Else                                                                                                                                         

000329                          ms = 20.0                                                                                                                                     845:  0xEA14   PushConstFlt            20.0
                                                                                                                                                                              846:  0x9002   PopLocalI32             ms

000330                  End Select
                                                                                                                                                                              847:  0x406A   Branch                  954
000331              Case MOD_LOW_NOISE                                                                                                                                        

000332                  Select frequency                                                                                                                                      848:  0x8800   PushLocalI32            frequency
                                                                                                                                                                              849:  0x0122   CaseComputed            
                                                                                                                                                                              850:  0x0002                           CaseCommonClass=Byte
                                                                                                                                                                              851:  0x0005                           NumberOfCaseEntries=5
                                                                                                                                                                              852:  0x001D                           CaseElseBranch=882
                                                                                                                                                                              853:  0x0000                           CaseValue=0
                                                                                                                                                                              854:  0x000A                           CaseBranch=863
                                                                                                                                                                              855:  0x0008                           CaseValue=8
                                                                                                                                                                              856:  0x000F                           CaseBranch=868
                                                                                                                                                                              857:  0x0010                           CaseValue=16
                                                                                                                                                                              858:  0x0014                           CaseBranch=873
                                                                                                                                                                              859:  0x0018                           CaseValue=24
                                                                                                                                                                              860:  0x0017                           CaseBranch=876
                                                                                                                                                                              861:  0x0020                           CaseValue=32
                                                                                                                                                                              862:  0x001A                           CaseBranch=879

000333                      Case AODR_800HZ
000334                          ms = 1.25                                                                                                                                     863:  0x0110   PushConstI32            1067450368 (0x3FA00000)
                                                                                                                                                                              864:  0x0000                           
                                                                                                                                                                              865:  0x3FA0                           
                                                                                                                                                                              866:  0x9002   PopLocalI32             ms

                                                                                                                                                                              867:  0x4010   Branch                  884
000335                      Case AODR_400HZ                                                                                                                                   

000336                          ms = 2.5                                                                                                                                      868:  0x0110   PushConstI32            1075838976 (0x40200000)
                                                                                                                                                                              869:  0x0000                           
                                                                                                                                                                              870:  0x4020                           
                                                                                                                                                                              871:  0x9002   PopLocalI32             ms

                                                                                                                                                                              872:  0x400B   Branch                  884
000337                      Case AODR_200HZ                                                                                                                                   

000338                          ms = 5.0                                                                                                                                      873:  0xEA05   PushConstFlt            5.0
                                                                                                                                                                              874:  0x9002   PopLocalI32             ms

                                                                                                                                                                              875:  0x4008   Branch                  884
000339                      Case AODR_100HZ                                                                                                                                   

000340                          ms = 10.0                                                                                                                                     876:  0xEA0A   PushConstFlt            10.0
                                                                                                                                                                              877:  0x9002   PopLocalI32             ms

                                                                                                                                                                              878:  0x4005   Branch                  884
000341                      Case AODR_50HZ                                                                                                                                    

000342                          ms = 20.0                                                                                                                                     879:  0xEA14   PushConstFlt            20.0
                                                                                                                                                                              880:  0x9002   PopLocalI32             ms

                                                                                                                                                                              881:  0x4002   Branch                  884
000343                      Case Else                                                                                                                                         

000344                          ms = 80.0                                                                                                                                     882:  0xEA50   PushConstFlt            80.0
                                                                                                                                                                              883:  0x9002   PopLocalI32             ms

000345                  End Select
                                                                                                                                                                              884:  0x4045   Branch                  954
000346              Case MOD_HIGH_RES                                                                                                                                         

000347                  Select frequency                                                                                                                                      885:  0x8800   PushLocalI32            frequency
                                                                                                                                                                              886:  0x0122   CaseComputed            
                                                                                                                                                                              887:  0x0002                           CaseCommonClass=Byte
                                                                                                                                                                              888:  0x0001                           NumberOfCaseEntries=1
                                                                                                                                                                              889:  0x0007                           CaseElseBranch=897
                                                                                                                                                                              890:  0x0000                           CaseValue=0
                                                                                                                                                                              891:  0x0002                           CaseBranch=892

000348                      Case AODR_800HZ
000349                          ms = 1.25                                                                                                                                     892:  0x0110   PushConstI32            1067450368 (0x3FA00000)
                                                                                                                                                                              893:  0x0000                           
                                                                                                                                                                              894:  0x3FA0                           
                                                                                                                                                                              895:  0x9002   PopLocalI32             ms

                                                                                                                                                                              896:  0x4004   Branch                  901
000350                      Case Else                                                                                                                                         

000351                          ms = 2.5                                                                                                                                      897:  0x0110   PushConstI32            1075838976 (0x40200000)
                                                                                                                                                                              898:  0x0000                           
                                                                                                                                                                              899:  0x4020                           
                                                                                                                                                                              900:  0x9002   PopLocalI32             ms

000352                  End Select
                                                                                                                                                                              901:  0x4034   Branch                  954
000353              Case MOD_LOW_POWER                                                                                                                                        

000354                  Select frequency                                                                                                                                      902:  0x8800   PushLocalI32            frequency
                                                                                                                                                                              903:  0x0122   CaseComputed            
                                                                                                                                                                              904:  0x0002                           CaseCommonClass=Byte
                                                                                                                                                                              905:  0x0008                           NumberOfCaseEntries=8
                                                                                                                                                                              906:  0x002F                           CaseElseBranch=954
                                                                                                                                                                              907:  0x0000                           CaseValue=0
                                                                                                                                                                              908:  0x0010                           CaseBranch=923
                                                                                                                                                                              909:  0x0008                           CaseValue=8
                                                                                                                                                                              910:  0x0015                           CaseBranch=928
                                                                                                                                                                              911:  0x0010                           CaseValue=16
                                                                                                                                                                              912:  0x001A                           CaseBranch=933
                                                                                                                                                                              913:  0x0018                           CaseValue=24
                                                                                                                                                                              914:  0x001D                           CaseBranch=936
                                                                                                                                                                              915:  0x0020                           CaseValue=32
                                                                                                                                                                              916:  0x0020                           CaseBranch=939
                                                                                                                                                                              917:  0x0028                           CaseValue=40
                                                                                                                                                                              918:  0x0023                           CaseBranch=942
                                                                                                                                                                              919:  0x0030                           CaseValue=48
                                                                                                                                                                              920:  0x0026                           CaseBranch=945
                                                                                                                                                                              921:  0x0038                           CaseValue=56
                                                                                                                                                                              922:  0x002B                           CaseBranch=950

000355                      Case AODR_800HZ
000356                          ms = 1.25                                                                                                                                     923:  0x0110   PushConstI32            1067450368 (0x3FA00000)
                                                                                                                                                                              924:  0x0000                           
                                                                                                                                                                              925:  0x3FA0                           
                                                                                                                                                                              926:  0x9002   PopLocalI32             ms

                                                                                                                                                                              927:  0x401A   Branch                  954
000357                      Case AODR_400HZ                                                                                                                                   

000358                          ms = 2.5                                                                                                                                      928:  0x0110   PushConstI32            1075838976 (0x40200000)
                                                                                                                                                                              929:  0x0000                           
                                                                                                                                                                              930:  0x4020                           
                                                                                                                                                                              931:  0x9002   PopLocalI32             ms

                                                                                                                                                                              932:  0x4015   Branch                  954
000359                      Case AODR_200HZ                                                                                                                                   

000360                          ms = 5.0                                                                                                                                      933:  0xEA05   PushConstFlt            5.0
                                                                                                                                                                              934:  0x9002   PopLocalI32             ms

                                                                                                                                                                              935:  0x4012   Branch                  954
000361                      Case AODR_100HZ                                                                                                                                   

000362                          ms = 10.0                                                                                                                                     936:  0xEA0A   PushConstFlt            10.0
                                                                                                                                                                              937:  0x9002   PopLocalI32             ms

                                                                                                                                                                              938:  0x400F   Branch                  954
000363                      Case AODR_50HZ                                                                                                                                    

000364                          ms = 20.0                                                                                                                                     939:  0xEA14   PushConstFlt            20.0
                                                                                                                                                                              940:  0x9002   PopLocalI32             ms

                                                                                                                                                                              941:  0x400C   Branch                  954
000365                      Case AODR_12_5HZ                                                                                                                                  

000366                          ms = 80.0                                                                                                                                     942:  0xEA50   PushConstFlt            80.0
                                                                                                                                                                              943:  0x9002   PopLocalI32             ms

                                                                                                                                                                              944:  0x4009   Branch                  954
000367                      Case AODR_6_25HZ                                                                                                                                  

000368                          ms = 160.0                                                                                                                                    945:  0x0110   PushConstI32            1126170624 (0x43200000)
                                                                                                                                                                              946:  0x0000                           
                                                                                                                                                                              947:  0x4320                           
                                                                                                                                                                              948:  0x9002   PopLocalI32             ms

                                                                                                                                                                              949:  0x4004   Branch                  954
000369                      Case AODR_1_56HZ                                                                                                                                  

000370                          ms = 160.0                                                                                                                                    950:  0x0110   PushConstI32            1126170624 (0x43200000)
                                                                                                                                                                              951:  0x0000                           
                                                                                                                                                                              952:  0x4320                           
                                                                                                                                                                              953:  0x9002   PopLocalI32             ms

000371                  End Select
000372          End Select
000373          Return ms                                                                                                                                                     954:  0x8802   PushLocalI32            ms
                                                                                                                                                                              955:  0x0092   ReturnValType           

000374      End Function                                                                                                                                                      956:  0x0093   Return0                 

000375      
000376      Public Function GetmsFromFrequency() As Float                                                                                                                     957:  0x1800   EntryPoint              ValTypParams=0, RefTypParams=0
                                                                                                                                                                              958:  0xE040   AllocateStackSpace      ValTypeSize=2, RefTypeSize=0

000377          //read frequency to determine Wake mode milliseconds per cycle
000378          Dim frequency As Byte = GetWakeModeFrequency()                                                                                                                959:  0x000D   PushMe                  
                                                                                                                                                                              960:  0x1D6D   BranchSubr              1326
                                                                                                                                                                              961:  0x9000   PopLocalI32             frequency

000379          Dim ms As Float = 0
000380          Select frequency                                                                                                                                              962:  0x8800   PushLocalI32            frequency
                                                                                                                                                                              963:  0x0122   CaseComputed            
                                                                                                                                                                              964:  0x0002                           CaseCommonClass=Byte
                                                                                                                                                                              965:  0x0008                           NumberOfCaseEntries=8
                                                                                                                                                                              966:  0x0030                           CaseElseBranch=1015
                                                                                                                                                                              967:  0x0000                           CaseValue=0
                                                                                                                                                                              968:  0x0010                           CaseBranch=983
                                                                                                                                                                              969:  0x0008                           CaseValue=8
                                                                                                                                                                              970:  0x0015                           CaseBranch=988
                                                                                                                                                                              971:  0x0010                           CaseValue=16
                                                                                                                                                                              972:  0x001A                           CaseBranch=993
                                                                                                                                                                              973:  0x0018                           CaseValue=24
                                                                                                                                                                              974:  0x001D                           CaseBranch=996
                                                                                                                                                                              975:  0x0020                           CaseValue=32
                                                                                                                                                                              976:  0x0020                           CaseBranch=999
                                                                                                                                                                              977:  0x0028                           CaseValue=40
                                                                                                                                                                              978:  0x0023                           CaseBranch=1002
                                                                                                                                                                              979:  0x0030                           CaseValue=48
                                                                                                                                                                              980:  0x0026                           CaseBranch=1005
                                                                                                                                                                              981:  0x0038                           CaseValue=56
                                                                                                                                                                              982:  0x002B                           CaseBranch=1010

000381              Case AODR_800HZ
000382                  ms = 1.25                                                                                                                                             983:  0x0110   PushConstI32            1067450368 (0x3FA00000)
                                                                                                                                                                              984:  0x0000                           
                                                                                                                                                                              985:  0x3FA0                           
                                                                                                                                                                              986:  0x9001   PopLocalI32             ms

                                                                                                                                                                              987:  0x401F   Branch                  1019
000383              Case AODR_400HZ                                                                                                                                           

000384                  ms = 2.5                                                                                                                                              988:  0x0110   PushConstI32            1075838976 (0x40200000)
                                                                                                                                                                              989:  0x0000                           
                                                                                                                                                                              990:  0x4020                           
                                                                                                                                                                              991:  0x9001   PopLocalI32             ms

                                                                                                                                                                              992:  0x401A   Branch                  1019
000385              Case AODR_200HZ                                                                                                                                           

000386                  ms = 5.0                                                                                                                                              993:  0xEA05   PushConstFlt            5.0
                                                                                                                                                                              994:  0x9001   PopLocalI32             ms

                                                                                                                                                                              995:  0x4017   Branch                  1019
000387              Case AODR_100HZ                                                                                                                                           

000388                  ms = 10.0                                                                                                                                             996:  0xEA0A   PushConstFlt            10.0
                                                                                                                                                                              997:  0x9001   PopLocalI32             ms

                                                                                                                                                                              998:  0x4014   Branch                  1019
000389              Case AODR_50HZ                                                                                                                                            

000390                  ms = 20.0                                                                                                                                             999:  0xEA14   PushConstFlt            20.0
                                                                                                                                                                              1000: 0x9001   PopLocalI32             ms

                                                                                                                                                                              1001: 0x4011   Branch                  1019
000391              Case AODR_12_5HZ                                                                                                                                          

000392                  ms = 80.0                                                                                                                                             1002: 0xEA50   PushConstFlt            80.0
                                                                                                                                                                              1003: 0x9001   PopLocalI32             ms

                                                                                                                                                                              1004: 0x400E   Branch                  1019
000393              Case AODR_6_25HZ                                                                                                                                          

000394                  ms = 160.0                                                                                                                                            1005: 0x0110   PushConstI32            1126170624 (0x43200000)
                                                                                                                                                                              1006: 0x0000                           
                                                                                                                                                                              1007: 0x4320                           
                                                                                                                                                                              1008: 0x9001   PopLocalI32             ms

                                                                                                                                                                              1009: 0x4009   Branch                  1019
000395              Case AODR_1_56HZ                                                                                                                                          

000396                  ms = 640.0                                                                                                                                            1010: 0x0110   PushConstI32            1142947840 (0x44200000)
                                                                                                                                                                              1011: 0x0000                           
                                                                                                                                                                              1012: 0x4420                           
                                                                                                                                                                              1013: 0x9001   PopLocalI32             ms

                                                                                                                                                                              1014: 0x4004   Branch                  1019
000397              Case Else                                                                                                                                                 

000398                  ms = 1.25 //default                                                                                                                                   1015: 0x0110   PushConstI32            1067450368 (0x3FA00000)
                                                                                                                                                                              1016: 0x0000                           
                                                                                                                                                                              1017: 0x3FA0                           
                                                                                                                                                                              1018: 0x9001   PopLocalI32             ms

000399          End Select
000400          Return ms                                                                                                                                                     1019: 0x8801   PushLocalI32            ms
                                                                                                                                                                              1020: 0x0092   ReturnValType           

000401      End Function                                                                                                                                                      1021: 0x0093   Return0                 

000402      
000403      Public Function readAccelData() As ListOfShort                                                                                                                    1022: 0x1800   EntryPoint              ValTypParams=0, RefTypParams=0
                                                                                                                                                                              1023: 0xE002   AllocateStackSpace      ValTypeSize=0, RefTypeSize=2

000404          Dim rawData As ListOfByte = New ListOfByte // x/y/z accel register data stored here                                                                           1024: 0x800C   PushConstU10            12 (0x000C)
                                                                                                                                                                              1025: 0x0010   ClassNew                
                                                                                                                                                                              1026: 0x9400   PopLocalRef             rawData

000405          Dim destination As ListOfShort = New ListOfShort                                                                                                              1027: 0x800D   PushConstU10            13 (0x000D)
                                                                                                                                                                              1028: 0x0010   ClassNew                
                                                                                                                                                                              1029: 0x9401   PopLocalRef             destination

000406          rawData = read(OUT_X_MSB, 6) // Read the six raw data registers into data array                                                                               1030: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1031: 0x8006   PushConstU10            6 (0x0006)
                                                                                                                                                                              1032: 0x000D   PushMe                  
                                                                                                                                                                              1033: 0x1CD5   BranchSubr              1247
                                                                                                                                                                              1034: 0x9400   PopLocalRef             rawData

000407          If rawData <> Nothing Then                                                                                                                                    1035: 0x8C00   PushLocalRef            rawData
                                                                                                                                                                              1036: 0x000E   PushNothing             
                                                                                                                                                                              1037: 0x000B   RefCmpNE                
                                                                                                                                                                              1038: 0x3C27   BranchFalse             1078

000408              destination.Add((rawData(0) << 8 | rawData(1)) >> 4)                                                                                                      1039: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1040: 0x8C00   PushLocalRef            rawData
                                                                                                                                                                              1041: 0x00B4   ListItemGet             
                                                                                                                                                                              1042: 0x8008   PushConstU10            8 (0x0008)
                                                                                                                                                                              1043: 0x002E   IntShl                  
                                                                                                                                                                              1044: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1045: 0x8C00   PushLocalRef            rawData
                                                                                                                                                                              1046: 0x00B4   ListItemGet             
                                                                                                                                                                              1047: 0x002D   IntOr                   
                                                                                                                                                                              1048: 0x8004   PushConstU10            4 (0x0004)
                                                                                                                                                                              1049: 0x002F   IntShr                  
                                                                                                                                                                              1050: 0x8C01   PushLocalRef            destination
                                                                                                                                                                              1051: 0x00A3   ListAdd                 

000409              destination.Add((rawData(2) << 8 | rawData(3)) >> 4)                                                                                                      1052: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              1053: 0x8C00   PushLocalRef            rawData
                                                                                                                                                                              1054: 0x00B4   ListItemGet             
                                                                                                                                                                              1055: 0x8008   PushConstU10            8 (0x0008)
                                                                                                                                                                              1056: 0x002E   IntShl                  
                                                                                                                                                                              1057: 0x8003   PushConstU10            3 (0x0003)
                                                                                                                                                                              1058: 0x8C00   PushLocalRef            rawData
                                                                                                                                                                              1059: 0x00B4   ListItemGet             
                                                                                                                                                                              1060: 0x002D   IntOr                   
                                                                                                                                                                              1061: 0x8004   PushConstU10            4 (0x0004)
                                                                                                                                                                              1062: 0x002F   IntShr                  
                                                                                                                                                                              1063: 0x8C01   PushLocalRef            destination
                                                                                                                                                                              1064: 0x00A3   ListAdd                 

000410              destination.Add((rawData(4) << 8 | rawData(5)) >> 4)                                                                                                      1065: 0x8004   PushConstU10            4 (0x0004)
                                                                                                                                                                              1066: 0x8C00   PushLocalRef            rawData
                                                                                                                                                                              1067: 0x00B4   ListItemGet             
                                                                                                                                                                              1068: 0x8008   PushConstU10            8 (0x0008)
                                                                                                                                                                              1069: 0x002E   IntShl                  
                                                                                                                                                                              1070: 0x8005   PushConstU10            5 (0x0005)
                                                                                                                                                                              1071: 0x8C00   PushLocalRef            rawData
                                                                                                                                                                              1072: 0x00B4   ListItemGet             
                                                                                                                                                                              1073: 0x002D   IntOr                   
                                                                                                                                                                              1074: 0x8004   PushConstU10            4 (0x0004)
                                                                                                                                                                              1075: 0x002F   IntShr                  
                                                                                                                                                                              1076: 0x8C01   PushLocalRef            destination
                                                                                                                                                                              1077: 0x00A3   ListAdd                 

000411          End If
000412          Return destination                                                                                                                                            1078: 0x8C01   PushLocalRef            destination
                                                                                                                                                                              1079: 0x0095   ReturnRefType           

000413      End Function                                                                                                                                                      1080: 0x0096   ReturnNothing           

000414      
000415      Public Function readAccelData2sCompliment() As ListOfShort                                                                                                        1081: 0x1800   EntryPoint              ValTypParams=0, RefTypParams=0
                                                                                                                                                                              1082: 0xE001   AllocateStackSpace      ValTypeSize=0, RefTypeSize=1

000416          Dim destination As ListOfShort = New ListOfShort // x/y/z accel register data stored here                                                                     1083: 0x800D   PushConstU10            13 (0x000D)
                                                                                                                                                                              1084: 0x0010   ClassNew                
                                                                                                                                                                              1085: 0x9400   PopLocalRef             destination

000417          destination = readAccelData() // Read the data as shorts                                                                                                      1086: 0x000D   PushMe                  
                                                                                                                                                                              1087: 0x5442   BranchSubrBack          1022
                                                                                                                                                                              1088: 0x9400   PopLocalRef             destination

000418          If destination <> Nothing Then                                                                                                                                1089: 0x8C00   PushLocalRef            destination
                                                                                                                                                                              1090: 0x000E   PushNothing             
                                                                                                                                                                              1091: 0x000B   RefCmpNE                
                                                                                                                                                                              1092: 0x3C3C   BranchFalse             1153

000419              //convert values to 2's compliment
000420              If (((destination(0) >> 8) & 0xff) > 0x7f) Then                                                                                                           1093: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1094: 0x8C00   PushLocalRef            destination
                                                                                                                                                                              1095: 0x00B4   ListItemGet             
                                                                                                                                                                              1096: 0x8008   PushConstU10            8 (0x0008)
                                                                                                                                                                              1097: 0x002F   IntShr                  
                                                                                                                                                                              1098: 0x80FF   PushConstU10            255 (0x00FF)
                                                                                                                                                                              1099: 0x001F   IntAnd                  
                                                                                                                                                                              1100: 0x807F   PushConstU10            127 (0x007F)
                                                                                                                                                                              1101: 0x2C0B   BranchLE                1113

000421                  destination(0) = (~destination(0) + 1) * (-1)                                                                                                         1102: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1103: 0x8C00   PushLocalRef            destination
                                                                                                                                                                              1104: 0x00B4   ListItemGet             
                                                                                                                                                                              1105: 0x002C   IntNot                  
                                                                                                                                                                              1106: 0x007F   CvtIntToSho             
                                                                                                                                                                              1107: 0x0028   IntInc                  
                                                                                                                                                                              1108: 0x0016   PushConstMinus1         
                                                                                                                                                                              1109: 0x002A   IntMul                  
                                                                                                                                                                              1110: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1111: 0x8C00   PushLocalRef            destination
                                                                                                                                                                              1112: 0x00B5   ListItemPut             

000422              End If
000423              If (((destination(1) >> 8) & 0xff) > 0x7f) Then                                                                                                           1113: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1114: 0x8C00   PushLocalRef            destination
                                                                                                                                                                              1115: 0x00B4   ListItemGet             
                                                                                                                                                                              1116: 0x8008   PushConstU10            8 (0x0008)
                                                                                                                                                                              1117: 0x002F   IntShr                  
                                                                                                                                                                              1118: 0x80FF   PushConstU10            255 (0x00FF)
                                                                                                                                                                              1119: 0x001F   IntAnd                  
                                                                                                                                                                              1120: 0x807F   PushConstU10            127 (0x007F)
                                                                                                                                                                              1121: 0x2C0B   BranchLE                1133

000424                  destination(1) = (~destination(1) + 1) * (-1)                                                                                                         1122: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1123: 0x8C00   PushLocalRef            destination
                                                                                                                                                                              1124: 0x00B4   ListItemGet             
                                                                                                                                                                              1125: 0x002C   IntNot                  
                                                                                                                                                                              1126: 0x007F   CvtIntToSho             
                                                                                                                                                                              1127: 0x0028   IntInc                  
                                                                                                                                                                              1128: 0x0016   PushConstMinus1         
                                                                                                                                                                              1129: 0x002A   IntMul                  
                                                                                                                                                                              1130: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1131: 0x8C00   PushLocalRef            destination
                                                                                                                                                                              1132: 0x00B5   ListItemPut             

000425              End If
000426              If (((destination(2) >> 8) & 0xff) > 0x7f) Then                                                                                                           1133: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              1134: 0x8C00   PushLocalRef            destination
                                                                                                                                                                              1135: 0x00B4   ListItemGet             
                                                                                                                                                                              1136: 0x8008   PushConstU10            8 (0x0008)
                                                                                                                                                                              1137: 0x002F   IntShr                  
                                                                                                                                                                              1138: 0x80FF   PushConstU10            255 (0x00FF)
                                                                                                                                                                              1139: 0x001F   IntAnd                  
                                                                                                                                                                              1140: 0x807F   PushConstU10            127 (0x007F)
                                                                                                                                                                              1141: 0x2C0B   BranchLE                1153

000427                  destination(2) = (~destination(2) + 1) * (-1)                                                                                                         1142: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              1143: 0x8C00   PushLocalRef            destination
                                                                                                                                                                              1144: 0x00B4   ListItemGet             
                                                                                                                                                                              1145: 0x002C   IntNot                  
                                                                                                                                                                              1146: 0x007F   CvtIntToSho             
                                                                                                                                                                              1147: 0x0028   IntInc                  
                                                                                                                                                                              1148: 0x0016   PushConstMinus1         
                                                                                                                                                                              1149: 0x002A   IntMul                  
                                                                                                                                                                              1150: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              1151: 0x8C00   PushLocalRef            destination
                                                                                                                                                                              1152: 0x00B5   ListItemPut             

000428              End If
000429          End If
000430          Return destination                                                                                                                                            1153: 0x8C00   PushLocalRef            destination
                                                                                                                                                                              1154: 0x0095   ReturnRefType           

000431      End Function                                                                                                                                                      1155: 0x0096   ReturnNothing           

000432      
000433      // Read interrupt source register (see MMA8652FC datasheet, p. 28)
000434      Public Function readIntSource() As Byte                                                                                                                           1156: 0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000435          Return read(INT_SOURCE)                                                                                                                                       1157: 0x800C   PushConstU10            12 (0x000C)
                                                                                                                                                                              1158: 0x000D   PushMe                  
                                                                                                                                                                              1159: 0x1C42   BranchSubr              1226
                                                                                                                                                                              1160: 0x0092   ReturnValType           

000436      End Function                                                                                                                                                      1161: 0x0093   Return0                 

000437      
000438      // Read portrait/landscape status register (see MMA8652FC datasheet, p. 32)
000439      Public Function readPLStatus() As Byte                                                                                                                            1162: 0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000440          Return read(PL_STATUS)                                                                                                                                        1163: 0x8010   PushConstU10            16 (0x0010)
                                                                                                                                                                              1164: 0x000D   PushMe                  
                                                                                                                                                                              1165: 0x1C3C   BranchSubr              1226
                                                                                                                                                                              1166: 0x0092   ReturnValType           

000441      End Function                                                                                                                                                      1167: 0x0093   Return0                 

000442      
000443      // Read pulse source register (see MMA8652FC datasheet, p. 45)
000444      Public Function readPulseSource() As Byte                                                                                                                         1168: 0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000445          Return read(PULSE_SRC)                                                                                                                                        1169: 0x8022   PushConstU10            34 (0x0022)
                                                                                                                                                                              1170: 0x000D   PushMe                  
                                                                                                                                                                              1171: 0x1C36   BranchSubr              1226
                                                                                                                                                                              1172: 0x0092   ReturnValType           

000446      End Function                                                                                                                                                      1173: 0x0093   Return0                 

000447      
000448      // Read Transient source register (see MMA8652FC datasheet, p. 43)
000449      Public Function readTransientSource() As Byte                                                                                                                     1174: 0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000450          Return read(TRANSIENT_SRC)                                                                                                                                    1175: 0x801E   PushConstU10            30 (0x001E)
                                                                                                                                                                              1176: 0x000D   PushMe                  
                                                                                                                                                                              1177: 0x1C30   BranchSubr              1226
                                                                                                                                                                              1178: 0x0092   ReturnValType           

000451      End Function                                                                                                                                                      1179: 0x0093   Return0                 

000452      
000453      // Read free-fall source register (see MMA8652FC datasheet, p. 36)
000454      Public Function readFreeFallSource() As Byte                                                                                                                      1180: 0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000455          Return read(FF_MT_SRC)                                                                                                                                        1181: 0x8016   PushConstU10            22 (0x0016)
                                                                                                                                                                              1182: 0x000D   PushMe                  
                                                                                                                                                                              1183: 0x1C2A   BranchSubr              1226
                                                                                                                                                                              1184: 0x0092   ReturnValType           

000456      End Function                                                                                                                                                      1185: 0x0093   Return0                 

000457      
000458      // Read "who am I" register. It should return 0x4A
000459      Public Function whoAmI() As Byte                                                                                                                                  1186: 0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000460          Return read(WHO_AM_I)                                                                                                                                         1187: 0x800D   PushConstU10            13 (0x000D)
                                                                                                                                                                              1188: 0x000D   PushMe                  
                                                                                                                                                                              1189: 0x1C24   BranchSubr              1226
                                                                                                                                                                              1190: 0x0092   ReturnValType           

000461      End Function                                                                                                                                                      1191: 0x0093   Return0                 

000462      
000463      Public Sub Standby()                                                                                                                                              1192: 0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000464          'set active bit to 0 put accel in standby mode
000465          write(CTRL_REG1, read(CTRL_REG1) & ~ACTIVE_MASK)                                                                                                              1193: 0x802A   PushConstU10            42 (0x002A)
                                                                                                                                                                              1194: 0x802A   PushConstU10            42 (0x002A)
                                                                                                                                                                              1195: 0x000D   PushMe                  
                                                                                                                                                                              1196: 0x1C1D   BranchSubr              1226
                                                                                                                                                                              1197: 0x80FE   PushConstU10            254 (0x00FE)
                                                                                                                                                                              1198: 0x001F   IntAnd                  
                                                                                                                                                                              1199: 0x000D   PushMe                  
                                                                                                                                                                              1200: 0x1C3B   BranchSubr              1260

000466      End Sub                                                                                                                                                           1201: 0x0091   Return                  

000467      
000468      Public Sub Active()                                                                                                                                               1202: 0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000469          'set active bit to put accel in active mode
000470          write(CTRL_REG1, read(CTRL_REG1) | ACTIVE_MASK)                                                                                                               1203: 0x802A   PushConstU10            42 (0x002A)
                                                                                                                                                                              1204: 0x802A   PushConstU10            42 (0x002A)
                                                                                                                                                                              1205: 0x000D   PushMe                  
                                                                                                                                                                              1206: 0x1C13   BranchSubr              1226
                                                                                                                                                                              1207: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1208: 0x002D   IntOr                   
                                                                                                                                                                              1209: 0x000D   PushMe                  
                                                                                                                                                                              1210: 0x1C31   BranchSubr              1260

000471      End Sub                                                                                                                                                           1211: 0x0091   Return                  

000472      
000473      Public Sub SetRegister(reg As Byte)                                                                                                                               1212: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0
                                                                                                                                                                              1213: 0xE001   AllocateStackSpace      ValTypeSize=0, RefTypeSize=1

000474          Dim data As ListOfByte = New ListOfByte                                                                                                                       1214: 0x800C   PushConstU10            12 (0x000C)
                                                                                                                                                                              1215: 0x0010   ClassNew                
                                                                                                                                                                              1216: 0x9400   PopLocalRef             data

000475          data.Add(reg)                                                                                                                                                 1217: 0x8800   PushLocalI32            reg
                                                                                                                                                                              1218: 0x8C00   PushLocalRef            data
                                                                                                                                                                              1219: 0x00A3   ListAdd                 

000476          gAccelerometer.Write(data, False)                                                                                                                             1220: 0x8C00   PushLocalRef            data
                                                                                                                                                                              1221: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1222: 0xA400   PushMemberRef           gAccelerometer
                                                                                                                                                                              1223: 0x00E1   I2cDeviceWrite          
                                                                                                                                                                              1224: 0xE420   FreeStackSpace          ValTypeSize=1, RefTypeSize=0

000477      End Sub                                                                                                                                                           1225: 0x0091   Return                  

000478      
000479      Public Function read(address As Byte) As Byte                                                                                                                     1226: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0
                                                                                                                                                                              1227: 0xE021   AllocateStackSpace      ValTypeSize=1, RefTypeSize=1

000480          // read single byte
000481          SetRegister(address)                                                                                                                                          1228: 0x8800   PushLocalI32            address
                                                                                                                                                                              1229: 0x000D   PushMe                  
                                                                                                                                                                              1230: 0x5413   BranchSubrBack          1212

000482          Dim result As Byte = 0
000483          Dim value As ListOfByte = gAccelerometer.Read(1, True)                                                                                                        1231: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1232: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1233: 0xA400   PushMemberRef           gAccelerometer
                                                                                                                                                                              1234: 0x00E0   I2cDeviceRead           
                                                                                                                                                                              1235: 0x9400   PopLocalRef             value

000484          If value <> Nothing Then                                                                                                                                      1236: 0x8C00   PushLocalRef            value
                                                                                                                                                                              1237: 0x000E   PushNothing             
                                                                                                                                                                              1238: 0x000B   RefCmpNE                
                                                                                                                                                                              1239: 0x3C04   BranchFalse             1244

000485              result = value(0)                                                                                                                                         1240: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1241: 0x8C00   PushLocalRef            value
                                                                                                                                                                              1242: 0x00B4   ListItemGet             
                                                                                                                                                                              1243: 0x9001   PopLocalI32             result

000486          End If
000487          Return result                                                                                                                                                 1244: 0x8801   PushLocalI32            result
                                                                                                                                                                              1245: 0x0092   ReturnValType           

000488      End Function                                                                                                                                                      1246: 0x0093   Return0                 

000489      
000490      Public Function read(address As Byte, length As Byte) As ListOfByte                                                                                               1247: 0x1820   EntryPoint              ValTypParams=2, RefTypParams=0
                                                                                                                                                                              1248: 0xE001   AllocateStackSpace      ValTypeSize=0, RefTypeSize=1

000491          //read multiple bytes
000492          SetRegister(address)                                                                                                                                          1249: 0x8800   PushLocalI32            address
                                                                                                                                                                              1250: 0x000D   PushMe                  
                                                                                                                                                                              1251: 0x5428   BranchSubrBack          1212

000493          Dim value As ListOfByte = gAccelerometer.Read(length, True)                                                                                                   1252: 0x8801   PushLocalI32            length
                                                                                                                                                                              1253: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1254: 0xA400   PushMemberRef           gAccelerometer
                                                                                                                                                                              1255: 0x00E0   I2cDeviceRead           
                                                                                                                                                                              1256: 0x9400   PopLocalRef             value

000494          Return value                                                                                                                                                  1257: 0x8C00   PushLocalRef            value
                                                                                                                                                                              1258: 0x0095   ReturnRefType           

000495      End Function                                                                                                                                                      1259: 0x0096   ReturnNothing           

000496      
000497      Public Sub write(address As Byte, value As Byte)                                                                                                                  1260: 0x1820   EntryPoint              ValTypParams=2, RefTypParams=0
                                                                                                                                                                              1261: 0xE001   AllocateStackSpace      ValTypeSize=0, RefTypeSize=1

000498          //write single byte
000499          Dim data As ListOfByte = New ListOfByte                                                                                                                       1262: 0x800C   PushConstU10            12 (0x000C)
                                                                                                                                                                              1263: 0x0010   ClassNew                
                                                                                                                                                                              1264: 0x9400   PopLocalRef             data

000500          data.Add(address)                                                                                                                                             1265: 0x8800   PushLocalI32            address
                                                                                                                                                                              1266: 0x8C00   PushLocalRef            data
                                                                                                                                                                              1267: 0x00A3   ListAdd                 

000501          data.Add(value)                                                                                                                                               1268: 0x8801   PushLocalI32            value
                                                                                                                                                                              1269: 0x8C00   PushLocalRef            data
                                                                                                                                                                              1270: 0x00A3   ListAdd                 

000502          gAccelerometer.Write(data, True)                                                                                                                              1271: 0x8C00   PushLocalRef            data
                                                                                                                                                                              1272: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1273: 0xA400   PushMemberRef           gAccelerometer
                                                                                                                                                                              1274: 0x00E1   I2cDeviceWrite          
                                                                                                                                                                              1275: 0xE420   FreeStackSpace          ValTypeSize=1, RefTypeSize=0

000503      End Sub                                                                                                                                                           1276: 0x0091   Return                  

000504      
000505      Public Sub reset()                                                                                                                                                1277: 0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000506          write(CTRL_REG2, RST_MASK)                                                                                                                                    1278: 0x802B   PushConstU10            43 (0x002B)
                                                                                                                                                                              1279: 0x8040   PushConstU10            64 (0x0040)
                                                                                                                                                                              1280: 0x000D   PushMe                  
                                                                                                                                                                              1281: 0x5416   BranchSubrBack          1260

000507          While (read(CTRL_REG2) & RST_MASK) = RST_MASK                                                                                                                 1282: 0x802B   PushConstU10            43 (0x002B)
                                                                                                                                                                              1283: 0x000D   PushMe                  
                                                                                                                                                                              1284: 0x543B   BranchSubrBack          1226
                                                                                                                                                                              1285: 0x8040   PushConstU10            64 (0x0040)
                                                                                                                                                                              1286: 0x001F   IntAnd                  
                                                                                                                                                                              1287: 0x8040   PushConstU10            64 (0x0040)
                                                                                                                                                                              1288: 0x2404   BranchNE                1293

000508              Thread.Sleep(1000) //wait for reset to end                                                                                                                1289: 0x83E8   PushConstU10            1000 (0x03E8)
                                                                                                                                                                              1290: 0x00D5   ThreadSleep             
                                                                                                                                                                              1291: 0xE420   FreeStackSpace          ValTypeSize=1, RefTypeSize=0

000509          End While                                                                                                                                                     1292: 0x500B   BranchBack              1282

000510      End Sub                                                                                                                                                           1293: 0x0091   Return                  

000511      
000512      Public Sub SetRange(range As Byte)                                                                                                                                1294: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0

000513          write(XYZ_DATA_CFG, (read(XYZ_DATA_CFG) & ~FS_MASK) | range)                                                                                                  1295: 0x800E   PushConstU10            14 (0x000E)
                                                                                                                                                                              1296: 0x800E   PushConstU10            14 (0x000E)
                                                                                                                                                                              1297: 0x000D   PushMe                  
                                                                                                                                                                              1298: 0x5449   BranchSubrBack          1226
                                                                                                                                                                              1299: 0x80FC   PushConstU10            252 (0x00FC)
                                                                                                                                                                              1300: 0x001F   IntAnd                  
                                                                                                                                                                              1301: 0x8800   PushLocalI32            range
                                                                                                                                                                              1302: 0x002D   IntOr                   
                                                                                                                                                                              1303: 0x000D   PushMe                  
                                                                                                                                                                              1304: 0x542D   BranchSubrBack          1260

000514      End Sub                                                                                                                                                           1305: 0x0091   Return                  

000515      
000516      Public Function GetRange() As Byte                                                                                                                                1306: 0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000517          Return read(XYZ_DATA_CFG) & FS_MASK                                                                                                                           1307: 0x800E   PushConstU10            14 (0x000E)
                                                                                                                                                                              1308: 0x000D   PushMe                  
                                                                                                                                                                              1309: 0x5454   BranchSubrBack          1226
                                                                                                                                                                              1310: 0x8003   PushConstU10            3 (0x0003)
                                                                                                                                                                              1311: 0x001F   IntAnd                  
                                                                                                                                                                              1312: 0x0092   ReturnValType           

000518      End Function                                                                                                                                                      1313: 0x0093   Return0                 

000519      
000520      Public Sub SetWakeModeFrequency(frequency As Byte)                                                                                                                1314: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0

000521          write(CTRL_REG1, (read(CTRL_REG1) & ~DR_MASK) | frequency)                                                                                                    1315: 0x802A   PushConstU10            42 (0x002A)
                                                                                                                                                                              1316: 0x802A   PushConstU10            42 (0x002A)
                                                                                                                                                                              1317: 0x000D   PushMe                  
                                                                                                                                                                              1318: 0x545D   BranchSubrBack          1226
                                                                                                                                                                              1319: 0x80C7   PushConstU10            199 (0x00C7)
                                                                                                                                                                              1320: 0x001F   IntAnd                  
                                                                                                                                                                              1321: 0x8800   PushLocalI32            frequency
                                                                                                                                                                              1322: 0x002D   IntOr                   
                                                                                                                                                                              1323: 0x000D   PushMe                  
                                                                                                                                                                              1324: 0x5441   BranchSubrBack          1260

000522      End Sub                                                                                                                                                           1325: 0x0091   Return                  

000523      
000524      Public Function GetWakeModeFrequency() As Byte                                                                                                                    1326: 0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000525          Return read(CTRL_REG1) & DR_MASK                                                                                                                              1327: 0x802A   PushConstU10            42 (0x002A)
                                                                                                                                                                              1328: 0x000D   PushMe                  
                                                                                                                                                                              1329: 0x5468   BranchSubrBack          1226
                                                                                                                                                                              1330: 0x8038   PushConstU10            56 (0x0038)
                                                                                                                                                                              1331: 0x001F   IntAnd                  
                                                                                                                                                                              1332: 0x0092   ReturnValType           

000526      End Function                                                                                                                                                      1333: 0x0093   Return0                 

000527      
000528      Public Sub SetWakeModeResolution(resolution As Byte)                                                                                                              1334: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0

000529          write(CTRL_REG2, (read(CTRL_REG2) & ~MODS_MASK) | resolution) // clear bits 0 and 1, sent wake mode resolution                                                1335: 0x802B   PushConstU10            43 (0x002B)
                                                                                                                                                                              1336: 0x802B   PushConstU10            43 (0x002B)
                                                                                                                                                                              1337: 0x000D   PushMe                  
                                                                                                                                                                              1338: 0x5471   BranchSubrBack          1226
                                                                                                                                                                              1339: 0x80FC   PushConstU10            252 (0x00FC)
                                                                                                                                                                              1340: 0x001F   IntAnd                  
                                                                                                                                                                              1341: 0x8800   PushLocalI32            resolution
                                                                                                                                                                              1342: 0x002D   IntOr                   
                                                                                                                                                                              1343: 0x000D   PushMe                  
                                                                                                                                                                              1344: 0x5455   BranchSubrBack          1260

000530      End Sub                                                                                                                                                           1345: 0x0091   Return                  

000531      
000532      Public Function GetWakeModeResolution() As Byte                                                                                                                   1346: 0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000533          Return read(CTRL_REG2) & MODS_MASK // read bits 0 and 1                                                                                                       1347: 0x802B   PushConstU10            43 (0x002B)
                                                                                                                                                                              1348: 0x000D   PushMe                  
                                                                                                                                                                              1349: 0x547C   BranchSubrBack          1226
                                                                                                                                                                              1350: 0x8003   PushConstU10            3 (0x0003)
                                                                                                                                                                              1351: 0x001F   IntAnd                  
                                                                                                                                                                              1352: 0x0092   ReturnValType           

000534      End Function                                                                                                                                                      1353: 0x0093   Return0                 

000535      
000536      Public Sub SetSleepMode(mode As Byte)                                                                                                                             1354: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0

000537          write(CTRL_REG2, (read(CTRL_REG2) & ~SLPE_MASK) | mode) // clear bit 3, set sleep mode                                                                        1355: 0x802B   PushConstU10            43 (0x002B)
                                                                                                                                                                              1356: 0x802B   PushConstU10            43 (0x002B)
                                                                                                                                                                              1357: 0x000D   PushMe                  
                                                                                                                                                                              1358: 0x5485   BranchSubrBack          1226
                                                                                                                                                                              1359: 0x80FB   PushConstU10            251 (0x00FB)
                                                                                                                                                                              1360: 0x001F   IntAnd                  
                                                                                                                                                                              1361: 0x8800   PushLocalI32            mode
                                                                                                                                                                              1362: 0x002D   IntOr                   
                                                                                                                                                                              1363: 0x000D   PushMe                  
                                                                                                                                                                              1364: 0x5469   BranchSubrBack          1260

000538      End Sub                                                                                                                                                           1365: 0x0091   Return                  

000539      
000540      Public Function GetSleepMode() As Byte                                                                                                                            1366: 0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000541          Return read(CTRL_REG2) & SLPE_MASK // read bit 3                                                                                                              1367: 0x802B   PushConstU10            43 (0x002B)
                                                                                                                                                                              1368: 0x000D   PushMe                  
                                                                                                                                                                              1369: 0x5490   BranchSubrBack          1226
                                                                                                                                                                              1370: 0x8004   PushConstU10            4 (0x0004)
                                                                                                                                                                              1371: 0x001F   IntAnd                  
                                                                                                                                                                              1372: 0x0092   ReturnValType           

000542      End Function                                                                                                                                                      1373: 0x0093   Return0                 

000543      
000544      Public Sub SetSleepModeResolution(resolution As Byte)                                                                                                             1374: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0

000545          write(CTRL_REG2, (read(CTRL_REG2) & ~SMODS_MASK) | resolution) // clear bits 4 and 5, set sleep mode resolution                                               1375: 0x802B   PushConstU10            43 (0x002B)
                                                                                                                                                                              1376: 0x802B   PushConstU10            43 (0x002B)
                                                                                                                                                                              1377: 0x000D   PushMe                  
                                                                                                                                                                              1378: 0x5499   BranchSubrBack          1226
                                                                                                                                                                              1379: 0x80E7   PushConstU10            231 (0x00E7)
                                                                                                                                                                              1380: 0x001F   IntAnd                  
                                                                                                                                                                              1381: 0x8800   PushLocalI32            resolution
                                                                                                                                                                              1382: 0x002D   IntOr                   
                                                                                                                                                                              1383: 0x000D   PushMe                  
                                                                                                                                                                              1384: 0x547D   BranchSubrBack          1260

000546      End Sub                                                                                                                                                           1385: 0x0091   Return                  

000547      
000548      Public Function GetSleepModeResolution() As Byte                                                                                                                  1386: 0x1800   EntryPoint              ValTypParams=0, RefTypParams=0

000549          Return read(CTRL_REG2) & SMODS_MASK // read bits 4 and 5                                                                                                      1387: 0x802B   PushConstU10            43 (0x002B)
                                                                                                                                                                              1388: 0x000D   PushMe                  
                                                                                                                                                                              1389: 0x54A4   BranchSubrBack          1226
                                                                                                                                                                              1390: 0x8018   PushConstU10            24 (0x0018)
                                                                                                                                                                              1391: 0x001F   IntAnd                  
                                                                                                                                                                              1392: 0x0092   ReturnValType           

000550      End Function                                                                                                                                                      1393: 0x0093   Return0                 

000551      
000552      Public Sub SetSleepModeInterrupts(interrupts As Byte)                                                                                                             1394: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0

000553          write(CTRL_REG3, (read(CTRL_REG3) & ~interrupts) | interrupts) // clear interrupts, set Wake on interrupts                                                    1395: 0x802C   PushConstU10            44 (0x002C)
                                                                                                                                                                              1396: 0x802C   PushConstU10            44 (0x002C)
                                                                                                                                                                              1397: 0x000D   PushMe                  
                                                                                                                                                                              1398: 0x54AD   BranchSubrBack          1226
                                                                                                                                                                              1399: 0x8800   PushLocalI32            interrupts
                                                                                                                                                                              1400: 0x002C   IntNot                  
                                                                                                                                                                              1401: 0x007D   CvtIntToByt             
                                                                                                                                                                              1402: 0x001F   IntAnd                  
                                                                                                                                                                              1403: 0x8800   PushLocalI32            interrupts
                                                                                                                                                                              1404: 0x002D   IntOr                   
                                                                                                                                                                              1405: 0x000D   PushMe                  
                                                                                                                                                                              1406: 0x5493   BranchSubrBack          1260

000554      End Sub                                                                                                                                                           1407: 0x0091   Return                  

000555      
000556      Public Sub SetEnableInterrupts(interrupts As Byte)                                                                                                                1408: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0

000557          write(CTRL_REG4, (read(CTRL_REG4) & ~interrupts) | interrupts) // clear interrupts,  enable/disable interrupts                                                1409: 0x802D   PushConstU10            45 (0x002D)
                                                                                                                                                                              1410: 0x802D   PushConstU10            45 (0x002D)
                                                                                                                                                                              1411: 0x000D   PushMe                  
                                                                                                                                                                              1412: 0x54BB   BranchSubrBack          1226
                                                                                                                                                                              1413: 0x8800   PushLocalI32            interrupts
                                                                                                                                                                              1414: 0x002C   IntNot                  
                                                                                                                                                                              1415: 0x007D   CvtIntToByt             
                                                                                                                                                                              1416: 0x001F   IntAnd                  
                                                                                                                                                                              1417: 0x8800   PushLocalI32            interrupts
                                                                                                                                                                              1418: 0x002D   IntOr                   
                                                                                                                                                                              1419: 0x000D   PushMe                  
                                                                                                                                                                              1420: 0x54A1   BranchSubrBack          1260

000558      End Sub                                                                                                                                                           1421: 0x0091   Return                  

000559      
000560      Public Sub SetInterruptsINT(interrupts As Byte)                                                                                                                   1422: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0

000561          'route interrupt to INT1 pin (ff sets all interrupts to INT1 , 00 to INT2)
000562          write(CTRL_REG5, (read(CTRL_REG5) & ~interrupts) | interrupts) // clear interrupts, set interrupts to INT1 (rest to INT2)                                     1423: 0x802E   PushConstU10            46 (0x002E)
                                                                                                                                                                              1424: 0x802E   PushConstU10            46 (0x002E)
                                                                                                                                                                              1425: 0x000D   PushMe                  
                                                                                                                                                                              1426: 0x54C9   BranchSubrBack          1226
                                                                                                                                                                              1427: 0x8800   PushLocalI32            interrupts
                                                                                                                                                                              1428: 0x002C   IntNot                  
                                                                                                                                                                              1429: 0x007D   CvtIntToByt             
                                                                                                                                                                              1430: 0x001F   IntAnd                  
                                                                                                                                                                              1431: 0x8800   PushLocalI32            interrupts
                                                                                                                                                                              1432: 0x002D   IntOr                   
                                                                                                                                                                              1433: 0x000D   PushMe                  
                                                                                                                                                                              1434: 0x54AF   BranchSubrBack          1260

000563      End Sub                                                                                                                                                           1435: 0x0091   Return                  

000564      
000565      Public Sub SetTransientCFG(transient As Byte)                                                                                                                     1436: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0

000566          'options are TELE | ZTEFE | YTEFE | XTEFE | HPF_BYP (latch enable, Z,Y,X enable, Filter disable)
000567          write(TRANSIENT_CFG, transient) // set transients config, High Pass Filter (bit 0) enabled by default                                                         1437: 0x801D   PushConstU10            29 (0x001D)
                                                                                                                                                                              1438: 0x8800   PushLocalI32            transient
                                                                                                                                                                              1439: 0x000D   PushMe                  
                                                                                                                                                                              1440: 0x54B5   BranchSubrBack          1260

000568      End Sub                                                                                                                                                           1441: 0x0091   Return                  

000569      
000570      Public Sub SetTransientThreshold(threshold As Float)                                                                                                              1442: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0
                                                                                                                                                                              1443: 0xE020   AllocateStackSpace      ValTypeSize=1, RefTypeSize=0

000571          'A 7-bit unsigned number, with 0.063 g/LSB. The maximum threshold is ±8g (irrispective of Range setting)
000572          Dim thresholdByte As Byte = map_range(threshold, 0, 8.0, 0, 0x7f)                                                                                             1444: 0x8800   PushLocalI32            threshold
                                                                                                                                                                              1445: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1446: 0xEA08   PushConstFlt            8.0
                                                                                                                                                                              1447: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1448: 0x807F   PushConstU10            127 (0x007F)
                                                                                                                                                                              1449: 0x000D   PushMe                  
                                                                                                                                                                              1450: 0x56C4   BranchSubrBack          743
                                                                                                                                                                              1451: 0x9001   PopLocalI32             thresholdByte

000573          If thresholdByte <= 0x7f Then                                                                                                                                 1452: 0x8801   PushLocalI32            thresholdByte
                                                                                                                                                                              1453: 0x807F   PushConstU10            127 (0x007F)
                                                                                                                                                                              1454: 0x3004   BranchGT                1459

000574              write(TRANSIENT_THS, thresholdByte)                                                                                                                       1455: 0x801F   PushConstU10            31 (0x001F)
                                                                                                                                                                              1456: 0x8801   PushLocalI32            thresholdByte
                                                                                                                                                                              1457: 0x000D   PushMe                  
                                                                                                                                                                              1458: 0x54C7   BranchSubrBack          1260

000575          End If
000576      End Sub                                                                                                                                                           1459: 0x0091   Return                  

000577      
000578      Public Sub SetTransientCount(count As Byte)                                                                                                                       1460: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0

000579          'Set Duration in counts (if set to 0, causes interrupt immediately, once threshold exceeded)
000580          'The TRANSIENT_COUNT sets the minimum number of debounce counts continuously matching the condition where the
000581          'unsigned value of high - pass filtered data Is greater than the user - specified value of TRANSIENT_THS.
000582          write(TRANSIENT_COUNT, count)                                                                                                                                 1461: 0x8020   PushConstU10            32 (0x0020)
                                                                                                                                                                              1462: 0x8800   PushLocalI32            count
                                                                                                                                                                              1463: 0x000D   PushMe                  
                                                                                                                                                                              1464: 0x54CD   BranchSubrBack          1260

000583      End Sub                                                                                                                                                           1465: 0x0091   Return                  

000584      
000585      Public Sub SetTransientDuration(duration As Float)                                                                                                                1466: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0
                                                                                                                                                                              1467: 0xE040   AllocateStackSpace      ValTypeSize=2, RefTypeSize=0

000586          'Set Duration in ms (if set to 0, causes interrupt immediately, once threshold exceeded)
000587          'The TRANSIENT_COUNT sets the minimum number of debounce counts continuously matching the condition where the
000588          'unsigned value of high - pass filtered data Is greater than the user - specified value of TRANSIENT_THS.
000589          'The duration in ms depends on the frequency, ie 50 Hz = 20ms per count, so 100ms = 5 counts
000590          'But is effected by mode also.... see table 66 p44 of DS
000591          Dim msPerCount As Float = GetmsPerCount()                                                                                                                     1468: 0x000D   PushMe                  
                                                                                                                                                                              1469: 0x56A7   BranchSubrBack          791
                                                                                                                                                                              1470: 0x9001   PopLocalI32             msPerCount

000592          Dim count As Byte = (duration / msPerCount).ToByte                                                                                                            1471: 0x8800   PushLocalI32            duration
                                                                                                                                                                              1472: 0x8801   PushLocalI32            msPerCount
                                                                                                                                                                              1473: 0x003B   FltDiv                  
                                                                                                                                                                              1474: 0x007B   CvtFltToInt             
                                                                                                                                                                              1475: 0x007D   CvtIntToByt             
                                                                                                                                                                              1476: 0x9002   PopLocalI32             count

000593          write(TRANSIENT_COUNT, count)                                                                                                                                 1477: 0x8020   PushConstU10            32 (0x0020)
                                                                                                                                                                              1478: 0x8802   PushLocalI32            count
                                                                                                                                                                              1479: 0x000D   PushMe                  
                                                                                                                                                                              1480: 0x54DD   BranchSubrBack          1260

000594      End Sub                                                                                                                                                           1481: 0x0091   Return                  

000595      
000596      Public Sub EnablePL(enable As Boolean)                                                                                                                            1482: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0

000597          If enable Then                                                                                                                                                1483: 0x8800   PushLocalI32            enable
                                                                                                                                                                              1484: 0x3C0B   BranchFalse             1496

000598              write(PL_CFG, (read(PL_CFG) & ~PL_EN_MASK) | PL_EN_MASK) // Enable P/L (debounce enabled by default)                                                      1485: 0x8011   PushConstU10            17 (0x0011)
                                                                                                                                                                              1486: 0x8011   PushConstU10            17 (0x0011)
                                                                                                                                                                              1487: 0x000D   PushMe                  
                                                                                                                                                                              1488: 0x5507   BranchSubrBack          1226
                                                                                                                                                                              1489: 0x80BF   PushConstU10            191 (0x00BF)
                                                                                                                                                                              1490: 0x001F   IntAnd                  
                                                                                                                                                                              1491: 0x8040   PushConstU10            64 (0x0040)
                                                                                                                                                                              1492: 0x002D   IntOr                   
                                                                                                                                                                              1493: 0x000D   PushMe                  
                                                                                                                                                                              1494: 0x54EB   BranchSubrBack          1260

                                                                                                                                                                              1495: 0x4008   Branch                  1504
000599          Else                                                                                                                                                          

000600              write(PL_CFG, (read(PL_CFG) & ~PL_EN_MASK)) // Disable P/L (debounce enabled by default)                                                                  1496: 0x8011   PushConstU10            17 (0x0011)
                                                                                                                                                                              1497: 0x8011   PushConstU10            17 (0x0011)
                                                                                                                                                                              1498: 0x000D   PushMe                  
                                                                                                                                                                              1499: 0x5512   BranchSubrBack          1226
                                                                                                                                                                              1500: 0x80BF   PushConstU10            191 (0x00BF)
                                                                                                                                                                              1501: 0x001F   IntAnd                  
                                                                                                                                                                              1502: 0x000D   PushMe                  
                                                                                                                                                                              1503: 0x54F4   BranchSubrBack          1260

000601          End If
000602      End Sub                                                                                                                                                           1504: 0x0091   Return                  

000603      
000604      Public Sub EnablePLDebounce(enable As Boolean)                                                                                                                    1505: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0

000605          '0 Decrements debounce whenever the condition of interest is no longer valid.
000606          '1 Clears the counter whenever the condition of interest is no longer valid. (default)
000607          If enable Then                                                                                                                                                1506: 0x8800   PushLocalI32            enable
                                                                                                                                                                              1507: 0x3C0B   BranchFalse             1519

000608              write(PL_CFG, (read(PL_CFG) & ~DBCNTM_MASK) | DBCNTM_MASK) // Enable P/L (debounce enabled by default)                                                    1508: 0x8011   PushConstU10            17 (0x0011)
                                                                                                                                                                              1509: 0x8011   PushConstU10            17 (0x0011)
                                                                                                                                                                              1510: 0x000D   PushMe                  
                                                                                                                                                                              1511: 0x551E   BranchSubrBack          1226
                                                                                                                                                                              1512: 0x807F   PushConstU10            127 (0x007F)
                                                                                                                                                                              1513: 0x001F   IntAnd                  
                                                                                                                                                                              1514: 0x8080   PushConstU10            128 (0x0080)
                                                                                                                                                                              1515: 0x002D   IntOr                   
                                                                                                                                                                              1516: 0x000D   PushMe                  
                                                                                                                                                                              1517: 0x5502   BranchSubrBack          1260

                                                                                                                                                                              1518: 0x4008   Branch                  1527
000609          Else                                                                                                                                                          

000610              write(PL_CFG, (read(PL_CFG) & ~DBCNTM_MASK)) // Disable P/L (debounce enabled by default)                                                                 1519: 0x8011   PushConstU10            17 (0x0011)
                                                                                                                                                                              1520: 0x8011   PushConstU10            17 (0x0011)
                                                                                                                                                                              1521: 0x000D   PushMe                  
                                                                                                                                                                              1522: 0x5529   BranchSubrBack          1226
                                                                                                                                                                              1523: 0x807F   PushConstU10            127 (0x007F)
                                                                                                                                                                              1524: 0x001F   IntAnd                  
                                                                                                                                                                              1525: 0x000D   PushMe                  
                                                                                                                                                                              1526: 0x550B   BranchSubrBack          1260

000611          End If
000612      End Sub                                                                                                                                                           1527: 0x0091   Return                  

000613      
000614      Public Sub SetPLZLOCK(zlock As Byte)                                                                                                                              1528: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0

000615          'The Z-Lock angle compensation bits allows you to adjust the Z-lockout region from 14° up to 43°.
000616          'ZLOCK (bits 0,1,2) 0 = 14° (min), 0x04 = 29° (default) x07 = 43° (max)
000617          'Z-lock angle threshold(1)
000618          'Step size is 4°
000619          'Range is from 14° to 43°
000620          If zlock <= 0x07 Then                                                                                                                                         1529: 0x8800   PushLocalI32            zlock
                                                                                                                                                                              1530: 0x8007   PushConstU10            7 (0x0007)
                                                                                                                                                                              1531: 0x300A   BranchGT                1542

000621              write(PL_BF_ZCOMP, (read(PL_BF_ZCOMP) & ~ZLOCK_MASK) | zlock)                                                                                             1532: 0x8013   PushConstU10            19 (0x0013)
                                                                                                                                                                              1533: 0x8013   PushConstU10            19 (0x0013)
                                                                                                                                                                              1534: 0x000D   PushMe                  
                                                                                                                                                                              1535: 0x5536   BranchSubrBack          1226
                                                                                                                                                                              1536: 0x80F8   PushConstU10            248 (0x00F8)
                                                                                                                                                                              1537: 0x001F   IntAnd                  
                                                                                                                                                                              1538: 0x8800   PushLocalI32            zlock
                                                                                                                                                                              1539: 0x002D   IntOr                   
                                                                                                                                                                              1540: 0x000D   PushMe                  
                                                                                                                                                                              1541: 0x551A   BranchSubrBack          1260

000622          End If
000623      End Sub                                                                                                                                                           1542: 0x0091   Return                  

000624      
000625      Public Sub SetPLZLOCKDegrees(zlock As Float)                                                                                                                      1543: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0
                                                                                                                                                                              1544: 0xE020   AllocateStackSpace      ValTypeSize=1, RefTypeSize=0

000626          'The Z-Lock angle compensation bits allows you to adjust the Z-lockout region from 14° up to 43°.
000627          'ZLOCK (bits 0,1,2) 0 = 14° (min), 0x04 = 29° (default) x07 = 43° (max)
000628          'Z-lock angle threshold(1)
000629          'Step size is 4°
000630          'Range is from 14° to 43°
000631          Dim zlockByte As Byte = map_range(zlock, 14.0, 43.0, 0, 0x07)                                                                                                 1545: 0x8800   PushLocalI32            zlock
                                                                                                                                                                              1546: 0xEA0E   PushConstFlt            14.0
                                                                                                                                                                              1547: 0xEA2B   PushConstFlt            43.0
                                                                                                                                                                              1548: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1549: 0x8007   PushConstU10            7 (0x0007)
                                                                                                                                                                              1550: 0x000D   PushMe                  
                                                                                                                                                                              1551: 0x5729   BranchSubrBack          743
                                                                                                                                                                              1552: 0x9001   PopLocalI32             zlockByte

000632          If zlockByte <= 0x07 Then                                                                                                                                     1553: 0x8801   PushLocalI32            zlockByte
                                                                                                                                                                              1554: 0x8007   PushConstU10            7 (0x0007)
                                                                                                                                                                              1555: 0x300A   BranchGT                1566

000633              write(PL_BF_ZCOMP, (read(PL_BF_ZCOMP) & ~ZLOCK_MASK) | zlockByte)                                                                                         1556: 0x8013   PushConstU10            19 (0x0013)
                                                                                                                                                                              1557: 0x8013   PushConstU10            19 (0x0013)
                                                                                                                                                                              1558: 0x000D   PushMe                  
                                                                                                                                                                              1559: 0x554E   BranchSubrBack          1226
                                                                                                                                                                              1560: 0x80F8   PushConstU10            248 (0x00F8)
                                                                                                                                                                              1561: 0x001F   IntAnd                  
                                                                                                                                                                              1562: 0x8801   PushLocalI32            zlockByte
                                                                                                                                                                              1563: 0x002D   IntOr                   
                                                                                                                                                                              1564: 0x000D   PushMe                  
                                                                                                                                                                              1565: 0x5532   BranchSubrBack          1260

000634          End If
000635      End Sub                                                                                                                                                           1566: 0x0091   Return                  

000636      
000637      Public Sub SetPLBFThreshold(threshold As Float)                                                                                                                   1567: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0
                                                                                                                                                                              1568: 0xE020   AllocateStackSpace      ValTypeSize=1, RefTypeSize=0

000638          'B/F = bits 6,7 see table 44 for setting (suggest leave at default 75°)
000639          'Back/Front trip angle threshold(1)
000640          'Step size = 5°
000641          'Range = ±(65° to 80°)
000642          Dim thresholdByte As Byte = map_range(threshold, 65.0, 80.0, 0, 0x04)                                                                                         1569: 0x8800   PushLocalI32            threshold
                                                                                                                                                                              1570: 0xEA41   PushConstFlt            65.0
                                                                                                                                                                              1571: 0xEA50   PushConstFlt            80.0
                                                                                                                                                                              1572: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1573: 0x8004   PushConstU10            4 (0x0004)
                                                                                                                                                                              1574: 0x000D   PushMe                  
                                                                                                                                                                              1575: 0x5741   BranchSubrBack          743
                                                                                                                                                                              1576: 0x9001   PopLocalI32             thresholdByte

000643          If thresholdByte <= 0x04 Then                                                                                                                                 1577: 0x8801   PushLocalI32            thresholdByte
                                                                                                                                                                              1578: 0x8004   PushConstU10            4 (0x0004)
                                                                                                                                                                              1579: 0x300C   BranchGT                1592

000644              write(PL_BF_ZCOMP, (read(PL_BF_ZCOMP) & ~BKFR_MASK) | (thresholdByte << 6))                                                                               1580: 0x8013   PushConstU10            19 (0x0013)
                                                                                                                                                                              1581: 0x8013   PushConstU10            19 (0x0013)
                                                                                                                                                                              1582: 0x000D   PushMe                  
                                                                                                                                                                              1583: 0x5566   BranchSubrBack          1226
                                                                                                                                                                              1584: 0x803F   PushConstU10            63 (0x003F)
                                                                                                                                                                              1585: 0x001F   IntAnd                  
                                                                                                                                                                              1586: 0x8801   PushLocalI32            thresholdByte
                                                                                                                                                                              1587: 0x8006   PushConstU10            6 (0x0006)
                                                                                                                                                                              1588: 0x002E   IntShl                  
                                                                                                                                                                              1589: 0x002D   IntOr                   
                                                                                                                                                                              1590: 0x000D   PushMe                  
                                                                                                                                                                              1591: 0x554C   BranchSubrBack          1260

000645          End If
000646      End Sub                                                                                                                                                           1592: 0x0091   Return                  

000647      
000648      Public Sub SetPLThreshold(threshold As Float)                                                                                                                     1593: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0
                                                                                                                                                                              1594: 0xE020   AllocateStackSpace      ValTypeSize=1, RefTypeSize=0

000649          '(bits 3,4,5,6,7)
000650          'Portrait/Landscape trip threshold angle (from 15° to 75°) in 5 deg steps
000651          'See Table 47, “Threshold angle thresholds look-up table,” on
000652          'page 36 of DS for the values with the corresponding approximate threshold angle.
000653          '0x10 = 45° default
000654          Dim thresholdByte As Byte = map_range(threshold, 15.0, 75.0, 0x07, 0x19)                                                                                      1595: 0x8800   PushLocalI32            threshold
                                                                                                                                                                              1596: 0xEA0F   PushConstFlt            15.0
                                                                                                                                                                              1597: 0xEA4B   PushConstFlt            75.0
                                                                                                                                                                              1598: 0x8007   PushConstU10            7 (0x0007)
                                                                                                                                                                              1599: 0x8019   PushConstU10            25 (0x0019)
                                                                                                                                                                              1600: 0x000D   PushMe                  
                                                                                                                                                                              1601: 0x575B   BranchSubrBack          743
                                                                                                                                                                              1602: 0x9001   PopLocalI32             thresholdByte

000655          If thresholdByte >= 0x07 And thresholdByte <= 0x19 Then                                                                                                       1603: 0x8801   PushLocalI32            thresholdByte
                                                                                                                                                                              1604: 0x8007   PushConstU10            7 (0x0007)
                                                                                                                                                                              1605: 0x0023   IntCmpGE                
                                                                                                                                                                              1606: 0x8801   PushLocalI32            thresholdByte
                                                                                                                                                                              1607: 0x8019   PushConstU10            25 (0x0019)
                                                                                                                                                                              1608: 0x0025   IntCmpLE                
                                                                                                                                                                              1609: 0x001F   IntAnd                  
                                                                                                                                                                              1610: 0x3C0C   BranchFalse             1623

000656              write(PL_THS, (read(PL_THS) & ~P_L_THS_MASK) | (thresholdByte << 4))                                                                                      1611: 0x8014   PushConstU10            20 (0x0014)
                                                                                                                                                                              1612: 0x8014   PushConstU10            20 (0x0014)
                                                                                                                                                                              1613: 0x000D   PushMe                  
                                                                                                                                                                              1614: 0x5585   BranchSubrBack          1226
                                                                                                                                                                              1615: 0x8007   PushConstU10            7 (0x0007)
                                                                                                                                                                              1616: 0x001F   IntAnd                  
                                                                                                                                                                              1617: 0x8801   PushLocalI32            thresholdByte
                                                                                                                                                                              1618: 0x8004   PushConstU10            4 (0x0004)
                                                                                                                                                                              1619: 0x002E   IntShl                  
                                                                                                                                                                              1620: 0x002D   IntOr                   
                                                                                                                                                                              1621: 0x000D   PushMe                  
                                                                                                                                                                              1622: 0x556B   BranchSubrBack          1260

000657          End If
000658      End Sub                                                                                                                                                           1623: 0x0091   Return                  

000659      
000660      Public Sub SetPLHysteresis(hysteresis As Float)                                                                                                                   1624: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0
                                                                                                                                                                              1625: 0xE020   AllocateStackSpace      ValTypeSize=1, RefTypeSize=0

000661          '(bits 0,1,2)
000662          'This angle is added to the threshold angle, for a smoother transition
000663          'from portrait to landscape and landscape to portrait.
000664          'This angle ranges from 0° to ±24°.
000665          '±14° (default)
000666          Dim hysteresisByte As Byte = map_range(hysteresis, 0, 24.0, 0, 0x07)                                                                                          1626: 0x8800   PushLocalI32            hysteresis
                                                                                                                                                                              1627: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1628: 0xEA18   PushConstFlt            24.0
                                                                                                                                                                              1629: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1630: 0x8007   PushConstU10            7 (0x0007)
                                                                                                                                                                              1631: 0x000D   PushMe                  
                                                                                                                                                                              1632: 0x577A   BranchSubrBack          743
                                                                                                                                                                              1633: 0x9001   PopLocalI32             hysteresisByte

000667          If hysteresisByte <= 0x07 Then                                                                                                                                1634: 0x8801   PushLocalI32            hysteresisByte
                                                                                                                                                                              1635: 0x8007   PushConstU10            7 (0x0007)
                                                                                                                                                                              1636: 0x300A   BranchGT                1647

000668              write(PL_THS, (read(PL_THS) & ~HYS_MASK) | hysteresisByte)                                                                                                1637: 0x8014   PushConstU10            20 (0x0014)
                                                                                                                                                                              1638: 0x8014   PushConstU10            20 (0x0014)
                                                                                                                                                                              1639: 0x000D   PushMe                  
                                                                                                                                                                              1640: 0x559F   BranchSubrBack          1226
                                                                                                                                                                              1641: 0x80F8   PushConstU10            248 (0x00F8)
                                                                                                                                                                              1642: 0x001F   IntAnd                  
                                                                                                                                                                              1643: 0x8801   PushLocalI32            hysteresisByte
                                                                                                                                                                              1644: 0x002D   IntOr                   
                                                                                                                                                                              1645: 0x000D   PushMe                  
                                                                                                                                                                              1646: 0x5583   BranchSubrBack          1260

000669          End If
000670      End Sub                                                                                                                                                           1647: 0x0091   Return                  

000671      
000672      Public Sub SetPLCount(count As Byte)                                                                                                                              1648: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0

000673          'The debounce counter weighting (time step) changes, based on the ODR and the
000674          'Oversampling mode. Table 40 explains the time step value for all sample rates and all
000675          'Oversampling modes.
000676          write(PL_COUNT, count) // debounce counter 0x10 = 320ms (at 50 hz)                                                                                            1649: 0x8012   PushConstU10            18 (0x0012)
                                                                                                                                                                              1650: 0x8800   PushLocalI32            count
                                                                                                                                                                              1651: 0x000D   PushMe                  
                                                                                                                                                                              1652: 0x5589   BranchSubrBack          1260

000677      End Sub                                                                                                                                                           1653: 0x0091   Return                  

000678      
000679      Public Sub SetPLDuration(duration As Float)                                                                                                                       1654: 0x1810   EntryPoint              ValTypParams=1, RefTypParams=0
                                                                                                                                                                              1655: 0xE040   AllocateStackSpace      ValTypeSize=2, RefTypeSize=0

000680          'Set Duration in ms (if set to 0, causes interrupt immediately, once threshold exceeded)
000681          'The Portrait/Landscape Debounce register sets the debounce count for the orientation state transition. The minimum debounce
000682          'latency is determined by the data rate (which is set by the product of the selected system ODR and PL_COUNT registers).
000683          'The duration in ms depends on the frequency, ie 50 Hz = 20ms per count, so 100ms = 5 counts
000684          'But is effected by mode also.... see table 40 p34 of DS
000685          Dim msPerCount As Float = GetmsPerCount()                                                                                                                     1656: 0x000D   PushMe                  
                                                                                                                                                                              1657: 0x5763   BranchSubrBack          791
                                                                                                                                                                              1658: 0x9001   PopLocalI32             msPerCount

000686          Dim count As Byte = (duration / msPerCount).ToByte                                                                                                            1659: 0x8800   PushLocalI32            duration
                                                                                                                                                                              1660: 0x8801   PushLocalI32            msPerCount
                                                                                                                                                                              1661: 0x003B   FltDiv                  
                                                                                                                                                                              1662: 0x007B   CvtFltToInt             
                                                                                                                                                                              1663: 0x007D   CvtIntToByt             
                                                                                                                                                                              1664: 0x9002   PopLocalI32             count

000687          write(PL_COUNT, count)                                                                                                                                        1665: 0x8012   PushConstU10            18 (0x0012)
                                                                                                                                                                              1666: 0x8802   PushLocalI32            count
                                                                                                                                                                              1667: 0x000D   PushMe                  
                                                                                                                                                                              1668: 0x5599   BranchSubrBack          1260

000688      End Sub                                                                                                                                                           1669: 0x0091   Return                  

000689      
000690      Public Sub calibrate()                                                                                                                                            1670: 0x1800   EntryPoint              ValTypParams=0, RefTypParams=0
                                                                                                                                                                              1671: 0xE043   AllocateStackSpace      ValTypeSize=2, RefTypeSize=3

000691          'Calibration routine, don't know if this works or not!
000692          Dim accel_bias As ListOfInteger = New ListOfInteger                                                                                                           1672: 0x800E   PushConstU10            14 (0x000E)
                                                                                                                                                                              1673: 0x0010   ClassNew                
                                                                                                                                                                              1674: 0x9400   PopLocalRef             accel_bias

000693          accel_bias.Add(0)                                                                                                                                             1675: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1676: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1677: 0x00A3   ListAdd                 

000694          accel_bias.Add(0)                                                                                                                                             1678: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1679: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1680: 0x00A3   ListAdd                 

000695          accel_bias.Add(0)                                                                                                                                             1681: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1682: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1683: 0x00A3   ListAdd                 

000696          Dim fcount As Integer
000697          Dim temp As ListOfShort = New ListOfShort                                                                                                                     1684: 0x800D   PushConstU10            13 (0x000D)
                                                                                                                                                                              1685: 0x0010   ClassNew                
                                                                                                                                                                              1686: 0x9401   PopLocalRef             temp

000698          
000699          // Clear all interrupts by reading the data output and F_STATUS registers
000700          temp = readAccelData()                                                                                                                                        1687: 0x000D   PushMe                  
                                                                                                                                                                              1688: 0x569B   BranchSubrBack          1022
                                                                                                                                                                              1689: 0x9401   PopLocalRef             temp

000701          read(F_STATUS)                                                                                                                                                1690: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1691: 0x000D   PushMe                  
                                                                                                                                                                              1692: 0x55D3   BranchSubrBack          1226
                                                                                                                                                                              1693: 0xE420   FreeStackSpace          ValTypeSize=1, RefTypeSize=0

000702          
000703          Standby() // Must be in standby to change registers                                                                                                           1694: 0x000D   PushMe                  
                                                                                                                                                                              1695: 0x55F8   BranchSubrBack          1192

000704          
000705          SetWakeModeFrequency(AODR_100HZ) // select 100 Hz ODR                                                                                                         1696: 0x8018   PushConstU10            24 (0x0018)
                                                                                                                                                                              1697: 0x000D   PushMe                  
                                                                                                                                                                              1698: 0x5581   BranchSubrBack          1314

000706          fcount = 100 // sample for 1 second                                                                                                                           1699: 0x8064   PushConstU10            100 (0x0064)
                                                                                                                                                                              1700: 0x9000   PopLocalI32             fcount

000707          SetRange(FULL_SCALE_2G) // select 2 g full scale                                                                                                              1701: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1702: 0x000D   PushMe                  
                                                                                                                                                                              1703: 0x559A   BranchSubrBack          1294

000708          Dim accelsensitivity As Short = 1024 // 1024 LSB/g                                                                                                            1704: 0xE90A   PushConstBit            1<<10  (0x00000400 Or 1024)
                                                                                                                                                                              1705: 0x9001   PopLocalI32             accelsensitivity

000709          
000710          Active() // Set to active to start collecting data                                                                                                            1706: 0x000D   PushMe                  
                                                                                                                                                                              1707: 0x55FA   BranchSubrBack          1202

000711          
                                                                                                                                                                              1708: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1709: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1710: 0x0004   DupVal2                 
                                                                                                                                                                              1711: 0x0031   IntSub                  
                                                                                                                                                                              1712: 0x0002   ExchangeVal             
                                                                                                                                                                              1713: 0x8800   PushLocalI32            fcount
000712          For ii As Integer = 0 To fcount                                                                                                                               1714: 0x4827   BranchForNextInt        1754

000713              temp = readAccelData()                                                                                                                                    1715: 0x000D   PushMe                  
                                                                                                                                                                              1716: 0x56B7   BranchSubrBack          1022
                                                                                                                                                                              1717: 0x9401   PopLocalRef             temp

000714              
000715              accel_bias(0) += temp(0)                                                                                                                                  1718: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1719: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1720: 0x00B5   ListItemPut             
                                                                                                                                                                              1721: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1722: 0x8C01   PushLocalRef            temp
                                                                                                                                                                              1723: 0x00B4   ListItemGet             
                                                                                                                                                                              1724: 0x001E   IntAdd                  
                                                                                                                                                                              1725: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1726: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1727: 0x00B5   ListItemPut             

000716              accel_bias(1) += temp(1)                                                                                                                                  1728: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1729: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1730: 0x00B5   ListItemPut             
                                                                                                                                                                              1731: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1732: 0x8C01   PushLocalRef            temp
                                                                                                                                                                              1733: 0x00B4   ListItemGet             
                                                                                                                                                                              1734: 0x001E   IntAdd                  
                                                                                                                                                                              1735: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1736: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1737: 0x00B5   ListItemPut             

000717              accel_bias(2) += temp(2)                                                                                                                                  1738: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              1739: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1740: 0x00B5   ListItemPut             
                                                                                                                                                                              1741: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              1742: 0x8C01   PushLocalRef            temp
                                                                                                                                                                              1743: 0x00B4   ListItemGet             
                                                                                                                                                                              1744: 0x001E   IntAdd                  
                                                                                                                                                                              1745: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              1746: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1747: 0x00B5   ListItemPut             

000718              
000719              Thread.Sleep(15000) // wait for a new data reading (100 Hz)                                                                                               1748: 0x0110   PushConstI32            15000 (0x00003A98)
                                                                                                                                                                              1749: 0x3A98                           
                                                                                                                                                                              1750: 0x0000                           
                                                                                                                                                                              1751: 0x00D5   ThreadSleep             
                                                                                                                                                                              1752: 0xE420   FreeStackSpace          ValTypeSize=1, RefTypeSize=0

                                                                                                                                                                              1753: 0x5028   BranchBack              1714
000720          Next                                                                                                                                                          1754: 0xE460   FreeStackSpace          ValTypeSize=3, RefTypeSize=0

000721          
000722          accel_bias(0) = accel_bias(0) / fcount // get average values                                                                                                  1755: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1756: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1757: 0x00B4   ListItemGet             
                                                                                                                                                                              1758: 0x8800   PushLocalI32            fcount
                                                                                                                                                                              1759: 0x0078   CvtIntToFlt1            
                                                                                                                                                                              1760: 0x007E   CvtIntToFlt             
                                                                                                                                                                              1761: 0x003B   FltDiv                  
                                                                                                                                                                              1762: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1763: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1764: 0x00B5   ListItemPut             

000723          accel_bias(1) = accel_bias(1) / fcount                                                                                                                        1765: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1766: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1767: 0x00B4   ListItemGet             
                                                                                                                                                                              1768: 0x8800   PushLocalI32            fcount
                                                                                                                                                                              1769: 0x0078   CvtIntToFlt1            
                                                                                                                                                                              1770: 0x007E   CvtIntToFlt             
                                                                                                                                                                              1771: 0x003B   FltDiv                  
                                                                                                                                                                              1772: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1773: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1774: 0x00B5   ListItemPut             

000724          accel_bias(2) = accel_bias(2) / fcount                                                                                                                        1775: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              1776: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1777: 0x00B4   ListItemGet             
                                                                                                                                                                              1778: 0x8800   PushLocalI32            fcount
                                                                                                                                                                              1779: 0x0078   CvtIntToFlt1            
                                                                                                                                                                              1780: 0x007E   CvtIntToFlt             
                                                                                                                                                                              1781: 0x003B   FltDiv                  
                                                                                                                                                                              1782: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              1783: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1784: 0x00B5   ListItemPut             

000725          
000726          If (accel_bias(2) > 0) Then                                                                                                                                   1785: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              1786: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1787: 0x00B4   ListItemGet             
                                                                                                                                                                              1788: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1789: 0x2C09   BranchLE                1799

000727              accel_bias(2) -= accelsensitivity // Remove gravity from the z-axis accelerometer bias calculation                                                        1790: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              1791: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1792: 0x00B5   ListItemPut             
                                                                                                                                                                              1793: 0x8801   PushLocalI32            accelsensitivity
                                                                                                                                                                              1794: 0x0031   IntSub                  
                                                                                                                                                                              1795: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              1796: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1797: 0x00B5   ListItemPut             

                                                                                                                                                                              1798: 0x4008   Branch                  1807
000728          Else                                                                                                                                                          

000729              accel_bias(2) += accelsensitivity                                                                                                                         1799: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              1800: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1801: 0x00B5   ListItemPut             
                                                                                                                                                                              1802: 0x8801   PushLocalI32            accelsensitivity
                                                                                                                                                                              1803: 0x001E   IntAdd                  
                                                                                                                                                                              1804: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              1805: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1806: 0x00B5   ListItemPut             

000730          End If
000731          
000732          Dim rawData As ListOfByte = New ListOfByte                                                                                                                    1807: 0x800C   PushConstU10            12 (0x000C)
                                                                                                                                                                              1808: 0x0010   ClassNew                
                                                                                                                                                                              1809: 0x9402   PopLocalRef             rawData

000733          rawData.Add((-accel_bias(0) / 2).ToByte& 0xff) // get average values                                                                                          1810: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1811: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1812: 0x00B4   ListItemGet             
                                                                                                                                                                              1813: 0x002B   IntNeg                  
                                                                                                                                                                              1814: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              1815: 0x0078   CvtIntToFlt1            
                                                                                                                                                                              1816: 0x007E   CvtIntToFlt             
                                                                                                                                                                              1817: 0x003B   FltDiv                  
                                                                                                                                                                              1818: 0x007B   CvtFltToInt             
                                                                                                                                                                              1819: 0x007D   CvtIntToByt             
                                                                                                                                                                              1820: 0x80FF   PushConstU10            255 (0x00FF)
                                                                                                                                                                              1821: 0x001F   IntAnd                  
                                                                                                                                                                              1822: 0x8C02   PushLocalRef            rawData
                                                                                                                                                                              1823: 0x00A3   ListAdd                 

000734          rawData.Add((-accel_bias(1) / 2).ToByte& 0xff) // get average values                                                                                          1824: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1825: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1826: 0x00B4   ListItemGet             
                                                                                                                                                                              1827: 0x002B   IntNeg                  
                                                                                                                                                                              1828: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              1829: 0x0078   CvtIntToFlt1            
                                                                                                                                                                              1830: 0x007E   CvtIntToFlt             
                                                                                                                                                                              1831: 0x003B   FltDiv                  
                                                                                                                                                                              1832: 0x007B   CvtFltToInt             
                                                                                                                                                                              1833: 0x007D   CvtIntToByt             
                                                                                                                                                                              1834: 0x80FF   PushConstU10            255 (0x00FF)
                                                                                                                                                                              1835: 0x001F   IntAnd                  
                                                                                                                                                                              1836: 0x8C02   PushLocalRef            rawData
                                                                                                                                                                              1837: 0x00A3   ListAdd                 

000735          rawData.Add((-accel_bias(2) / 2).ToByte& 0xff) // get average values                                                                                          1838: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              1839: 0x8C00   PushLocalRef            accel_bias
                                                                                                                                                                              1840: 0x00B4   ListItemGet             
                                                                                                                                                                              1841: 0x002B   IntNeg                  
                                                                                                                                                                              1842: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              1843: 0x0078   CvtIntToFlt1            
                                                                                                                                                                              1844: 0x007E   CvtIntToFlt             
                                                                                                                                                                              1845: 0x003B   FltDiv                  
                                                                                                                                                                              1846: 0x007B   CvtFltToInt             
                                                                                                                                                                              1847: 0x007D   CvtIntToByt             
                                                                                                                                                                              1848: 0x80FF   PushConstU10            255 (0x00FF)
                                                                                                                                                                              1849: 0x001F   IntAnd                  
                                                                                                                                                                              1850: 0x8C02   PushLocalRef            rawData
                                                                                                                                                                              1851: 0x00A3   ListAdd                 

000736          
000737          Standby() // Must be in standby to change registers                                                                                                           1852: 0x000D   PushMe                  
                                                                                                                                                                              1853: 0x5696   BranchSubrBack          1192

000738          
000739          write(OFF_X, rawData(0)) // X-axis compensation                                                                                                               1854: 0x802F   PushConstU10            47 (0x002F)
                                                                                                                                                                              1855: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1856: 0x8C02   PushLocalRef            rawData
                                                                                                                                                                              1857: 0x00B4   ListItemGet             
                                                                                                                                                                              1858: 0x000D   PushMe                  
                                                                                                                                                                              1859: 0x5658   BranchSubrBack          1260

000740          write(OFF_Y, rawData(1)) // Y-axis compensation                                                                                                               1860: 0x8030   PushConstU10            48 (0x0030)
                                                                                                                                                                              1861: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1862: 0x8C02   PushLocalRef            rawData
                                                                                                                                                                              1863: 0x00B4   ListItemGet             
                                                                                                                                                                              1864: 0x000D   PushMe                  
                                                                                                                                                                              1865: 0x565E   BranchSubrBack          1260

000741          write(OFF_Z, rawData(2)) // z-axis compensation                                                                                                               1866: 0x8031   PushConstU10            49 (0x0031)
                                                                                                                                                                              1867: 0x8002   PushConstU10            2 (0x0002)
                                                                                                                                                                              1868: 0x8C02   PushLocalRef            rawData
                                                                                                                                                                              1869: 0x00B4   ListItemGet             
                                                                                                                                                                              1870: 0x000D   PushMe                  
                                                                                                                                                                              1871: 0x5664   BranchSubrBack          1260

000742          
000743          Active() // Set to active to start reading                                                                                                                    1872: 0x000D   PushMe                  
                                                                                                                                                                              1873: 0x56A0   BranchSubrBack          1202

000744      End Sub                                                                                                                                                           1874: 0x0091   Return                  

000745      
000746      'ConfigureShockInterrupt - configures device to interrupt on shock (currently will interupt on any axis, x,y,z axis configuration can be added later)
000747      '
000748      'threshold As Float - trigger threshold (0.0 Gs ~ 8 Gs), 0.063mg steps
000749      'Duration As Float - Duration for threshold to be present to active interrupt (0 ms (immediate) to 5100ms), 20ms steps @ 50Hz
000750      Public Function ConfigureShockInterrupt(threshold As Float, duration As Float) As Boolean                                                                         1875: 0x1820   EntryPoint              ValTypParams=2, RefTypParams=0
                                                                                                                                                                              1876: 0xE020   AllocateStackSpace      ValTypeSize=1, RefTypeSize=0

000751          Dim result As Boolean = False
000752          'threshold in g 0 - 8.0
000753          'duration in ms
000754          
000755          If ((threshold >= LOW_TRIGGER_THRESHOLD And threshold <= HIGH_TRIGGER_THRESHOLD)) And ((duration >= LOW_DURATION_MS And duration <= HIGH_DURATION_MS)) Then   1877: 0x8800   PushLocalI32            threshold
                                                                                                                                                                              1878: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1879: 0x003A   FltCmp                  
                                                                                                                                                                              1880: 0x0023   IntCmpGE                
                                                                                                                                                                              1881: 0x8800   PushLocalI32            threshold
                                                                                                                                                                              1882: 0xEA08   PushConstFlt            8.0
                                                                                                                                                                              1883: 0x003A   FltCmp                  
                                                                                                                                                                              1884: 0x0025   IntCmpLE                
                                                                                                                                                                              1885: 0x001F   IntAnd                  
                                                                                                                                                                              1886: 0x8801   PushLocalI32            duration
                                                                                                                                                                              1887: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1888: 0x003A   FltCmp                  
                                                                                                                                                                              1889: 0x0023   IntCmpGE                
                                                                                                                                                                              1890: 0x8801   PushLocalI32            duration
                                                                                                                                                                              1891: 0x0110   PushConstI32            1168072704 (0x459F6000)
                                                                                                                                                                              1892: 0x6000                           
                                                                                                                                                                              1893: 0x459F                           
                                                                                                                                                                              1894: 0x003A   FltCmp                  
                                                                                                                                                                              1895: 0x0025   IntCmpLE                
                                                                                                                                                                              1896: 0x001F   IntAnd                  
                                                                                                                                                                              1897: 0x001F   IntAnd                  
                                                                                                                                                                              1898: 0x3C25   BranchFalse             1936

000756              
000757              'Put device in standby mode (can only write registers in Standby mode)
000758              Standby()                                                                                                                                                 1899: 0x000D   PushMe                  
                                                                                                                                                                              1900: 0x56C5   BranchSubrBack          1192

000759              
000760              'Setup the 3 data rate bits, from DR 0 to 7
000761              SetWakeModeFrequency(AODR_50HZ) // set 50 Hz Wake Mode                                                                                                    1901: 0x8020   PushConstU10            32 (0x0020)
                                                                                                                                                                              1902: 0x000D   PushMe                  
                                                                                                                                                                              1903: 0x564E   BranchSubrBack          1314

000762              'Low Power Mode (sleep mode on)
000763              SetSleepMode(SLPE_MASK) // clear bit 3, enable sleep mode                                                                                                 1904: 0x8004   PushConstU10            4 (0x0004)
                                                                                                                                                                              1905: 0x000D   PushMe                  
                                                                                                                                                                              1906: 0x5629   BranchSubrBack          1354

000764              'set Awake resolution
000765              SetWakeModeResolution(MOD_LOW_POWER) // clear bits 0 and 1, sent wake low power mode                                                                      1907: 0x8003   PushConstU10            3 (0x0003)
                                                                                                                                                                              1908: 0x000D   PushMe                  
                                                                                                                                                                              1909: 0x5640   BranchSubrBack          1334

000766              'set Sleep resolution
000767              SetSleepModeResolution(SMOD_LOW_POWER) // clear bits 4 and 5, set sleep mode low power                                                                    1910: 0x8018   PushConstU10            24 (0x0018)
                                                                                                                                                                              1911: 0x000D   PushMe                  
                                                                                                                                                                              1912: 0x561B   BranchSubrBack          1374

000768              'Wakeup if transient interrupt, push/pull, active low (set in New config)
000769              'set sleep mode interrupt scheme
000770              SetSleepModeInterrupts(WAKE_TRANS) // clear bit 6, set Wake on TRANS Interrupt                                                                            1913: 0x8040   PushConstU10            64 (0x0040)
                                                                                                                                                                              1914: 0x000D   PushMe                  
                                                                                                                                                                              1915: 0x560A   BranchSubrBack          1394

000771              'enable transient interrupts
000772              SetEnableInterrupts(INT_EN_TRANS) // clear bit 5, set TRANS Interrupt                                                                                     1916: 0x8020   PushConstU10            32 (0x0020)
                                                                                                                                                                              1917: 0x000D   PushMe                  
                                                                                                                                                                              1918: 0x55FF   BranchSubrBack          1408

000773              'route interrupt to INT1 pin (ff sets all interrupts to INT1 , 00 to INT2)
000774              SetInterruptsINT(INT_CFG_TRANS) // clear bit 5, set TRANS Interrupt to INT1                                                                               1919: 0x8020   PushConstU10            32 (0x0020)
                                                                                                                                                                              1920: 0x000D   PushMe                  
                                                                                                                                                                              1921: 0x55F4   BranchSubrBack          1422

000775              'latch events and enable on all axis (now only Z axis)
000776              SetTransientCFG(TELE | ZTEFE) // transients latched (TELE), Z enabled. High Pass Filter (bit 0) enabled by default                                        1922: 0x8018   PushConstU10            24 (0x0018)
                                                                                                                                                                              1923: 0x000D   PushMe                  
                                                                                                                                                                              1924: 0x55E9   BranchSubrBack          1436

000777              'Set Threshold 0.0 ~ 23.622 Gs Bit 8 of TRANSIENT_THS sets debounce mode (0 default)
000778              SetTransientThreshold(threshold) //A 7-bit unsigned number, with 0.063 g/LSB. The maximum threshold is ±8g (irrispective of Range setting).               1925: 0x8800   PushLocalI32            threshold
                                                                                                                                                                              1926: 0x000D   PushMe                  
                                                                                                                                                                              1927: 0x55E6   BranchSubrBack          1442

000779              'Set Duration (in ms if set to 0, causes interrupt immediately, once threshold exceeded
000780              SetTransientDuration(duration)                                                                                                                            1928: 0x8801   PushLocalI32            duration
                                                                                                                                                                              1929: 0x000D   PushMe                  
                                                                                                                                                                              1930: 0x55D1   BranchSubrBack          1466

000781              
000782              'Put device in active mode
000783              Active()                                                                                                                                                  1931: 0x000D   PushMe                  
                                                                                                                                                                              1932: 0x56DB   BranchSubrBack          1202

000784              result = True                                                                                                                                             1933: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1934: 0x9002   PopLocalI32             result

                                                                                                                                                                              1935: 0x4002   Branch                  1938
000785          Else                                                                                                                                                          

000786              'incorrect range, return error
000787              result = False                                                                                                                                            1936: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1937: 0x9002   PopLocalI32             result

000788          End If
000789          Return result                                                                                                                                                 1938: 0x8802   PushLocalI32            result
                                                                                                                                                                              1939: 0x0092   ReturnValType           

000790      End Function                                                                                                                                                      1940: 0x0093   Return0                 

000791      
000792      'ConfigureOrientationInterrupt - configures device to interrupt on orientation change
000793      Public Function ConfigureOrientationInterrupt(threshold As Float, duration As Float) As Boolean                                                                   1941: 0x1820   EntryPoint              ValTypParams=2, RefTypParams=0
                                                                                                                                                                              1942: 0xE020   AllocateStackSpace      ValTypeSize=1, RefTypeSize=0

000794          Dim result As Boolean = False
000795          'threshold in degrees 45 degrees default
000796          'duration in ms
000797          
000798          If (duration >= LOW_DURATION_MS And duration <= HIGH_DURATION_MS) Then                                                                                        1943: 0x8801   PushLocalI32            duration
                                                                                                                                                                              1944: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1945: 0x003A   FltCmp                  
                                                                                                                                                                              1946: 0x0023   IntCmpGE                
                                                                                                                                                                              1947: 0x8801   PushLocalI32            duration
                                                                                                                                                                              1948: 0x0110   PushConstI32            1168072704 (0x459F6000)
                                                                                                                                                                              1949: 0x6000                           
                                                                                                                                                                              1950: 0x459F                           
                                                                                                                                                                              1951: 0x003A   FltCmp                  
                                                                                                                                                                              1952: 0x0025   IntCmpLE                
                                                                                                                                                                              1953: 0x001F   IntAnd                  
                                                                                                                                                                              1954: 0x3C2B   BranchFalse             1998

000799              
000800              Standby()                                                                                                                                                 1955: 0x000D   PushMe                  
                                                                                                                                                                              1956: 0x56FD   BranchSubrBack          1192

000801              
000802              'Setup the 3 data rate bits, from DR 0 to 7
000803              SetWakeModeFrequency(AODR_50HZ) // set 50 Hz Wake Mode                                                                                                    1957: 0x8020   PushConstU10            32 (0x0020)
                                                                                                                                                                              1958: 0x000D   PushMe                  
                                                                                                                                                                              1959: 0x5686   BranchSubrBack          1314

000804              'Low Power Mode (sleep mode on)
000805              SetSleepMode(SLPE_MASK) // clear bit 3, enable sleep mode                                                                                                 1960: 0x8004   PushConstU10            4 (0x0004)
                                                                                                                                                                              1961: 0x000D   PushMe                  
                                                                                                                                                                              1962: 0x5661   BranchSubrBack          1354

000806              'set Awake resolution
000807              SetWakeModeResolution(MOD_LOW_POWER) // clear bits 0 and 1, sent wake low power mode                                                                      1963: 0x8003   PushConstU10            3 (0x0003)
                                                                                                                                                                              1964: 0x000D   PushMe                  
                                                                                                                                                                              1965: 0x5678   BranchSubrBack          1334

000808              'set Sleep resolution
000809              SetSleepModeResolution(SMOD_LOW_POWER) // clear bits 4 and 5, set sleep mode low power                                                                    1966: 0x8018   PushConstU10            24 (0x0018)
                                                                                                                                                                              1967: 0x000D   PushMe                  
                                                                                                                                                                              1968: 0x5653   BranchSubrBack          1374

000810              'Wakeup if orientation interrupt, push/pull, active low (set in New config)
000811              'set sleep mode interrupt scheme
000812              SetSleepModeInterrupts(WAKE_LNDPRT) // clear bit 5, set Wake on LP Interrupt                                                                              1969: 0x8020   PushConstU10            32 (0x0020)
                                                                                                                                                                              1970: 0x000D   PushMe                  
                                                                                                                                                                              1971: 0x5642   BranchSubrBack          1394

000813              'enable orientation interrupts
000814              SetEnableInterrupts(INT_EN_LNDPRT) // clear bit 4, set LP Interrupt                                                                                       1972: 0x8010   PushConstU10            16 (0x0010)
                                                                                                                                                                              1973: 0x000D   PushMe                  
                                                                                                                                                                              1974: 0x5637   BranchSubrBack          1408

000815              'route interrupt to INT1 pin (ff sets all interrupts to INT1 , 00 to INT2)
000816              SetInterruptsINT(INT_CFG_LNDPRT) // clear bit 4, set LP Interrupt to INT1                                                                                 1975: 0x8010   PushConstU10            16 (0x0010)
                                                                                                                                                                              1976: 0x000D   PushMe                  
                                                                                                                                                                              1977: 0x562C   BranchSubrBack          1422

000817              // Set up portrait/landscape registers - 4 steps:
000818              // 1. Enable P/L
000819              // 2. Set the back/front angle trigger points (z-lock)
000820              // 3. Set the threshold/hysteresis angle
000821              // 4. Set the debouce rate
000822              // For more info check out this app note: http://cache.freescale.com/files/sensors/doc/app_note/AN4068.pdf
000823              EnablePL(True) 'Enable P/L (debounce enabled by default)                                                                                                  1978: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1979: 0x000D   PushMe                  
                                                                                                                                                                              1980: 0x55F3   BranchSubrBack          1482

000824              EnablePLDebounce(True) 'set debounce to mode 1 (default)                                                                                                  1981: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1982: 0x000D   PushMe                  
                                                                                                                                                                              1983: 0x55DF   BranchSubrBack          1505

000825              SetPLZLOCKDegrees(43) 'set to 43 degrees: ZLOCK Treshold (bits 0,1,2) 0 = 14° (min), 0x04 = 29° (default) x07 = 43° (max)                                 1984: 0xEA2B   PushConstFlt            43.0
                                                                                                                                                                              1985: 0x000D   PushMe                  
                                                                                                                                                                              1986: 0x55BC   BranchSubrBack          1543

000826              //SetPLZLOCK(0x07)    'same as above, but set directly
000827              SetPLBFThreshold(threshold) 'BF deg threshold (45 default)                                                                                                1987: 0x8800   PushLocalI32            threshold
                                                                                                                                                                              1988: 0x000D   PushMe                  
                                                                                                                                                                              1989: 0x55A7   BranchSubrBack          1567

000828              //SetPLHysteresis(14)     '14deg hyst (14 default)
000829              //SetPLCount(0x05)          'debounce counter 0x05 = 100ms (at 50 hz in Low Power mode)
000830              SetPLDuration(duration) 'debounce counter 0x10 = 320ms (at 50 hz LP mode) if set to 0 causes interrupt immediately, once threshold exceeded               1990: 0x8801   PushLocalI32            duration
                                                                                                                                                                              1991: 0x000D   PushMe                  
                                                                                                                                                                              1992: 0x5553   BranchSubrBack          1654

000831              //SetPLCount(0x10)
000832              
000833              Active()                                                                                                                                                  1993: 0x000D   PushMe                  
                                                                                                                                                                              1994: 0x5719   BranchSubrBack          1202

000834              result = True                                                                                                                                             1995: 0x8001   PushConstU10            1 (0x0001)
                                                                                                                                                                              1996: 0x9002   PopLocalI32             result

                                                                                                                                                                              1997: 0x4002   Branch                  2000
000835          Else                                                                                                                                                          

000836              'incorrect range, return error
000837              result = False                                                                                                                                            1998: 0x8000   PushConstU10            0 (0x0000)
                                                                                                                                                                              1999: 0x9002   PopLocalI32             result

000838          End If
000839          Return result                                                                                                                                                 2000: 0x8802   PushLocalI32            result
                                                                                                                                                                              2001: 0x0092   ReturnValType           

000840      End Function                                                                                                                                                      2002: 0x0093   Return0                 

000841  End Class                                                                                                                                                             707:  0x0097   ReturnMe                


****** BLOCKS and VARIABLES for MMA8652
    Block Class (Line 3:841)
        MMA8652         Me              (ReadOnly, Offset=0)
        Object          MyBase          (ReadOnly, Offset=0)
        Byte            I2C_ADDR        (Literal=29)
        Integer         I2C_SPEED       (Literal=400000)
        Byte            CTRL_ID_DEFAULT (Literal=29)
        Byte            STATUS          (Literal=0)
        Byte            F_STATUS        (Literal=0)
        Byte            OUT_X_MSB       (Literal=1)
        Byte            OUT_X_LSB       (Literal=2)
        Byte            OUT_Y_MSB       (Literal=3)
        Byte            OUT_Y_LSB       (Literal=4)
        Byte            OUT_Z_MSB       (Literal=5)
        Byte            OUT_Z_LSB       (Literal=6)
        Byte            F_SETUP         (Literal=9)
        Byte            TRIG_CFG        (Literal=10)
        Byte            SYSMOD          (Literal=11)
        Byte            INT_SOURCE      (Literal=12)
        Byte            WHO_AM_I        (Literal=13)
        Byte            XYZ_DATA_CFG    (Literal=14)
        Byte            HP_FILTER_CUTOFF(Literal=15)
        Byte            PL_STATUS       (Literal=16)
        Byte            PL_CFG          (Literal=17)
        Byte            PL_COUNT        (Literal=18)
        Byte            PL_BF_ZCOMP     (Literal=19)
        Byte            PL_THS          (Literal=20)
        Byte            FF_MT_CFG       (Literal=21)
        Byte            FF_MT_SRC       (Literal=22)
        Byte            FF_MT_THS       (Literal=23)
        Byte            FF_MT_COUNT     (Literal=24)
        Byte            TRANSIENT_CFG   (Literal=29)
        Byte            TRANSIENT_SRC   (Literal=30)
        Byte            TRANSIENT_THS   (Literal=31)
        Byte            TRANSIENT_COUNT (Literal=32)
        Byte            PULSE_CFG       (Literal=33)
        Byte            PULSE_SRC       (Literal=34)
        Byte            PULSE_THSX      (Literal=35)
        Byte            PULSE_THSY      (Literal=36)
        Byte            PULSE_THSZ      (Literal=37)
        Byte            PULSE_TMLT      (Literal=38)
        Byte            PULSE_LTCY      (Literal=39)
        Byte            PULSE_WIND      (Literal=40)
        Byte            ASLP_COUNT      (Literal=41)
        Byte            CTRL_REG1       (Literal=42)
        Byte            CTRL_REG2       (Literal=43)
        Byte            CTRL_REG3       (Literal=44)
        Byte            CTRL_REG4       (Literal=45)
        Byte            CTRL_REG5       (Literal=46)
        Byte            OFF_X           (Literal=47)
        Byte            OFF_Y           (Literal=48)
        Byte            OFF_Z           (Literal=49)
        Byte            POSITION_DEFAULT(Literal=2)
        Byte            DELAY_DEFAULT   (Literal=200)
        Byte            STATUS_ZYXDR    (Literal=8)
        Byte            BUF_SIZE        (Literal=6)
        Byte            SRC_ASLP_MASK   (Literal=128)
        Byte            SRC_FIFO_MASK   (Literal=64)
        Byte            SRC_TRANS_MASK  (Literal=32)
        Byte            SRC_LNDPRT_MASK (Literal=16)
        Byte            SRC_PULSE_MASK  (Literal=8)
        Byte            SRC_FF_MT_MASK  (Literal=4)
        Byte            SRC_DRDY_MASK   (Literal=1)
        Byte            ST_MASK         (Literal=128)
        Byte            RST_MASK        (Literal=64)
        Byte            SMODS1_MASK     (Literal=16)
        Byte            SMODS0_MASK     (Literal=8)
        Byte            SLPE_MASK       (Literal=4)
        Byte            MODS1_MASK      (Literal=2)
        Byte            MODS0_MASK      (Literal=1)
        Byte            SMODS_MASK      (Literal=24)
        Byte            MODS_MASK       (Literal=3)
        Byte            DBCNTM_MASK     (Literal=128)
        Byte            PL_EN_MASK      (Literal=64)
        Byte            FS1_MASK        (Literal=2)
        Byte            FS0_MASK        (Literal=1)
        Byte            FS_MASK         (Literal=3)
        Byte            ASLP_RATE1_MASK (Literal=128)
        Byte            ASLP_RATE0_MASK (Literal=64)
        Byte            DR2_MASK        (Literal=32)
        Byte            DR1_MASK        (Literal=16)
        Byte            DR0_MASK        (Literal=8)
        Byte            LNOISE_MASK     (Literal=4)
        Byte            FREAD_MASK      (Literal=2)
        Byte            ACTIVE_MASK     (Literal=1)
        Byte            ASLP_RATE_MASK  (Literal=192)
        Byte            DR_MASK         (Literal=56)
        Byte            FGERR_MASK      (Literal=128)
        Byte            FGT_4_MASK      (Literal=64)
        Byte            FGT_3_MASK      (Literal=32)
        Byte            FGT_2_MASK      (Literal=16)
        Byte            FGT_1_MASK      (Literal=8)
        Byte            FGT_0_MASK      (Literal=4)
        Byte            FGT_MASK        (Literal=124)
        Byte            SYSMOD1_MASK    (Literal=2)
        Byte            SYSMOD0_MASK    (Literal=1)
        Byte            SYSMOD_MASK     (Literal=3)
        Byte            BKFR1           (Literal=128)
        Byte            BKFR0           (Literal=64)
        Byte            ZLOCK2          (Literal=4)
        Byte            ZLOCK1          (Literal=2)
        Byte            ZLOCK0          (Literal=1)
        Byte            BKFR1_MASK      (Literal=128)
        Byte            BKFR0_MASK      (Literal=64)
        Byte            ZLOCK2_MASK     (Literal=4)
        Byte            ZLOCK1_MASK     (Literal=2)
        Byte            ZLOCK0_MASK     (Literal=1)
        Byte            BKFR_MASK       (Literal=192)
        Byte            ZLOCK_MASK      (Literal=7)
        Byte            P_L_THS4        (Literal=128)
        Byte            P_L_THS3        (Literal=64)
        Byte            P_L_THS2        (Literal=32)
        Byte            P_L_THS1        (Literal=16)
        Byte            P_L_THS0        (Literal=8)
        Byte            HYS2            (Literal=4)
        Byte            HYS1            (Literal=2)
        Byte            HYS0            (Literal=1)
        Byte            P_L_THS4_MASK   (Literal=128)
        Byte            P_L_THS3_MASK   (Literal=64)
        Byte            P_L_THS2_MASK   (Literal=32)
        Byte            P_L_THS1_MASK   (Literal=16)
        Byte            P_L_THS0_MASK   (Literal=8)
        Byte            HYS2_MASK       (Literal=4)
        Byte            HYS1_MASK       (Literal=2)
        Byte            HYS0_MASK       (Literal=1)
        Byte            P_L_THS_MASK    (Literal=248)
        Byte            HYS_MASK        (Literal=7)
        Byte            FIFO_GATE_MASK  (Literal=128)
        Byte            WAKE_TRANS_MASK (Literal=64)
        Byte            WAKE_LNDPRT_MASK(Literal=32)
        Byte            WAKE_PULSE_MASK (Literal=16)
        Byte            WAKE_FF_MT_MASK (Literal=8)
        Byte            IPOL_MASK       (Literal=2)
        Byte            PP_OD_MASK      (Literal=1)
        Byte            WAKE_CLEAR_MASK (Literal=60)
        Byte            INT_EN_ASLP_MASK(Literal=128)
        Byte            INT_EN_FIFO_MASK(Literal=64)
        Byte            INT_EN_TRANS_MAS(Literal=32)
        Byte            INT_EN_LNDPRT_MA(Literal=16)
        Byte            INT_EN_PULSE_MAS(Literal=8)
        Byte            INT_EN_FF_MT_MAS(Literal=4)
        Byte            INT_EN_DRDY_MASK(Literal=1)
        Byte            INT_CLEAR_MASK  (Literal=253)
        Byte            INT_CFG_ASLP_MAS(Literal=128)
        Byte            INT_CFG_FIFO_MAS(Literal=64)
        Byte            INT_CFG_TRANS_MA(Literal=32)
        Byte            INT_CFG_LNDPRT_M(Literal=16)
        Byte            INT_CFG_PULSE_MA(Literal=8)
        Byte            INT_CFG_FF_MT_MA(Literal=4)
        Byte            INT_CFG_DRDY_MAS(Literal=1)
        Byte            INT_CFG_CLEAR_MA(Literal=253)
        Byte            TEA_MASK        (Literal=64)
        Byte            ZTRANSE_MASK    (Literal=32)
        Byte            Z_TRANS_POL_MASK(Literal=16)
        Byte            YTRANSE_MASK    (Literal=8)
        Byte            Y_TRANS_POL_MASK(Literal=4)
        Byte            XTRANSE_MASK    (Literal=2)
        Byte            X_TRANS_POL_MASK(Literal=1)
        Byte            TELE_MASK       (Literal=16)
        Byte            ZTEFE_MASK      (Literal=8)
        Byte            YTEFE_MASK      (Literal=4)
        Byte            XTEFE_MASK      (Literal=2)
        Byte            HPF_BYP_MASK    (Literal=1)
        Byte            FULL_SCALE_2G   (Literal=0)
        Byte            FULL_SCALE_4G   (Literal=1)
        Byte            FULL_SCALE_8G   (Literal=2)
        Byte            AODR_800HZ      (Literal=0)
        Byte            AODR_400HZ      (Literal=8)
        Byte            AODR_200HZ      (Literal=16)
        Byte            AODR_100HZ      (Literal=24)
        Byte            AODR_50HZ       (Literal=32)
        Byte            AODR_12_5HZ     (Literal=40)
        Byte            AODR_6_25HZ     (Literal=48)
        Byte            AODR_1_56HZ     (Literal=56)
        Byte            SMOD_NORMAL     (Literal=0)
        Byte            SMOD_LOW_NOISE  (Literal=8)
        Byte            SMOD_HIGH_RES   (Literal=16)
        Byte            SMOD_LOW_POWER  (Literal=24)
        Byte            MOD_NORMAL      (Literal=0)
        Byte            MOD_LOW_NOISE   (Literal=1)
        Byte            MOD_HIGH_RES    (Literal=2)
        Byte            MOD_LOW_POWER   (Literal=3)
        Byte            SYSMOD_STANDBY  (Literal=0)
        Byte            SYSMOD_WAKE     (Literal=2)
        Byte            SYSMOD_SLEEP    (Literal=1)
        Byte            FIFO_GATE       (Literal=128)
        Byte            WAKE_TRANS      (Literal=64)
        Byte            WAKE_LNDPRT     (Literal=32)
        Byte            WAKE_PULSE      (Literal=16)
        Byte            WAKE_FF_MT      (Literal=8)
        Byte            IPOL            (Literal=2)
        Byte            PP_OD           (Literal=1)
        Byte            INT_EN_ASLP     (Literal=128)
        Byte            INT_EN_FIFO     (Literal=64)
        Byte            INT_EN_TRANS    (Literal=32)
        Byte            INT_EN_LNDPRT   (Literal=16)
        Byte            INT_EN_PULSE    (Literal=8)
        Byte            INT_EN_FF_MT    (Literal=4)
        Byte            INT_EN_DRDY     (Literal=1)
        Byte            NEWLP           (Literal=128)
        Byte            LO              (Literal=64)
        Byte            LAPO1           (Literal=4)
        Byte            LAPO0           (Literal=2)
        Byte            BAFRO           (Literal=1)
        Byte            TEA             (Literal=64)
        Byte            ZTRANSE         (Literal=32)
        Byte            Z_TRANS_POL     (Literal=16)
        Byte            YTRANSE         (Literal=8)
        Byte            Y_TRANS_POL     (Literal=4)
        Byte            XTRANSE         (Literal=2)
        Byte            X_TRANS_POL     (Literal=1)
        Byte            INT_CFG_ASLP    (Literal=128)
        Byte            INT_CFG_FIFO    (Literal=64)
        Byte            INT_CFG_TRANS   (Literal=32)
        Byte            INT_CFG_LNDPRT  (Literal=16)
        Byte            INT_CFG_PULSE   (Literal=8)
        Byte            INT_CFG_FF_MT   (Literal=4)
        Byte            INT_CFG_DRDY    (Literal=1)
        Byte            TELE            (Literal=16)
        Byte            ZTEFE           (Literal=8)
        Byte            YTEFE           (Literal=4)
        Byte            XTEFE           (Literal=2)
        Byte            HPF_BYP         (Literal=1)
        Byte            SRC_ASLP        (Literal=128)
        Byte            SRC_FIFO        (Literal=64)
        Byte            SRC_TRANS       (Literal=32)
        Byte            SRC_LNDPRT      (Literal=16)
        Byte            SRC_PULSE       (Literal=8)
        Byte            SRC_FF_MT       (Literal=4)
        Byte            SRC_DRDY        (Literal=1)
        Float           LOW_TRIGGER_THRE(Literal=0)
        Float           HIGH_TRIGGER_THR(Literal=8)
        Float           TRANSIENT_THRESH(Literal=0.063)
        Float           LOW_DURATION_MS (Literal=0)
        Float           HIGH_DURATION_MS(Literal=5100)
        Float           DURATION_RESOLUT(Literal=20)
        I2c             gAccelerometer  (MemberRefTypVariableOffset=0)
        Boolean         online          (MemberValTypVariableOffset=4)
        Block Sub New (Line 285:295)
            Block If Then  (Line 287:294)
            End Block
        End Block
        Block Function map_range (Line 297:302)
            Float           old_range       (LocalValTypVariableOffset=5)
            Float           new_range       (LocalValTypVariableOffset=6)
            Float           var             (LocalValTypVariableOffset=0)
            Float           old_min         (LocalValTypVariableOffset=1)
            Float           old_max         (LocalValTypVariableOffset=2)
            Byte            new_min         (LocalValTypVariableOffset=3)
            Byte            new_max         (LocalValTypVariableOffset=4)
        End Block
        Block Function map_range (Line 304:309)
            Float           old_range       (LocalValTypVariableOffset=5)
            Float           new_range       (LocalValTypVariableOffset=6)
            Float           var             (LocalValTypVariableOffset=0)
            Byte            old_min         (LocalValTypVariableOffset=1)
            Byte            old_max         (LocalValTypVariableOffset=2)
            Float           new_min         (LocalValTypVariableOffset=3)
            Float           new_max         (LocalValTypVariableOffset=4)
        End Block
        Block Function GetmsPerCount (Line 311:374)
            Byte            frequency       (LocalValTypVariableOffset=0)
            Byte            mode            (LocalValTypVariableOffset=1)
            Float           ms              (LocalValTypVariableOffset=2)
        End Block
        Block Function GetmsFromFrequency (Line 376:401)
            Byte            frequency       (LocalValTypVariableOffset=0)
            Float           ms              (LocalValTypVariableOffset=1)
        End Block
        Block Function readAccelData (Line 403:413)
            ListOfByte      rawData         (LocalRefTypVariableOffset=0)
            ListOfShort     destination     (LocalRefTypVariableOffset=1)
            Block If Then  (Line 407:411)
            End Block
        End Block
        Block Function readAccelData2sCompliment (Line 415:431)
            ListOfShort     destination     (LocalRefTypVariableOffset=0)
            Block If Then  (Line 418:429)
                Block If Then  (Line 420:422)
                End Block
                Block If Then  (Line 423:425)
                End Block
                Block If Then  (Line 426:428)
                End Block
            End Block
        End Block
        Block Function readIntSource (Line 434:436)
        End Block
        Block Function readPLStatus (Line 439:441)
        End Block
        Block Function readPulseSource (Line 444:446)
        End Block
        Block Function readTransientSource (Line 449:451)
        End Block
        Block Function readFreeFallSource (Line 454:456)
        End Block
        Block Function whoAmI (Line 459:461)
        End Block
        Block Sub Standby (Line 463:466)
        End Block
        Block Sub Active (Line 468:471)
        End Block
        Block Sub SetRegister (Line 473:477)
            ListOfByte      data            (LocalRefTypVariableOffset=0)
            Byte            reg             (LocalValTypVariableOffset=0)
        End Block
        Block Function read (Line 479:488)
            Byte            result          (LocalValTypVariableOffset=1)
            ListOfByte      value           (LocalRefTypVariableOffset=0)
            Byte            address         (LocalValTypVariableOffset=0)
            Block If Then  (Line 484:486)
            End Block
        End Block
        Block Function read (Line 490:495)
            ListOfByte      value           (LocalRefTypVariableOffset=0)
            Byte            address         (LocalValTypVariableOffset=0)
            Byte            length          (LocalValTypVariableOffset=1)
        End Block
        Block Sub write (Line 497:503)
            ListOfByte      data            (LocalRefTypVariableOffset=0)
            Byte            address         (LocalValTypVariableOffset=0)
            Byte            value           (LocalValTypVariableOffset=1)
        End Block
        Block Sub reset (Line 505:510)
            Block While  (Line 507:509)
            End Block
        End Block
        Block Sub SetRange (Line 512:514)
            Byte            range           (LocalValTypVariableOffset=0)
        End Block
        Block Function GetRange (Line 516:518)
        End Block
        Block Sub SetWakeModeFrequency (Line 520:522)
            Byte            frequency       (LocalValTypVariableOffset=0)
        End Block
        Block Function GetWakeModeFrequency (Line 524:526)
        End Block
        Block Sub SetWakeModeResolution (Line 528:530)
            Byte            resolution      (LocalValTypVariableOffset=0)
        End Block
        Block Function GetWakeModeResolution (Line 532:534)
        End Block
        Block Sub SetSleepMode (Line 536:538)
            Byte            mode            (LocalValTypVariableOffset=0)
        End Block
        Block Function GetSleepMode (Line 540:542)
        End Block
        Block Sub SetSleepModeResolution (Line 544:546)
            Byte            resolution      (LocalValTypVariableOffset=0)
        End Block
        Block Function GetSleepModeResolution (Line 548:550)
        End Block
        Block Sub SetSleepModeInterrupts (Line 552:554)
            Byte            interrupts      (LocalValTypVariableOffset=0)
        End Block
        Block Sub SetEnableInterrupts (Line 556:558)
            Byte            interrupts      (LocalValTypVariableOffset=0)
        End Block
        Block Sub SetInterruptsINT (Line 560:563)
            Byte            interrupts      (LocalValTypVariableOffset=0)
        End Block
        Block Sub SetTransientCFG (Line 565:568)
            Byte            transient       (LocalValTypVariableOffset=0)
        End Block
        Block Sub SetTransientThreshold (Line 570:576)
            Byte            thresholdByte   (LocalValTypVariableOffset=1)
            Float           threshold       (LocalValTypVariableOffset=0)
            Block If Then  (Line 573:575)
            End Block
        End Block
        Block Sub SetTransientCount (Line 578:583)
            Byte            count           (LocalValTypVariableOffset=0)
        End Block
        Block Sub SetTransientDuration (Line 585:594)
            Float           msPerCount      (LocalValTypVariableOffset=1)
            Byte            count           (LocalValTypVariableOffset=2)
            Float           duration        (LocalValTypVariableOffset=0)
        End Block
        Block Sub EnablePL (Line 596:602)
            Boolean         enable          (LocalValTypVariableOffset=0)
            Block If Then  (Line 597:599)
            End Block
            Block Else (Line 599:601)
            End Block
        End Block
        Block Sub EnablePLDebounce (Line 604:612)
            Boolean         enable          (LocalValTypVariableOffset=0)
            Block If Then  (Line 607:609)
            End Block
            Block Else (Line 609:611)
            End Block
        End Block
        Block Sub SetPLZLOCK (Line 614:623)
            Byte            zlock           (LocalValTypVariableOffset=0)
            Block If Then  (Line 620:622)
            End Block
        End Block
        Block Sub SetPLZLOCKDegrees (Line 625:635)
            Byte            zlockByte       (LocalValTypVariableOffset=1)
            Float           zlock           (LocalValTypVariableOffset=0)
            Block If Then  (Line 632:634)
            End Block
        End Block
        Block Sub SetPLBFThreshold (Line 637:646)
            Byte            thresholdByte   (LocalValTypVariableOffset=1)
            Float           threshold       (LocalValTypVariableOffset=0)
            Block If Then  (Line 643:645)
            End Block
        End Block
        Block Sub SetPLThreshold (Line 648:658)
            Byte            thresholdByte   (LocalValTypVariableOffset=1)
            Float           threshold       (LocalValTypVariableOffset=0)
            Block If Then  (Line 655:657)
            End Block
        End Block
        Block Sub SetPLHysteresis (Line 660:670)
            Byte            hysteresisByte  (LocalValTypVariableOffset=1)
            Float           hysteresis      (LocalValTypVariableOffset=0)
            Block If Then  (Line 667:669)
            End Block
        End Block
        Block Sub SetPLCount (Line 672:677)
            Byte            count           (LocalValTypVariableOffset=0)
        End Block
        Block Sub SetPLDuration (Line 679:688)
            Float           msPerCount      (LocalValTypVariableOffset=1)
            Byte            count           (LocalValTypVariableOffset=2)
            Float           duration        (LocalValTypVariableOffset=0)
        End Block
        Block Sub calibrate (Line 690:744)
            ListOfInteger   accel_bias      (LocalRefTypVariableOffset=0)
            Integer         fcount          (LocalValTypVariableOffset=0)
            ListOfShort     temp            (LocalRefTypVariableOffset=1)
            Short           accelsensitivity(LocalValTypVariableOffset=1)
            ListOfByte      rawData         (LocalRefTypVariableOffset=2)
            Block For  (Line 712:720)
                Integer         ii              (LocalValTypVariableOffset=2)
            End Block
            Block If Then  (Line 726:728)
            End Block
            Block Else (Line 728:730)
            End Block
        End Block
        Block Function ConfigureShockInterrupt (Line 750:790)
            Boolean         result          (LocalValTypVariableOffset=2)
            Float           threshold       (LocalValTypVariableOffset=0)
            Float           duration        (LocalValTypVariableOffset=1)
            Block If Then  (Line 755:785)
            End Block
            Block Else (Line 785:788)
            End Block
        End Block
        Block Function ConfigureOrientationInterrupt (Line 793:840)
            Boolean         result          (LocalValTypVariableOffset=2)
            Float           threshold       (LocalValTypVariableOffset=0)
            Float           duration        (LocalValTypVariableOffset=1)
            Block If Then  (Line 798:835)
            End Block
            Block Else (Line 835:838)
            End Block
        End Block
        Total Size of Member data including base classes = 8.
    End Block




****** GLOBAL_VARIABLES **********************************************
accel, Class=MMA8652, Offset=0, SourceClass=Main
mcUIDString, Class=String, Offset=4, SourceClass=MQTT
Number, Class=Integer, Offset=8, IsReadoly, SourceClass=Intrinsic
Data, Class=Integer, Offset=12, IsReadoly, SourceClass=Intrinsic
ProgramCounter, Class=Integer, Offset=16, IsReadoly, SourceClass=Intrinsic
data, Class=dataType, Offset=24, SourceClass=Main
Publish_data, Class=Boolean, Offset=20, SourceClass=Main
TimeSinceKnockTriggered, Class=Integer, Offset=28, SourceClass=Main
TimeSinceDoorClosed, Class=Integer, Offset=32, SourceClass=Main


****** LITERALS ***********************************************
     1 String "True"
     4 String "False"
     7 String "\r\n"
     9 String "MCThings/Publish"
    15 String "Status"
    18 String "Booted"
    21 String "Accel Sensor Online"
    27 String "Accel Sensor  Offline"
    34 String "Orientation"
    38 String "Front Facing"
    43 String "Back Facing"
    47 String "Doorknock"
    51 String "Door"
    54 String "Publish"
    57 String " :Boolean Conversion failed"
    65 String "Uptime"
    68 String "BatteryVoltage"
    73 String "Temperature"
    77 String "OnLine"
    80 String "X8"
    82 String "MCThings/"
    86 String "/"
